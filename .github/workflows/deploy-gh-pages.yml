name: Deploy to GitHub Pages

on:
  release:
    types: [published]

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      
    steps:
      - name: Checkout release üõéÔ∏è
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install minifiers
        run: npm install -g html-minifier-terser terser clean-css-cli

      - name: Create gammaledger directory
        run: cp -r ./src ./gammaledger

      - name: Minify JavaScript
        run: find ./gammaledger -type f -name "*.js" -exec terser --compress --mangle --output {} {} \;

      - name: Minify CSS
        run: find ./gammaledger -type f -name "*.css" -exec cleancss -o {} {} \;

      - name: Minify HTML
        run: find ./gammaledger -type f -name "*.html" -exec html-minifier-terser --collapse-whitespace --remove-comments --remove-redundant-attributes --remove-script-type-attributes --remove-tag-whitespace --use-short-doctype --minify-css true --minify-js true --output {} {} \;

      - name: Zip gammaledger folder
        run: zip -r gammaledger-${{ github.event.release.tag_name }}.zip gammaledger

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./gammaledger-${{ github.event.release.tag_name }}.zip
          asset_name: gammaledger-${{ github.event.release.tag_name }}.zip
          asset_content_type: application/zip

      - name: Deploy to gh-pages üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./gammaledger
          branch: gh-pages
          target-folder: ./app
          clean: true
