const DEFAULT_GEMINI_MODEL="gemini-2.5-flash",GEMINI_ALLOWED_MODELS=["gemini-2.5-flash-lite","gemini-2.5-flash","gemini-2.5-pro"],DEFAULT_GEMINI_TEMPERATURE=.25,DEFAULT_GEMINI_ENDPOINT="https://generativelanguage.googleapis.com/v1beta/models",GEMINI_STORAGE_KEY="GammaLedgerGeminiConfig",GEMINI_SECRET_STORAGE_KEY="GammaLedgerGeminiSecret",BUILTIN_SAMPLE_DATA={trades:[{id:"TRD-1001",ticker:"AAPL",strategy:"Long Call",status:"Closed",openedDate:"2025-02-20",closedDate:"2025-03-12",expirationDate:"2025-04-19",exitReason:"Profit target reached",notes:"Breakout continuation. Underlying: Entered after earnings breakout with strong volume confirmation. Risk plan: Target 100% return, stop at -50%.",legs:[{id:"TRD-1001-L1",action:"BUY",side:"OPEN",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-02-20",expirationDate:"2025-04-19",strike:175,premium:1.45,fees:1,underlyingPrice:175.6},{id:"TRD-1001-L2",action:"SELL",side:"CLOSE",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-03-12",expirationDate:"2025-04-19",strike:175,premium:2.89,fees:1,underlyingPrice:181.9}]},{id:"TRD-1002",ticker:"SPY",strategy:"Iron Condor",status:"Closed",openedDate:"2025-04-22",closedDate:"2025-05-18",expirationDate:"2025-05-31",exitReason:"Hit 70% max profit",notes:"Captured IV crush into monthly expiration. Underlying: Range-bound price action with elevated IV Rank. Risk plan: Take profit at 70%, roll if breach at 2x credit.",legs:[{id:"TRD-1002-L1",action:"SELL",side:"OPEN",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-04-22",expirationDate:"2025-05-31",strike:510,premium:.75,fees:.3},{id:"TRD-1002-L2",action:"BUY",side:"OPEN",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-04-22",expirationDate:"2025-05-31",strike:515,premium:.35,fees:.2},{id:"TRD-1002-L3",action:"SELL",side:"OPEN",type:"PUT",quantity:1,multiplier:100,executionDate:"2025-04-22",expirationDate:"2025-05-31",strike:500,premium:.85,fees:.3},{id:"TRD-1002-L4",action:"BUY",side:"OPEN",type:"PUT",quantity:1,multiplier:100,executionDate:"2025-04-22",expirationDate:"2025-05-31",strike:495,premium:.3,fees:.2},{id:"TRD-1002-L5",action:"BUY",side:"CLOSE",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-05-18",expirationDate:"2025-05-31",strike:510,premium:.15,fees:.3},{id:"TRD-1002-L6",action:"SELL",side:"CLOSE",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-05-18",expirationDate:"2025-05-31",strike:515,premium:.05,fees:.2},{id:"TRD-1002-L7",action:"BUY",side:"CLOSE",type:"PUT",quantity:1,multiplier:100,executionDate:"2025-05-18",expirationDate:"2025-05-31",strike:500,premium:.18,fees:.3},{id:"TRD-1002-L8",action:"SELL",side:"CLOSE",type:"PUT",quantity:1,multiplier:100,executionDate:"2025-05-18",expirationDate:"2025-05-31",strike:495,premium:.06,fees:.2}]},{id:"TRD-1003",ticker:"TSLA",strategy:"Cash-Secured Put",status:"Open",openedDate:"2025-09-15",expirationDate:"2025-10-17",notes:"Prefer assignment for long-term hold. Underlying: Post-earnings consolidation with high IV. Risk plan: Accept assignment at 250; roll at 21 DTE if needed.",legs:[{id:"TRD-1003-L1",action:"SELL",side:"OPEN",type:"PUT",quantity:1,multiplier:100,executionDate:"2025-09-15",expirationDate:"2025-10-17",strike:250,premium:3.4,fees:.75,underlyingPrice:260.5}]},{id:"TRD-1004",ticker:"MSFT",strategy:"Covered Call Roll",status:"Rolling",openedDate:"2025-03-24",closedDate:null,expirationDate:"2025-05-23",notes:"Rolling monthly income position higher. Underlying: Trending higher into resistance. Risk plan: Roll up and out when delta > 0.35.",legs:[{id:"TRD-1004-L1",action:"BUY",side:"CLOSE",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-04-18",expirationDate:"2025-04-19",strike:325,premium:.45,fees:1.2,underlyingPrice:318.2},{id:"TRD-1004-L2",action:"SELL",side:"OPEN",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-04-18",expirationDate:"2025-05-23",strike:330,premium:1.65,fees:1.2,underlyingPrice:318.2}]},{id:"TRD-1005",ticker:"IWM",strategy:"Short Strangle",status:"Closed",openedDate:"2025-07-08",closedDate:"2025-07-26",expirationDate:"2025-08-16",exitReason:"Time decay",notes:"Monthly premium capture. Underlying: Consolidating near 200 with elevated IV. Risk plan: Close at 50% max profit or roll when breach.",legs:[{id:"TRD-1005-L1",action:"SELL",side:"OPEN",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-07-08",expirationDate:"2025-08-16",strike:212,premium:2.05,fees:.3},{id:"TRD-1005-L2",action:"SELL",side:"OPEN",type:"PUT",quantity:1,multiplier:100,executionDate:"2025-07-08",expirationDate:"2025-08-16",strike:188,premium:2.1,fees:.3},{id:"TRD-1005-L3",action:"BUY",side:"CLOSE",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-07-26",expirationDate:"2025-08-16",strike:212,premium:.75,fees:.3},{id:"TRD-1005-L4",action:"BUY",side:"CLOSE",type:"PUT",quantity:1,multiplier:100,executionDate:"2025-07-26",expirationDate:"2025-08-16",strike:188,premium:.82,fees:.3}]},{id:"TRD-1006",ticker:"NVDA",strategy:"Poor Man's Covered Call",status:"Closed",openedDate:"2025-01-10",closedDate:"2025-03-01",expirationDate:"2026-06-19",exitReason:"Profit target reached",notes:"Diagonalized LEAPS against a short call. Underlying: Breakout on AI earnings momentum. Risk plan: Roll short when delta > 0.35.",legs:[{id:"TRD-1006-L1",action:"BUY",side:"OPEN",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-01-10",expirationDate:"2026-06-19",strike:600,premium:65.4,fees:.75},{id:"TRD-1006-L2",action:"SELL",side:"OPEN",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-01-10",expirationDate:"2025-03-21",strike:850,premium:8.25,fees:.3},{id:"TRD-1006-L3",action:"BUY",side:"CLOSE",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-02-28",expirationDate:"2025-03-21",strike:850,premium:1.1,fees:.3},{id:"TRD-1006-L4",action:"SELL",side:"CLOSE",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-03-01",expirationDate:"2026-06-19",strike:600,premium:72.8,fees:.75}]},{id:"TRD-1007",ticker:"AMD",strategy:"Straddle",status:"Closed",openedDate:"2025-05-01",closedDate:"2025-05-20",expirationDate:"2025-06-21",exitReason:"Volatility crush",notes:"Earnings IV play with quick exit after the post-report move. Underlying: Neutral bias, targeting elevated implied volatility.",legs:[{id:"TRD-1007-L1",action:"BUY",side:"OPEN",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-05-01",expirationDate:"2025-06-21",strike:150,premium:5.8,fees:.65},{id:"TRD-1007-L2",action:"BUY",side:"OPEN",type:"PUT",quantity:1,multiplier:100,executionDate:"2025-05-01",expirationDate:"2025-06-21",strike:150,premium:5.4,fees:.65},{id:"TRD-1007-L3",action:"SELL",side:"CLOSE",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-05-20",expirationDate:"2025-06-21",strike:150,premium:8.9,fees:.65},{id:"TRD-1007-L4",action:"SELL",side:"CLOSE",type:"PUT",quantity:1,multiplier:100,executionDate:"2025-05-20",expirationDate:"2025-06-21",strike:150,premium:3.1,fees:.65}]},{id:"TRD-1008",ticker:"XOM",strategy:"Covered Call",status:"Open",openedDate:"2025-06-10",closedDate:null,expirationDate:"2025-09-20",notes:"Wheel phase two after put assignment. Underlying: Post-breakout consolidation above 105. Risk plan: Roll short call when delta exceeds 0.30 or price tags upper channel.",cycleId:"XOM-WHEEL-2025",cycleType:"wheel",cycleRole:"shares-phase",legs:[{id:"TRD-1008-L1",action:"BUY",side:"OPEN",type:"STOCK",quantity:100,multiplier:1,executionDate:"2025-06-10",strike:null,premium:108.2,fees:0,underlyingPrice:108.2},{id:"TRD-1008-L2",action:"SELL",side:"OPEN",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-06-10",expirationDate:"2025-07-19",strike:115,premium:1.45,fees:.3},{id:"TRD-1008-L3",action:"BUY",side:"CLOSE",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-07-12",expirationDate:"2025-07-19",strike:115,premium:.38,fees:.3},{id:"TRD-1008-L4",action:"SELL",side:"OPEN",type:"CALL",quantity:1,multiplier:100,executionDate:"2025-07-12",expirationDate:"2025-09-20",strike:118,premium:1.92,fees:.3}]},{id:"TRD-1009",ticker:"RUT",strategy:"Iron Butterfly",status:"Expired",openedDate:"2024-12-18",closedDate:"2025-01-17",expirationDate:"2025-01-17",exitReason:"Expired worthless",notes:"January cycle pin play. Underlying: Expecting mean reversion into settlement. Risk plan: Close if price breaches +/-20 points beyond short strikes.",legs:[{id:"TRD-1009-L1",action:"SELL",side:"OPEN",type:"CALL",quantity:1,multiplier:100,executionDate:"2024-12-18",expirationDate:"2025-01-17",strike:2200,premium:6.8,fees:.55},{id:"TRD-1009-L2",action:"SELL",side:"OPEN",type:"PUT",quantity:1,multiplier:100,executionDate:"2024-12-18",expirationDate:"2025-01-17",strike:2100,premium:7.1,fees:.55},{id:"TRD-1009-L3",action:"BUY",side:"OPEN",type:"CALL",quantity:1,multiplier:100,executionDate:"2024-12-18",expirationDate:"2025-01-17",strike:2225,premium:3.1,fees:.45},{id:"TRD-1009-L4",action:"BUY",side:"OPEN",type:"PUT",quantity:1,multiplier:100,executionDate:"2024-12-18",expirationDate:"2025-01-17",strike:2075,premium:3.4,fees:.45}]}],exportDate:"2025-10-15T12:00:00.000Z",version:"3.0"};class GammaLedger{constructor(){this.trades=[],this.currentView="dashboard",this.sortDirection={},this.charts={},this.tradeDetailCharts=new Map,this.cycleAnalytics=[],this.latestStats=null,this.currentFileHandle=null,this.currentFileName="Unsaved Database",this.hasUnsavedChanges=!1,this.supportsFileSystemAccess="showOpenFilePicker"in window,this.currentEditingId=null,this.importControlsInitialized=!1,this.importLog=[],this.importSummary=null,this.importMergeSelection=new Set,this.tradeMergeSelection=new Set,this.tradesMergeInitialized=!1,this.tradesMergePanelOpen=!1,this.currentFilteredTrades=[],this.finnhub={apiKey:"",encryptionKey:null,cache:new Map,cacheTTL:6e4,outstandingRequests:new Map,rateLimitQueue:Promise.resolve(),maxRequestsPerMinute:60,timestamps:[],statusTimeoutId:null,lastStatus:null,elements:{}},this.gemini={apiKey:"",encryptionKey:null,model:"gemini-2.5-flash",statusTimeoutId:null,lastStatus:null,pendingStatus:null,elements:{}},this.aiAgent=new GeminiInsightsAgent(this),this.aiChatMessages=[],this.aiChatSessionId=Date.now(),this.aiChatPendingRequest=!1,this.aiChatOpen=!1,this.activeQuoteEntries=new Map,this.quoteRefreshIntervalId=null,this.autoRefreshIntervalMs=this.computeAutoRefreshInterval(),this.quoteRefreshKeys=[],this.quoteRefreshCursor=0,this.positionHighlightConfig={expirationWarningDays:20,expirationCriticalDays:10},this.currentDate=new Date,this.init()}async init(){await this.loadFromStorage(),await this.loadFinnhubConfigFromStorage(),await this.loadGeminiConfigFromStorage(),this.trades&&0!==this.trades.length?(this.updateFileNameDisplay(),this.updateDashboard()):await this.loadDefaultDatabase(),this.bindEvents(),this.initializeGeminiControls(),this.initializeAIChat(),this.initializeFinnhubControls(),this.updateFileNameDisplay(),this.checkBrowserCompatibility(),setTimeout(()=>{this.updateDashboard(),this.showView("dashboard")},100)}computeAutoRefreshInterval(){const e=Number(this.finnhub?.maxRequestsPerMinute)||60,t=Math.min(Math.max(e-2,1),60);return Math.max(800,Math.ceil(12e4/t))}checkBrowserCompatibility(){if(!this.supportsFileSystemAccess){const e=document.getElementById("compatibility-notice");e&&e.classList.remove("hidden"),console.log("File System Access API not supported, using fallback methods")}}async loadDefaultDatabase(){try{if(!BUILTIN_SAMPLE_DATA||!Array.isArray(BUILTIN_SAMPLE_DATA.trades))throw new Error("Built-in sample data unavailable.");const e=JSON.parse(JSON.stringify(BUILTIN_SAMPLE_DATA));this.processLoadedData(e,{fileName:"Sample Database (Built-in)",source:"default-sample"}),this.currentFileHandle=null}catch(e){console.warn("Default database not loaded:",e),this.trades=[],this.currentFileName="Unsaved Database",this.currentFileHandle=null,this.hasUnsavedChanges=!1,this.updateUnsavedIndicator(),this.saveToStorage({fileName:this.currentFileName}),this.updateFileNameDisplay(),this.updateDashboard()}}normalizeLegOrderType(e){const t=(e||"").toString().trim().toUpperCase();if(["BTO","STO","BTC","STC"].includes(t))return t;const i=t.replace("BUY TO OPEN","BTO").replace("SELL TO OPEN","STO").replace("BUY TO CLOSE","BTC").replace("SELL TO CLOSE","STC");return["BTO","STO","BTC","STC"].includes(i)?i:t.startsWith("B")?t.includes("C")?"BTC":"BTO":t.startsWith("S")?t.includes("C")?"STC":"STO":"BTO"}mapOrderTypeToActionSide(e){switch(this.normalizeLegOrderType(e)){case"BTO":default:return{action:"BUY",side:"OPEN"};case"STO":return{action:"SELL",side:"OPEN"};case"BTC":return{action:"BUY",side:"CLOSE"};case"STC":return{action:"SELL",side:"CLOSE"}}}deriveOrderTypeFromActionSide(e,t){const i=this.normalizeLegAction(e),r=this.normalizeLegSide(t);return"ROLL"===r?"SELL"===i?"STO":"BTO":"BUY"===i&&"OPEN"===r?"BTO":"SELL"===i&&"OPEN"===r?"STO":"BUY"===i&&"CLOSE"===r?"BTC":"SELL"===i&&"CLOSE"===r?"STC":"BTO"}normalizeLegAction(e){const t=(e||"").toString().trim().toUpperCase();return["SELL","SHORT","STO","STC"].includes(t)?"SELL":"BUY"}normalizeLegSide(e){const t=(e||"").toString().trim().toUpperCase();return["CALL","PUT","STOCK"].includes(t)?"CLOSE":["CASH","FUTURE","ETF","SHARES","STK"].includes(t)?"STOCK":["BTO","STO"].includes(t)?"OPEN":["BTC","STC"].includes(t)?"CLOSE":"OPEN"}normalizeLegType(e){const t=(e||"").toString().trim().toUpperCase();return["CALL","PUT","STOCK","CASH","FUTURE","ETF"].includes(t)?t:"SHARES"===t?"STOCK":t||"UNKNOWN"}getLegMultiplier(e){const t=Number(e?.multiplier);if(Number.isFinite(t)&&t>0)return t;const i=this.normalizeLegType(e?.type);if("STOCK"===i||"CASH"===i)return 1;const r=this.normalizeUnderlyingType(e?.underlyingType,{fallback:"Stock"});return this.getDefaultMultiplierForLegType(i,r)}normalizeLeg(e,t=0){const i=Number(e?.quantity),r=Number.isFinite(i)?i:0,s=e?.executionDate?new Date(e.executionDate):null,n=s&&!Number.isNaN(s.getTime())?s.toISOString().slice(0,10):"",a=e?.expirationDate?new Date(e.expirationDate):null,o=a&&!Number.isNaN(a.getTime())?a.toISOString().slice(0,10):"",l=this.normalizeLegOrderType(e?.orderType||e?.tradeType||e?.order||this.deriveOrderTypeFromActionSide(e?.action,e?.side)),c=this.mapOrderTypeToActionSide(l),d=this.normalizeLegAction(e?.action||c.action),u=this.normalizeLegSide(e?.side||c.side),m=e?.fitId,h=e?.externalId,p=e?.importGroupId,g=e?.importSource;return{id:e?.id||`LEG-${Date.now()}-${t}`,orderType:l,action:d,side:u,type:this.normalizeLegType(e?.type),quantity:r,multiplier:this.getLegMultiplier(e),executionDate:n,expirationDate:o,strike:Number.isFinite(Number(e?.strike))?Number(e.strike):null,premium:Number.isFinite(Number(e?.premium))?Number(e.premium):0,fees:Number.isFinite(Number(e?.fees))?Number(e.fees):0,underlyingPrice:Number.isFinite(Number(e?.underlyingPrice))?Number(e.underlyingPrice):null,underlyingType:this.normalizeUnderlyingType(e?.underlyingType,{fallback:"Stock"}),fitId:null==m?null:m.toString().trim()||null,externalId:null==h?null:h.toString().trim()||null,importGroupId:null==p?null:p.toString().trim()||null,importSource:null==g?null:g.toString().trim()||null}}calculateLegCashFlow(e){if(!e)return 0;const t=Math.abs(Number(e.quantity)||0);if(!t)return-(Number(e.fees)||0);const i=this.getLegMultiplier(e),r=Number(e.premium)||0,s=Number(e.fees)||0;return("SELL"===this.normalizeLegAction(e.action)?1:-1)*r*i*t-s}summarizeLegs(e=[]){const t={legs:[],legsCount:0,openLegs:0,closeLegs:0,rollLegs:0,totalFees:0,totalDebit:0,totalCredit:0,netPremium:0,cashFlow:0,openCashFlow:0,closeCashFlow:0,openedDate:null,closedDate:null,earliestExpiration:null,latestExpiration:null,primaryLeg:null,openContracts:0,closeContracts:0,capitalAtRisk:0,entryPrice:null,exitPrice:null,openCreditGross:0,openDebitGross:0,openFees:0,openBaseContracts:0,entryNetCredit:0,verticalSpread:null};if(!Array.isArray(e)||0===e.length)return t;const i=e.map((e,t)=>this.normalizeLeg(e,t));t.legs=i,t.legsCount=i.length;const r=new Map;i.forEach(e=>{const i=this.calculateLegCashFlow(e);t.cashFlow+=i,t.totalFees+=Number(e.fees)||0;const s=Math.abs(Number(e.quantity)||0);if(s)if("OPEN"===e.side){t.openLegs+=1,t.openContracts+=s,t.openCashFlow+=i;const n=this.getLegMultiplier(e)||1,a=Math.abs(Number(e.premium)||0)*n*s;if("SELL"===e.action?t.openCreditGross+=a:t.openDebitGross+=a,t.openFees+=Number(e.fees)||0,s>t.openBaseContracts&&(t.openBaseContracts=s),["CALL","PUT"].includes(e.type)&&Number.isFinite(Number(e.strike))){const t=`${e.type}|${e.expirationDate||""}`;r.has(t)||r.set(t,[]),r.get(t).push(e)}}else"CLOSE"===e.side?(t.closeLegs+=1,t.closeContracts+=s,t.closeCashFlow+=i):"ROLL"===e.side&&(t.rollLegs+=1);if("BUY"===e.action?t.totalDebit+=Math.abs(i+(Number(e.fees)||0)):t.totalCredit+=Math.abs(i+(Number(e.fees)||0)),e.executionDate){const i=new Date(e.executionDate);Number.isNaN(i.getTime())||((!t.openedDate||i<t.openedDate)&&(t.openedDate=i),(!t.closedDate||i>t.closedDate)&&(t.closedDate=i))}if(e.expirationDate){const i=new Date(e.expirationDate);Number.isNaN(i.getTime())||((!t.earliestExpiration||i<t.earliestExpiration)&&(t.earliestExpiration=i),(!t.latestExpiration||i>t.latestExpiration)&&(t.latestExpiration=i))}t.primaryLeg||"CLOSE"===e.side||(t.primaryLeg=e)}),t.primaryLeg||(t.primaryLeg=i[0]);const s=t.openCreditGross-t.openDebitGross-t.openFees;t.entryNetCredit=s;let n=null;for(const e of r.values()){if(!Array.isArray(e)||e.length<2)continue;const i=e.some(e=>"BUY"===e.action),r=e.some(e=>"SELL"===e.action);if(!i||!r)continue;const s=e.map(e=>Number(e.strike)).filter(Number.isFinite);if(s.length<2)continue;const a=Math.abs(Math.max(...s)-Math.min(...s));if(!(a>0))continue;const o=this.getLegMultiplier(e[0])||1,l=e.map(e=>Math.abs(Number(e.quantity)||0)).filter(e=>e>0);n={width:a,multiplier:o,contracts:(l.length?Math.min(...l):t.openBaseContracts||1)||1};break}t.verticalSpread=n;const a=this.getLegMultiplier(t.primaryLeg)||1,o=t.openContracts||Math.abs(Number(t.primaryLeg?.quantity)||0)||1,l=n?.contracts||t.openBaseContracts||o,c=t.closeContracts||0;Number.isFinite(s)&&l>0&&a>0?t.entryPrice=Math.abs(s)/(l*a):o>0&&a>0&&(t.entryPrice=Math.abs(t.openCashFlow)/(o*a)),c>0&&(t.exitPrice=Math.abs(t.closeCashFlow)/(c*a)),t.netPremium=s;const d=t.totalDebit-t.totalCredit,u=Math.max(d,t.totalDebit,Math.abs(t.netPremium));if(t.capitalAtRisk=Number.isFinite(u)&&u>0?u:Math.abs(t.netPremium),n&&Number.isFinite(s)&&s>=0){const e=n.width*n.multiplier*n.contracts;if(Number.isFinite(e)&&e>0){const i=Math.max(e-s,0);t.capitalAtRisk=i}}return t}formatStrikeValue(e){const t=Number(e);return Number.isFinite(t)?Math.abs(t)>=1e3?t.toFixed(0):Number.isInteger(t)?t.toString():t.toFixed(2).replace(/\.00$/,""):"—"}derivePrimaryStrike(e){if(!e||!Array.isArray(e.legs))return null;const t=e.legs.filter(e=>"OPEN"===e.side),i=t.length?t:e.legs,r=i.find(e=>"SELL"===e.action&&Number.isFinite(Number(e.strike)));if(r)return Number(r.strike);const s=i.find(e=>Number.isFinite(Number(e.strike)));return s?Number(s.strike):null}buildStrikeDisplay(e,t=null){const i=t||this.summarizeLegs(e?.legs||[]),r=i?.legs||[];if(0===r.length)return"—";const s=r.filter(e=>"OPEN"===e.side),n=s.length?s:r,a=n.filter(e=>["CALL","PUT"].includes(e.type)&&Number.isFinite(Number(e.strike)));if(a.length>0){const e=a.reduce((e,t)=>{const i="CALL"===t.type?"C":"P";return e[i]||(e[i]=new Set),e[i].add(Number(t.strike)),e},{});return Object.entries(e).map(([e,t])=>`${e}${Array.from(t).sort((e,t)=>e-t).map(e=>this.formatStrikeValue(e)).join("/")}`).sort().join(" · ")||"—"}const o=n.filter(e=>"STOCK"===e.type);if(o.length>0){const e=o.reduce((e,t)=>{const i=t.quantity*this.getLegMultiplier(t);return e+("BUY"===t.action?i:-i)},0),t=Math.abs(Math.round(e));if(t>0)return`${t} sh`}return"—"}buildEntryPriceDisplay(e,t=null){const i=Number(e?.entryPrice);if(!Number.isFinite(i))return"—";const r=t||this.summarizeLegs(e?.legs||[]),s=Number(r?.openCashFlow)||0,n=(Math.abs(i),2),a=`$${Math.abs(i).toFixed(n)}`;return s>1e-4?`Cr ${a}`:s<-1e-4?`Db ${a}`:a}assessRisk(e,t){const i={maxRiskValue:Number(t?.capitalAtRisk)||0,maxRiskLabel:null,unlimited:!1};if(!t||!Array.isArray(t.legs)||0===t.legs.length)return i.maxRiskLabel=this.formatCurrency(i.maxRiskValue),i;if(this.isPmccTrade(e)){const e=[],r=Number(t.openCashFlow);Number.isFinite(r)&&e.push(Math.max(0,-r));const s=Number(t.entryNetCredit);Number.isFinite(s)&&e.push(Math.max(0,-s));const n=Number(t.openDebitGross),a=Number(t.openCreditGross),o=Number(t.openFees);if([n,a,o].some(e=>Number.isFinite(e)&&0!==e)){const t=Math.max(0,(Number.isFinite(n)?n:0)+(Number.isFinite(o)?o:0)-(Number.isFinite(a)?a:0));e.push(t)}if(e.length>0){const r=Math.max(...e);if(Number.isFinite(r))return i.maxRiskValue=r,t.capitalAtRisk=r,i.unlimited=!1,i.maxRiskLabel=this.formatCurrency(r),0===r&&(i.maxRiskLabel="$0.00"),i}}const r=t.verticalSpread;if(r&&Number.isFinite(t.entryNetCredit)){const e=r.contracts||1,s=r.width*r.multiplier*e;if(Number.isFinite(s)&&s>0){const e=t.entryNetCredit;if(e>=0){const r=Math.max(s-e,0);return i.maxRiskValue=r,t.capitalAtRisk=r,i.maxRiskLabel=this.formatCurrency(r),0===r&&(i.maxRiskLabel="$0.00"),i}}}const s=t.legs,n=s.filter(e=>"OPEN"===e.side),a=n.length?n:s,o=e=>(Number(e.quantity)||0)*this.getLegMultiplier(e);let l=a.filter(e=>"STOCK"===e.type).reduce((e,t)=>{const i=o(t);return e+("BUY"===t.action?i:-i)},0);l=Math.max(0,l);const c=a.filter(e=>"CALL"===e.type&&"SELL"===e.action&&Number.isFinite(Number(e.strike))).map(e=>({strike:Number(e.strike),shares:o(e)})).sort((e,t)=>e.strike-t.strike),d=a.filter(e=>"CALL"===e.type&&"BUY"===e.action&&Number.isFinite(Number(e.strike))).map(e=>({strike:Number(e.strike),shares:o(e)})).sort((e,t)=>e.strike-t.strike);for(const e of c){let r=e.shares;if(l>0){const e=Math.min(r,l);r-=e,l-=e}if(r>0)for(const t of d)if(t.strike>=e.strike&&t.shares>0){const e=Math.min(t.shares,r);if(t.shares-=e,r-=e,0===r)break}if(r>0)return i.unlimited=!0,i.maxRiskValue=Number.POSITIVE_INFINITY,i.maxRiskLabel="Unlimited",t.capitalAtRisk=i.maxRiskValue,i}const u=a.filter(e=>"PUT"===e.type&&"SELL"===e.action&&Number.isFinite(Number(e.strike))).map(e=>({leg:e,strike:Number(e.strike),shares:o(e)})).sort((e,t)=>t.strike-e.strike),m=a.filter(e=>"PUT"===e.type&&"BUY"===e.action&&Number.isFinite(Number(e.strike))).map(e=>({strike:Number(e.strike),shares:o(e)})).sort((e,t)=>t.strike-e.strike);let h=0;return u.forEach(e=>{const t=e.shares,i=e.leg.premium*e.leg.multiplier*e.leg.quantity-(e.leg.fees||0),r=t>0?i/t:0;let s=t;for(const t of m)if(t.strike<=e.strike&&t.shares>0&&s>0){const i=Math.min(t.shares,s);t.shares-=i,s-=i;const n=e.strike-t.strike,a=Math.max(0,n-r);h+=a*i}if(s>0){const t=Math.max(0,e.strike-r);h+=t*s}}),h>i.maxRiskValue&&(i.maxRiskValue=h),t.capitalAtRisk=i.maxRiskValue,i.maxRiskLabel=Number.isFinite(i.maxRiskValue)?this.formatCurrency(i.maxRiskValue):"—",0===i.maxRiskValue&&(i.maxRiskLabel="$0.00"),i}getLegsContainer(){return document.getElementById("trade-legs-container")}generateLegId(e=0){return`${this.currentEditingId||"NEW"}-LEG-${Date.now().toString(36)}-${e}-${Math.random().toString(36).slice(2,6)}`}clearLegFormRows(){const e=this.getLegsContainer();e&&(e.innerHTML="")}getSelectedUnderlyingType({fallback:e="Stock"}={}){const t=document.getElementById("underlyingType");return this.normalizeUnderlyingType(t?.value,{fallback:e})}getDefaultMultiplierForLegType(e,t="Stock"){const i=this.normalizeLegType(e||"CALL");if("STOCK"===i||"CASH"===i)return 1;this.normalizeUnderlyingType(t,{fallback:"Stock"});return 100}syncLegMultiplierVisibility(e,{defaultMultiplier:t=null}={}){if(!e)return;const i=e.querySelector('[data-leg-group="multiplier"]'),r=e.querySelector('[data-leg-field="multiplier"]'),s=e.querySelector(".trade-leg__multiplier-toggle"),n=e.querySelector('[data-leg-field="type"]');if(!(i&&r&&s&&n))return;const a=this.getSelectedUnderlyingType({fallback:"Stock"}),o=this.normalizeLegType(n.value||"CALL"),l=Number.isFinite(t)?t:this.getDefaultMultiplierForLegType(o,a),c=Number(r.value),d=Number.isFinite(c)&&c>0&&c!==l;if(e.classList.contains("trade-leg--multiplier-open"))return i.classList.remove("is-hidden"),void(s.textContent="Hide multiplier");i.classList.toggle("is-hidden",!d),s.textContent=d?"Hide multiplier":"Override multiplier"}applyUnderlyingTypeToLegMultipliers({row:e=null,force:t=!1}={}){const i=this.getLegsContainer();if(!i)return;const r=e?[e]:Array.from(i.querySelectorAll(".trade-leg"));if(!r.length)return;const s=this.getSelectedUnderlyingType({fallback:"Stock"});r.forEach(e=>{const i=e.querySelector('[data-leg-field="type"]'),r=e.querySelector('[data-leg-field="multiplier"]');if(!i||!r)return;const n=this.getDefaultMultiplierForLegType(i.value||"CALL",s),a=Number(r.value),o=e.classList.contains("trade-leg--multiplier-open");if(t||!Number.isFinite(a)||a<=0)r.value=n;else if(!o){0===a&&(r.value=n)}this.syncLegMultiplierVisibility(e,{defaultMultiplier:n})})}renderLegForms(e=[]){this.getLegsContainer()&&(this.clearLegFormRows(),Array.isArray(e)&&e.length>0?e.forEach(e=>this.addLegFormRow(e)):this.addLegFormRow(),this.updateLegRowNumbers(),this.applyUnderlyingTypeToLegMultipliers({force:!Array.isArray(e)||0===e.length}))}addLegFormRow(e=null){const t=this.getLegsContainer();if(!t)return null;const i=document.createElement("div");i.className="trade-leg";const r=t.querySelectorAll(".trade-leg").length,s=e?.id||this.generateLegId(r);i.dataset.legId=s,i.innerHTML='\n            <div class="trade-leg__header">\n                <span class="trade-leg__title" data-leg-label></span>\n                <button type="button" class="btn btn--sm btn--secondary trade-leg__remove">Remove Leg</button>\n            </div>\n            <div class="form-row">\n                <div class="form-group">\n                    <label class="form-label">Action</label>\n                    <select class="form-control" data-leg-field="orderType">\n                        <option value="BTO">BTO (Buy to Open)</option>\n                        <option value="STO">STO (Sell to Open)</option>\n                        <option value="BTC">BTC (Buy to Close)</option>\n                        <option value="STC">STC (Sell to Close)</option>\n                    </select>\n                </div>\n            </div>\n            <div class="form-row">\n                <div class="form-group">\n                    <label class="form-label">Instrument</label>\n                    <select class="form-control" data-leg-field="type">\n                        <option value="CALL">Call</option>\n                        <option value="PUT">Put</option>\n                        <option value="STOCK">Stock</option>\n                    </select>\n                </div>\n                <div class="form-group">\n                    <label class="form-label">Quantity</label>\n                    <input type="number" class="form-control" data-leg-field="quantity" min="0" step="1">\n                </div>\n            </div>\n            <div class="form-row">\n                <div class="form-group">\n                    <label class="form-label">Entry Date</label>\n                    <input type="date" class="form-control" data-leg-field="executionDate">\n                </div>\n                <div class="form-group">\n                    <label class="form-label">Expiration Date</label>\n                    <input type="date" class="form-control" data-leg-field="expirationDate">\n                </div>\n            </div>\n            <div class="form-row">\n                <div class="form-group">\n                    <label class="form-label">Strike</label>\n                    <input type="number" class="form-control" data-leg-field="strike" step="0.01">\n                </div>\n                <div class="form-group">\n                    <label class="form-label">Premium (per share)</label>\n                    <input type="number" class="form-control" data-leg-field="premium" step="0.01" min="0">\n                </div>\n            </div>\n            <div class="form-row">\n                <div class="form-group">\n                    <label class="form-label">Fees</label>\n                    <input type="number" class="form-control" data-leg-field="fees" step="0.0000001" min="0">\n                </div>\n                <div class="form-group is-hidden" data-leg-group="multiplier">\n                    <label class="form-label">Multiplier</label>\n                    <input type="number" class="form-control" data-leg-field="multiplier" step="1" min="1">\n                    <span class="form-help-text">Used to scale option premiums (100 for standard contracts, 1 for stock).</span>\n                </div>\n            </div>\n            <div class="form-row trade-leg__multiplier-row">\n                <div class="form-group">\n                    <button type="button" class="btn btn--sm btn--secondary trade-leg__multiplier-toggle">Override multiplier</button>\n                    <span class="form-help-text">Hidden by default - standard contracts use 100, stock legs use 1.</span>\n                </div>\n            </div>\n            <div class="form-row">\n                <div class="form-group">\n                    <label class="form-label">Entry Underlying Price</label>\n                    <input type="number" class="form-control" data-leg-field="underlyingPrice" step="0.01" min="0">\n                </div>\n            </div>\n        ';const n=i.querySelector('[data-leg-field="orderType"]'),a=this.normalizeLegOrderType(e?.orderType||e?.tradeType||e?.order||this.deriveOrderTypeFromActionSide(e?.action,e?.side));n&&(n.value=a);const o=i.querySelector('[data-leg-field="type"]'),l=this.normalizeLegType(e?.type||"CALL");o&&(o.value=l,o.addEventListener("change",()=>{this.applyUnderlyingTypeToLegMultipliers({row:i,force:!0})}));const c=this.getSelectedUnderlyingType({fallback:"Stock"}),d=this.normalizeUnderlyingType(e?.underlyingType,{fallback:c}),u=i.querySelector('[data-leg-field="quantity"]');u&&(e&&Number.isFinite(Number(e.quantity))?u.value=Math.abs(Number(e.quantity)):u.value=1);const m=i.querySelector('[data-leg-field="executionDate"]');m&&(m.value=e?.executionDate||"");const h=i.querySelector('[data-leg-field="expirationDate"]');h&&(h.value=e?.expirationDate||"");const p=i.querySelector('[data-leg-field="strike"]');p&&(p.value=Number.isFinite(Number(e?.strike))?Number(e.strike):"");const g=i.querySelector('[data-leg-field="premium"]');g&&(g.value=Number.isFinite(Number(e?.premium))?Number(e.premium):"");const y=i.querySelector('[data-leg-field="fees"]');y&&(y.value=Number.isFinite(Number(e?.fees))?Number(e.fees):"");const f=i.querySelector('[data-leg-field="multiplier"]');if(f){const t=Number.isFinite(Number(e?.multiplier))&&Number(e.multiplier)>0?Number(e.multiplier):this.getDefaultMultiplierForLegType(l,d);f.value=t,["change","input"].forEach(e=>{f.addEventListener(e,()=>{this.syncLegMultiplierVisibility(i)})})}const b=i.querySelector(".trade-leg__multiplier-toggle");b&&b.addEventListener("click",e=>{e.preventDefault();i.classList.toggle("trade-leg--multiplier-open")||this.applyUnderlyingTypeToLegMultipliers({row:i,force:!1}),this.syncLegMultiplierVisibility(i)});const C=i.querySelector('[data-leg-field="underlyingPrice"]');C&&(C.value=Number.isFinite(Number(e?.underlyingPrice))?Number(e.underlyingPrice):"");const T=i.querySelector(".trade-leg__remove");return T&&T.addEventListener("click",()=>{this.removeLegFormRow(i)}),t.appendChild(i),this.applyUnderlyingTypeToLegMultipliers({row:i,force:!e}),this.syncLegMultiplierVisibility(i),this.updateLegRowNumbers(),i}removeLegFormRow(e){const t=this.getLegsContainer();t&&e&&(t.removeChild(e),0===t.children.length?this.addLegFormRow():(this.updateLegRowNumbers(),this.applyUnderlyingTypeToLegMultipliers({force:!1})))}updateLegRowNumbers(){const e=this.getLegsContainer();e&&Array.from(e.querySelectorAll(".trade-leg")).forEach((t,i)=>{const r=t.querySelector("[data-leg-label]");r&&(r.textContent=`Leg ${i+1}`);const s=t.querySelector(".trade-leg__remove");s&&(s.disabled=1===e.children.length)})}collectLegsFromForm(){const e=this.getLegsContainer();if(!e)return[];const t=Array.from(e.querySelectorAll(".trade-leg"));if(0===t.length)return[];const i=[],r=[],s=this.getSelectedUnderlyingType({fallback:"Stock"});return t.forEach((e,t)=>{const n=t=>{const i=e.querySelector(`[data-leg-field="${t}"]`);return i?i.value:""},a=this.normalizeLegOrderType(n("orderType")||"BTO"),o=this.mapOrderTypeToActionSide(a),l=this.normalizeLegAction(o.action),c=this.normalizeLegSide(o.side),d=this.normalizeLegType(n("type")||"CALL"),u=n("quantity"),m=this.parseInteger(u,null,{allowNegative:!1});if(!Number.isFinite(m)||m<=0)return void r.push(`Leg ${t+1} must have a quantity greater than 0.`);const h=n("multiplier"),p=this.parseInteger(h,null,{allowNegative:!1}),g=Number.isFinite(p)&&p>0?p:this.getDefaultMultiplierForLegType(d,s),y=n("strike"),f=this.parseDecimal(y,null,{allowNegative:!1}),b=n("premium"),C=this.parseDecimal(b,0,{allowNegative:!1}),T=n("fees"),S=this.parseDecimal(T,0,{allowNegative:!1}),v=n("underlyingPrice"),L=this.parseDecimal(v,null,{allowNegative:!1}),N=n("executionDate")||"",x=n("expirationDate")||"",k={id:e.dataset.legId||this.generateLegId(t),orderType:a,action:l,side:c,type:d,quantity:m,multiplier:g,executionDate:N,expirationDate:x,strike:f,premium:C,fees:S,underlyingPrice:L,underlyingType:s};i.push(k)}),r.length>0?(this.showNotification(r.join("\n"),"error"),null):i}getPrimaryLeg(e={}){if(e.primaryLeg&&e.primaryLeg.id)return this.normalizeLeg(e.primaryLeg);if(Array.isArray(e.legs)&&e.legs.length>0){const t=e.legs.map((e,t)=>this.normalizeLeg(e,t));return t.find(e=>"OPEN"===e.side)||t[0]}return null}deriveTradeTypeFromLeg(e){if(!e)return"BTO";const t=this.normalizeLegAction(e.action),i=this.normalizeLegSide(e.side);return"BUY"===t&&"OPEN"===i?"BTO":"SELL"===t&&"OPEN"===i?"STO":"SELL"===t&&"CLOSE"===i?"STC":"BUY"===t&&"CLOSE"===i?"BTC":"SELL"===t?"STO":"BTO"}deriveTradeDirectionFromLeg(e){if(!e)return"long";return"SELL"===this.normalizeLegAction(e.action)?"short":"long"}getTradeType(e){const t=this.getPrimaryLeg(e);return this.deriveTradeTypeFromLeg(t)}inferTradeDirection(e){const t=this.getPrimaryLeg(e);return this.deriveTradeDirectionFromLeg(t)}normalizeStatus(e){return(e||"").toString().trim().toLowerCase()}normalizeTradeStatusInput(e){const t=(e||"").toString().trim().toLowerCase();return t?"open"===t?"Open":"closed"===t?"Closed":"expired"===t?"Expired":"assigned"===t?"Assigned":"rolling"===t||"rolled"===t?"Rolling":"":""}isClosedStatus(e){const t=this.normalizeStatus(e);return"closed"===t||"assigned"===t||"expired"===t}isActiveStatus(e){const t=this.normalizeStatus(e);return"open"===t||"rolling"===t}isAssignmentReason(e){return(e||"").toString().trim().toLowerCase().includes("assign")}getDisplayStatus(e){if(!e)return"Unknown";const t=(e.status||"Unknown").toString().trim();if(!t)return"Unknown";const i=t.toLowerCase();return"closed"===i&&this.isAssignmentReason(e.exitReason)||"assigned"===i?"Assigned":"expired"===i?"Expired":"rolling"===i?"Rolling":t}calculateDTE(e,t){const i=this.parseDateValue(e);if(!i)return 0;if(this.isClosedStatus(t.status))return 0;const r=i.getTime()-this.currentDate.getTime();if(!Number.isFinite(r))return 0;const s=Math.ceil(r/864e5);return Math.max(0,s)}calculatePL(e){if(!e)return 0;const t=this.summarizeLegs(e.legs||[]),i=Number.isFinite(Number(e.cashFlow))?Number(e.cashFlow):Number(t.cashFlow);return Number.isFinite(i)?parseFloat(i.toFixed(2)):0}calculateROI(e){const t=this.calculatePL(e),i=this.getCapitalAtRisk(e);if(!(i>0))return 0;const r=t/i*100;return Number.isFinite(r)?parseFloat(r.toFixed(2)):0}calculateDaysHeld(e){if(!e)return 0;const t=this.parseDateValue(e.entryDate||e.openedDate);if(!t)return 0;const i=this.parseDateValue(e.exitDate||e.closedDate),r=(this.isClosedStatus(e.status)&&i?i:this.currentDate).getTime()-t.getTime();if(!Number.isFinite(r)||r<0)return 0;const s=Math.ceil(r/864e5);return Math.max(1,s)}calculateMaxRisk(e){if(!e)return 0;const t=Number(e.maxRiskOverride);if(Number.isFinite(t)&&t>0)return t;const i=Number(e.capitalAtRisk);if(Number.isFinite(i)&&i>0)return i;const r=Number(e.maxRisk);if(Number.isFinite(r)&&r>0)return r;const s=this.summarizeLegs(e.legs||[]);return Number(s.capitalAtRisk)||0}getCapitalAtRisk(e){const t=Number(e.capitalAtRisk);if(Number.isFinite(t)&&t>0)return t;const i=Number(e.maxRisk);return Number.isFinite(i)&&i>0?i:this.calculateMaxRisk(e)}calculateAnnualizedROI(e){if(!e||!this.isClosedStatus(e.status))return 0;const t=Number.isFinite(Number(e.roi))?Number(e.roi):this.calculateROI(e);if(!Number.isFinite(t))return 0;const i=Number(e.daysHeld)||this.calculateDaysHeld(e)||0,r=365*t/Math.max(1,i);return Number.isFinite(r)?parseFloat(r.toFixed(2)):0}buildLegLifecycleKey(e={}){const t=this.normalizeLegType(e.type),i=Number(e.strike);return`${t}|${Number.isFinite(i)?i.toFixed(4):"NA"}|${(e.expirationDate||"").toString()}|${this.getLegMultiplier(e)||1}`}getNormalizedLegOrderType(e={}){const t=e.orderType||e.tradeType||e.order;return this.normalizeLegOrderType(t||this.deriveOrderTypeFromActionSide(e.action,e.side))}determineTradeLifecycleStatus(e={},t={}){const i=Array.isArray(t?.legs)?t.legs:[],r={status:"Open",exitReason:null,effectiveClosedDate:null,openContractsOverride:void 0,meta:{matchedPairs:!1,unmatchedExposure:0,expirationPassed:!1,hasRollLegs:!1,hasCloseActivity:!1,hasAssignmentEvent:!1,hasExpirationEvent:!1}};if(0===i.length)return r.meta.matchedPairs=!0,r;const s=new Map;let n=!1,a=!1,o=!1,l=!1;i.forEach(e=>{const t=Math.abs(Number(e.quantity)||0);if(!t)return;const i=this.buildLegLifecycleKey(e);s.has(i)||s.set(i,{longOpen:0,longClose:0,shortOpen:0,shortClose:0});const r=s.get(i);switch(this.getNormalizedLegOrderType(e)){case"BTO":r.longOpen+=t;break;case"STC":r.longClose+=t,a=!0;break;case"STO":r.shortOpen+=t;break;case"BTC":r.shortClose+=t,a=!0}"ROLL"===(e.side||"").toString().toUpperCase()&&(n=!0);const c=(e.orderType||e.tradeType||e.order||"").toString().toUpperCase(),d=(e.action||"").toString().toUpperCase();(c.includes("ASSIGN")||d.includes("ASSIGN"))&&(o=!0),(c.includes("EXPIRE")||c.includes("EXPIRY")||d.includes("EXPIRE"))&&(l=!0)});let c=!0,d=0;s.forEach(e=>{const t=Math.abs(e.longOpen-e.longClose),i=Math.abs(e.shortOpen-e.shortClose);(t>0||i>0)&&(c=!1),d+=t+i});const u=this.parseDateValue(e.expirationDate||t.latestExpiration),m=this.currentDate instanceof Date?this.currentDate:new Date,h=!!u&&m.getTime()>u.getTime(),p=t.closedDate instanceof Date?t.closedDate:this.parseDateValue(e.closedDate||e.exitDate),g=!!(h&&p&&u)&&p.getTime()>=u.getTime();r.meta={matchedPairs:c,unmatchedExposure:d,expirationPassed:h,hasRollLegs:n,hasCloseActivity:a,hasAssignmentEvent:o,hasExpirationEvent:l,activityAfterExpiration:g};const y=this.normalizeStatus(e.status);return!o&&this.isAssignmentTrade(e)&&(o=!0),o?(r.status="Assigned",r.exitReason=e.exitReason||"Assigned",r.openContractsOverride=0,!r.effectiveClosedDate&&p&&(r.effectiveClosedDate=p.toISOString().slice(0,10)),r):c||0===d?(r.status="Closed",l&&!e.exitReason&&(r.exitReason="Expired OTM"),r.openContractsOverride=0,!r.effectiveClosedDate&&p&&(r.effectiveClosedDate=p.toISOString().slice(0,10)),r):h&&!o?(r.status="Expired",e.exitReason||(r.exitReason="Expired OTM"),r.openContractsOverride=0,u&&(r.effectiveClosedDate=u.toISOString().slice(0,10)),r):n||a&&d>0?(r.status="Rolling",r):g&&!o?(r.status="Closed",e.exitReason||(r.exitReason="Closed post-expiration"),r.openContractsOverride=0,p&&(r.effectiveClosedDate=p.toISOString().slice(0,10)),r):"expired"===y&&u?(r.status="Expired",r.openContractsOverride=0,e.exitReason||(r.exitReason="Expired OTM"),r.effectiveClosedDate||(r.effectiveClosedDate=u.toISOString().slice(0,10)),r):(r.status="Open",r)}enrichTradeData(e){const t={...e};delete t.optionType;const i=(t.strategy||"").toString().trim();t.strategy=this.getStrategyDisplayName(i),t.underlyingType=this.normalizeUnderlyingType(e.underlyingType,{fallback:"Stock"});const r=this.summarizeLegs(t.legs);t.legs=r.legs,t.legsCount=r.legsCount,t.openContracts=Math.max(0,r.openContracts-r.closeContracts),t.closeContracts=r.closeContracts,t.openLegs=Math.max(0,r.openLegs-r.closeLegs),t.rollLegs=r.rollLegs,t.netPremium=Number(r.netPremium.toFixed(2)),t.totalFees=Number(r.totalFees.toFixed(4)),t.totalDebit=Number(r.totalDebit.toFixed(2)),t.totalCredit=Number(r.totalCredit.toFixed(2)),t.cashFlow=Number(r.cashFlow.toFixed(2));const s=Number(r.capitalAtRisk);t.capitalAtRisk=Number.isFinite(s)?Number(s.toFixed(2)):s,t.fees=t.totalFees,t.primaryLeg=r.primaryLeg;const n=Number(e.maxRiskOverride);Number.isFinite(n)&&n>0?t.maxRiskOverride=n:t.maxRiskOverride=null;const a=r.primaryLeg;t.tradeType=this.deriveTradeTypeFromLeg(a),t.tradeDirection=this.deriveTradeDirectionFromLeg(a);const o=a?Math.abs(Number(a.quantity)||0):0;t.quantity="short"===t.tradeDirection?-o:o,t.strikePrice=this.derivePrimaryStrike(r),t.multiplier=this.getLegMultiplier(a),t.displayStrike=this.buildStrikeDisplay(t,r);const l=r.entryPrice,c=r.exitPrice;t.entryPrice=Number.isFinite(l)?Number(l.toFixed(4)):null,t.exitPrice=Number.isFinite(c)?Number(c.toFixed(4)):null,t.entryPriceLabel=this.buildEntryPriceDisplay(t,r);const d=this.assessRisk(t,r);t.maxRiskOverride&&(d.maxRiskValue=t.maxRiskOverride,d.maxRiskLabel=this.formatCurrency(t.maxRiskOverride),d.unlimited=!1,r.capitalAtRisk=t.maxRiskOverride),t.capitalAtRisk=d.maxRiskValue,Number.isFinite(t.capitalAtRisk)&&(t.capitalAtRisk=Number(t.capitalAtRisk.toFixed(2))),t.maxRiskLabel=d.maxRiskLabel,t.riskIsUnlimited=d.unlimited;const u=this.parseDateValue(t.openedDate||t.entryDate||r.openedDate),m=this.parseDateValue(t.closedDate||t.exitDate||(r.closeLegs>0?r.closedDate:null)),h=this.parseDateValue(t.expirationDate||r.latestExpiration);t.openedDate=u?u.toISOString().slice(0,10):"",t.closedDate=m?m.toISOString().slice(0,10):"",t.entryDate=t.openedDate,t.exitDate=t.closedDate,t.expirationDate=h?h.toISOString().slice(0,10):"",t.pl=this.calculatePL(t),t.roi=this.calculateROI(t),t.maxRisk=this.calculateMaxRisk(t),t.maxRiskLabel||(t.maxRiskLabel=Number.isFinite(t.maxRisk)?this.formatCurrency(t.maxRisk):t.maxRisk===Number.POSITIVE_INFINITY?"Unlimited":"—");const p=this.determineTradeLifecycleStatus(t,r);t.lifecycleMeta=p.meta,t.lifecycleStatus=p.status,"number"==typeof p.openContractsOverride&&(t.openContracts=Math.max(0,p.openContractsOverride)),p.effectiveClosedDate&&(t.closedDate=p.effectiveClosedDate,t.exitDate=p.effectiveClosedDate),p.exitReason&&!t.exitReason&&(t.exitReason=p.exitReason),t.partialClose=Boolean(p.meta?.hasCloseActivity&&p.meta?.unmatchedExposure>0),t.rolledForward=Boolean(p.meta?.hasRollLegs),t.autoExpired="Expired"===p.status&&Boolean(p.meta?.expirationPassed);const g=this.normalizeTradeStatusInput(e.statusOverride);return g?(t.statusOverride=g,t.status=g):("statusOverride"in t&&delete t.statusOverride,t.status=p.status),t.daysHeld=this.calculateDaysHeld(t),t.dte=this.calculateDTE(t.expirationDate,t),t.annualizedROI=this.calculateAnnualizedROI(t),t}formatDateForInput(e){if(!e)return"";const t=new Date(e);if(isNaN(t.getTime()))return"";return`${t.getFullYear()}-${String(t.getMonth()+1).padStart(2,"0")}-${String(t.getDate()).padStart(2,"0")}`}calculateDaysBetween(e,t){const i=new Date(e),r=new Date(t),s=Math.abs(r.getTime()-i.getTime());return Math.ceil(s/864e5)}generateTickerLink(e){const t=(e??"").toString().trim().toUpperCase();return t?`https://www.investing.com/search/?q=${encodeURIComponent(t)}`:"https://www.investing.com/search/"}createTickerElement(e,t="ticker-link",i={}){const r=(e??"").toString().trim().toUpperCase();if(!r){const e=document.createElement("span");return e.className=`${t} ticker-link--placeholder`.trim(),e.textContent="—",e}const{behavior:s="external",onClick:n=null,title:a=""}=i||{},o=document.createElement("a");return o.className=t,o.textContent=r,a&&(o.title=a),"filter"===s&&"function"==typeof n?(o.href="#",o.setAttribute("role","button"),o.dataset.ticker=r,o.addEventListener("click",e=>{e.preventDefault(),n(r)})):(o.href=this.generateTickerLink(r),o.target="_blank",o.rel="noopener noreferrer",o.addEventListener("click",e=>{e.preventDefault(),window.open(this.generateTickerLink(r),"_blank","noopener,noreferrer")})),o}applyResponsiveLabels(e,t=[]){if(!e||!Array.isArray(t)||0===t.length)return;Array.from(e.cells||[]).forEach((e,i)=>{const r=t[i];r?e.setAttribute("data-label",r):e.removeAttribute("data-label")})}normalizeCycleId(e){return(e||"").toString().trim()}normalizeUnderlyingType(e,{fallback:t="Stock"}={}){const i=(e||"").toString().trim().toLowerCase();return["stock","etf","index","future"].includes(i)?i.charAt(0).toUpperCase()+i.slice(1):t}normalizeCycleType(e,t=""){const i=(e||"").toString().trim().toLowerCase();if("wheel"===i)return"wheel";if("pmcc"===i||"pmc"===i)return"pmcc";return this.inferCycleTypeFromStrategy(t)||i||""}inferCycleTypeFromStrategy(e=""){const t=e.toString().trim().toLowerCase();return t?t.includes("poor man")||t.includes("pmcc")?"pmcc":t.includes("cash-secured put")||t.includes("covered call")||t.includes("wheel")?"wheel":"":""}normalizeCycleRole(e,t={}){const i=(e||"").toString().trim().toLowerCase();return i||this.inferCycleRole(t)}inferCycleRole(e={}){const t=(e.strategy||"").toString().toLowerCase(),i=e.tradeDirection||this.inferTradeDirection(e),r=this.getTradeType(e);if(t.includes("cash-secured put"))return"wheel-put";if(t.includes("covered call"))return"wheel-call";if(t.includes("poor man")){if("long"===i||"BTO"===r)return"pmcc-base";if("short"===i||"STO"===r)return"pmcc-short"}return this.isAssignmentTrade(e)?"assignment":""}isWheelPut(e={}){if("wheel-put"===(e.cycleRole||"").toLowerCase())return!0;return(e.strategy||"").toLowerCase().includes("cash-secured put")}isCoveredCall(e={}){const t=(e.cycleRole||"").toLowerCase();if("wheel-call"===t||"covered-call"===t)return!0;return(e.strategy||"").toLowerCase().includes("covered call")}isPmccBaseLeg(e={}){if("pmcc-base"===(e.cycleRole||"").toLowerCase())return!0;return(e.strategy||"").toLowerCase().includes("poor man")&&("long"===e.tradeDirection||"BTO"===this.getTradeType(e))}isPmccShortCall(e={}){if("pmcc-short"===(e.cycleRole||"").toLowerCase())return!0;return(e.strategy||"").toLowerCase().includes("poor man")&&("short"===e.tradeDirection||"STO"===this.getTradeType(e))}isPmccTrade(e={}){if(!e)return!1;const t=(e.strategy||"").toLowerCase();if(t.includes("poor man")||t.includes("pmcc"))return!0;return"pmcc"===this.normalizeCycleType(e.cycleType,e.strategy)||(this.isPmccBaseLeg(e)||this.isPmccShortCall(e))}isAssignmentTrade(e={}){return"assigned"===this.normalizeStatus(e.status)||this.isAssignmentReason(e.exitReason)}calculateOptionPremium(e={}){const t=Math.abs(Number(e.quantity)||0);if(!t)return 0;const i=Number(e.entryPrice)||0,r=Number(e.exitPrice)||0,s=Number(e.fees)||0,n=(i-r)*t*100;return"short"===(e.tradeDirection||this.inferTradeDirection(e))?n-s:(r-i)*t*100-s}bindEvents(){document.querySelectorAll(".nav-item").forEach(e=>{e.addEventListener("click",()=>{const t=e.getAttribute("data-view");t&&this.showView(t)})});const e=document.getElementById("save-database-btn");e&&e.addEventListener("click",async e=>{e.preventDefault(),await this.saveDatabase()});const t=document.getElementById("load-database-btn");t&&t.addEventListener("click",async e=>{e.preventDefault(),await this.loadDatabase()});const i=document.getElementById("new-database-btn");i&&i.addEventListener("click",e=>{e.preventDefault(),this.newDatabase()}),this.setupImportControls(),this.setupTradesMergeControls();const r=document.getElementById("add-trade-form");r&&r.addEventListener("submit",e=>{e.preventDefault(),this.handleTradeSubmit()});const s=document.getElementById("add-leg-button");s&&s.addEventListener("click",()=>this.addLegFormRow());const n=document.getElementById("cancel-trade");n&&n.addEventListener("click",e=>{e.preventDefault(),this.resetAddTradeForm(),this.showView("trades-list")});const a=document.getElementById("ticker");a&&a.addEventListener("input",e=>{this.updateTickerPreview(e.target.value)});const o=document.getElementById("underlyingType");o&&o.addEventListener("change",()=>{this.applyUnderlyingTypeToLegMultipliers({force:!1})}),["filter-strategy","filter-status"].forEach(e=>{const t=document.getElementById(e);t&&t.addEventListener("change",()=>this.filterTrades())});const l=document.getElementById("search-ticker");l&&l.addEventListener("input",()=>this.filterTrades());const c=document.getElementById("export-csv");c&&c.addEventListener("click",()=>this.exportToCSV()),document.querySelectorAll(".sortable").forEach(e=>{e.addEventListener("click",()=>{const t=e.getAttribute("data-sort");t&&this.sortTrades(t)})});const d=document.getElementById("ai-chat-toggle");d&&d.addEventListener("click",()=>this.toggleAIChat());const u=document.getElementById("ai-chat-close");u&&u.addEventListener("click",()=>this.toggleAIChat(!1));const m=document.getElementById("ai-chat-form");m&&m.addEventListener("submit",e=>{e.preventDefault(),this.handleAIChatSubmit()}),document.querySelectorAll(".ai-chat__quick-btn").forEach(e=>{e.addEventListener("click",()=>{const t=e.getAttribute("data-ai-prompt");t&&this.handleAIQuickPrompt(t)})});const h=document.getElementById("ai-chat");h&&h.addEventListener("click",e=>{const t=e.target instanceof Element?e.target:null,i=t?.closest('a[href="#settings"]');if(!i)return;e.preventDefault(),this.showView("settings"),this.toggleAIChat(!1);const r=document.getElementById("gemini-api-key");r&&setTimeout(()=>r.focus(),120)}),this.renderLegForms([]),this.setupAIChatResizeHandle(),this.setTodayDate(),this.setupResponsiveFilters()}setupResponsiveFilters(){const e=document.getElementById("trades-filters-panel"),t=document.getElementById("toggle-filters");if(!e||!t)return;const i=e=>{t.textContent=e?"Hide Filters":"Show Filters",t.setAttribute("aria-expanded",String(e))};let r=window.innerWidth<=768;const s=(t=!1)=>{const s=window.innerWidth<=768;s?(!t&&r||e.classList.remove("is-open"),i(e.classList.contains("is-open"))):(e.classList.add("is-open"),i(!0)),r=s};t.addEventListener("click",()=>{const t=e.classList.toggle("is-open");i(t)});let n=null;window.addEventListener("resize",()=>{clearTimeout(n),n=setTimeout(()=>s(!1),160)}),s(!0)}setupAIChatResizeHandle(){const e=document.getElementById("ai-chat-panel"),t=document.getElementById("ai-chat-resize-handle")||e?.querySelector(".ai-chat__resize-handle");if(!e||!t||"true"===t.dataset.initialized)return void(t&&(t.dataset.initialized="true"));const i=(e,t,i)=>Math.min(Math.max(e,t),i),r={resizing:!1,startX:0,startY:0,startWidth:0,startHeight:0,maxWidth:0,maxHeight:0,minWidth:280,minHeight:280,rightMargin:24,bottomMargin:24,viewportPadding:24},s=i=>{if(r.resizing){if(r.resizing=!1,e.classList.remove("ai-chat__panel--resizing"),i)try{t.releasePointerCapture(i.pointerId)}catch(e){}document.removeEventListener("pointermove",n),document.removeEventListener("pointerup",s),document.removeEventListener("pointercancel",s)}},n=t=>{if(!r.resizing)return;t.preventDefault();const s=t.clientX-r.startX,n=t.clientY-r.startY,a=i(r.startWidth-s,r.minWidth,r.maxWidth),o=i(r.startHeight-n,r.minHeight,r.maxHeight);e.style.width=`${a}px`,e.style.height=`${o}px`};t.addEventListener("pointerdown",i=>{if(0!==i.button&&"touch"!==i.pointerType)return;i.preventDefault();const a=e.getBoundingClientRect();r.resizing=!0,r.startX=i.clientX,r.startY=i.clientY,r.startWidth=a.width,r.startHeight=a.height,r.rightMargin=Math.max(r.viewportPadding,Math.round(window.innerWidth-a.right)),r.bottomMargin=Math.max(r.viewportPadding,Math.round(window.innerHeight-a.bottom)),r.maxWidth=Math.max(r.minWidth,window.innerWidth-r.rightMargin-r.viewportPadding),r.maxHeight=Math.max(r.minHeight,window.innerHeight-r.bottomMargin-r.viewportPadding),e.classList.add("ai-chat__panel--resizing"),e.style.removeProperty("transform");try{t.setPointerCapture(i.pointerId)}catch(e){}document.addEventListener("pointermove",n,{passive:!1}),document.addEventListener("pointerup",s),document.addEventListener("pointercancel",s)}),t.dataset.initialized="true"}initializeAIChat(){if(this.updateAIChatHeader(),!this.aiAgent)return void(this.aiChatMessages=[]);const e=this.calculateAdvancedStats();this.aiAgent.updateContext({stats:e,openTrades:e.openTradesList,closedTrades:e.closedTradesList}),this.aiChatSessionId=Date.now(),this.aiChatMessages=[],this.aiChatPendingRequest=!1;const t=this.aiAgent.getGreeting();t?this.appendAIChatMessage("ai",t):this.renderAIChatMessages()}toggleAIChat(e=null){const t=document.getElementById("ai-chat-panel"),i=document.getElementById("ai-chat-toggle"),r=document.getElementById("ai-chat-input");if(!t||!i)return;(null===e?t.classList.contains("hidden"):Boolean(e))?(t.classList.remove("hidden"),t.setAttribute("aria-hidden","false"),i.setAttribute("aria-expanded","true"),this.aiChatOpen=!0,r&&setTimeout(()=>r.focus(),80)):(t.classList.add("hidden"),t.setAttribute("aria-hidden","true"),i.setAttribute("aria-expanded","false"),this.aiChatOpen=!1)}async handleAIChatSubmit(){if(this.aiChatPendingRequest)return;const e=document.getElementById("ai-chat-input");if(!e)return;const t=e.value.trim();if(!t)return;this.appendAIChatMessage("user",t),e.value="";const i=this.appendAIChatMessage("ai","Analyzing your portfolio...",{pending:!0}),r=this.aiChatMessages.filter(e=>e.id!==i).slice(-10).map(e=>({...e}));this.aiChatPendingRequest=!0;try{const e=this.aiAgent?await this.aiAgent.generateResponse(t,{history:r}):"AI assistant is unavailable at the moment.";this.appendAIChatMessage("ai",e,{replaceId:i,pending:!1})}catch(e){const t=e?.message||"Unknown error",r="Sorry, I could not reach Gemini right now. Please try again soon.";this.appendAIChatMessage("ai",`${r} (${t})`,{replaceId:i,pending:!1})}finally{this.aiChatPendingRequest=!1,e&&e.focus()}}async handleAIQuickPrompt(e){if(this.aiChatPendingRequest||!e)return;this.toggleAIChat(!0);const t=document.getElementById("ai-chat-input");t&&(t.value=""),this.appendAIChatMessage("user",e);const i=this.appendAIChatMessage("ai","Analyzing your portfolio...",{pending:!0}),r=this.aiChatMessages.filter(e=>e.id!==i).slice(-10).map(e=>({...e}));this.aiChatPendingRequest=!0;try{const t=this.aiAgent?await this.aiAgent.generateResponse(e,{history:r}):"AI assistant is unavailable at the moment.";this.appendAIChatMessage("ai",t,{replaceId:i,pending:!1})}catch(e){const t=e?.message||"Unknown error",r="Sorry, I could not reach Gemini right now. Please try again soon.";this.appendAIChatMessage("ai",`${r} (${t})`,{replaceId:i,pending:!1})}finally{this.aiChatPendingRequest=!1,t&&t.focus()}}appendAIChatMessage(e,t,i={}){const r="ai"===e?"ai":"user",{suppressRender:s=!1,replaceId:n=null,id:a=null,pending:o=!1}=i||{};if(!n&&("string"!=typeof t||0===t.length))return null;const l=new Date;if(n){const e=this.aiChatMessages.findIndex(e=>e.id===n);if(-1!==e){const i=this.aiChatMessages[e];return this.aiChatMessages[e]={...i,sender:r,text:t||"",timestamp:l,pending:Boolean(o)},s||this.renderAIChatMessages(),this.aiChatMessages[e].id}}const c={id:a||`${this.aiChatSessionId}-${Date.now()}-${Math.random().toString(16).slice(2)}`,sender:r,text:t||"",timestamp:l,pending:Boolean(o)};return this.aiChatMessages=[...this.aiChatMessages,c].slice(-200),s||this.renderAIChatMessages(),c.id}renderAIChatMessages(){const e=document.getElementById("ai-chat-history");e&&(e.innerHTML="",this.aiChatMessages.forEach(t=>{const i=document.createElement("div");i.className=`ai-chat__message ai-chat__message--${t.sender}`,t.pending&&i.classList.add("ai-chat__message--pending");const r=document.createElement("span");r.textContent="ai"===t.sender?this.getGeminiChatDisplayName():"You",i.appendChild(r);const s=document.createElement("div");s.className="ai-chat__bubble",t.pending&&s.setAttribute("data-pending","true"),"ai"===t.sender?s.innerHTML=this.renderMarkdownToHTML(t.text):s.textContent=t.text,i.appendChild(s),e.appendChild(i)}),e.scrollTop=e.scrollHeight)}renderMarkdownToHTML(e=""){if(!e)return"";const t=[],i=/```([\s\S]*?)```/g;let r,s=0;for(;null!==(r=i.exec(e));)r.index>s&&t.push({type:"text",value:e.slice(s,r.index)}),t.push({type:"code",value:r[1]}),s=r.index+r[0].length;return s<e.length&&t.push({type:"text",value:e.slice(s)}),t.map(e=>{if("code"===e.type){const t=e.value.replace(/^\n+|\n+$/g,"");return`<pre class="ai-chat__code"><code>${this.escapeHTML(t)}</code></pre>`}return this.renderMarkdownTextSegment(e.value)}).join("")}renderMarkdownTextSegment(e=""){if(!e)return"";const t=e.replace(/\r/g,"").split("\n"),i=[];let r=[],s=!1,n=!1;const a=()=>{s&&(i.push("</ul>"),s=!1),n&&(i.push("</ol>"),n=!1)},o=()=>{if(!r.length)return;const e=r.join(" ").trim();e&&i.push(`<p>${this.formatMarkdownInline(e)}</p>`),r=[]};return t.forEach(e=>{const t=e.trim();if(!t)return o(),void a();const l=t.match(/^(#{1,3})\s+(.*)$/);if(l){o(),a();const e=Math.min(l[1].length+2,6);return void i.push(`<h${e}>${this.formatMarkdownInline(l[2])}</h${e}>`)}if(/^([-*_])\1{2,}$/.test(t))return o(),a(),void i.push('<hr class="ai-chat__rule">');if(t.startsWith(">")){o(),a();const e=t.replace(/^>\s?/,"");return void i.push(`<blockquote class="ai-chat__quote">${this.formatMarkdownInline(e)}</blockquote>`)}const c=t.match(/^[-*]\s+(.*)$/);if(c)return o(),s||(a(),i.push("<ul>"),s=!0),void i.push(`<li>${this.formatMarkdownInline(c[1])}</li>`);const d=t.match(/^\d+\.\s+(.*)$/);if(d)return o(),n||(a(),i.push("<ol>"),n=!0),void i.push(`<li>${this.formatMarkdownInline(d[1])}</li>`);r.push(e)}),o(),a(),i.join("")}formatMarkdownInline(e=""){if(!e)return"";const t=/\[([^\]]+)\]\(([^)]+)\)/g;let i,r=0,s="";for(;null!==(i=t.exec(e));){if(i.index>r){const t=e.slice(r,i.index);s+=this.applyBasicInlineFormatting(t)}const t=this.applyBasicInlineFormatting(i[1]);s+=`<a href="${this.escapeHTML(this.sanitizeMarkdownUrl(i[2]))}" target="_blank" rel="noopener noreferrer">${t}</a>`,r=i.index+i[0].length}return r<e.length&&(s+=this.applyBasicInlineFormatting(e.slice(r))),s}applyBasicInlineFormatting(e=""){if(!e)return"";let t=this.escapeHTML(e);return t=t.replace(/`([^`]+)`/g,"<code>$1</code>"),t=t.replace(/\*\*([^*]+)\*\*/g,"<strong>$1</strong>"),t=t.replace(/__([^_]+)__/g,"<strong>$1</strong>"),t=t.replace(/\*(?!\s)([^*]+?)\*(?!\*)/g,"<em>$1</em>"),t=t.replace(/_([^_]+)_/g,"<em>$1</em>"),t}sanitizeMarkdownUrl(e=""){try{const t=e.trim();if(!t)return"#";if(t.startsWith("#")){const e=t.slice(1);return e&&/^[a-z0-9_-]{1,64}$/i.test(e)?`#${e}`:"#"}const i=t.toLowerCase();return i.startsWith("http://")||i.startsWith("https://")?t:"#"}catch(e){return"#"}}updateTickerPreview(e){const t=document.getElementById("ticker-preview");if(e&&e.trim()){const i=e.toUpperCase().trim(),r=this.generateTickerLink(i);t.innerHTML="";const s=document.createTextNode("Search ");t.appendChild(s);const n=document.createElement("a");n.href=r,n.target="_blank",n.rel="noopener noreferrer",n.className="ticker-link",n.textContent=i,n.addEventListener("click",e=>{e.preventDefault(),window.open(r,"_blank","noopener,noreferrer")}),t.appendChild(n);const a=document.createTextNode(" on Investing.com");t.appendChild(a)}else t.innerHTML=""}setTodayDate(){const e=this.currentDate,t=`${e.getFullYear()}-${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")}`,i=document.getElementById("entryDate");i&&!this.currentEditingId&&(i.value=t)}showView(e){document.querySelectorAll(".nav-item").forEach(e=>{e.classList.remove("active")});const t=document.querySelector(`[data-view="${e}"]`);t&&t.classList.add("active"),document.querySelectorAll(".view").forEach(e=>{e.classList.remove("active")});const i=document.querySelector(`.${e}-view`);i&&i.classList.add("active");const r={dashboard:"Options Trading Dashboard","add-trade":this.currentEditingId?"Edit Trade":"Add New Trade","trades-list":"All Trades",import:"Import Activity",settings:"Settings"}[e]||"GammaLedger";switch(document.getElementById("page-title").textContent=r,this.currentView=e,e){case"dashboard":this.updateDashboard();break;case"add-trade":this.currentEditingId||this.resetAddTradeForm();break;case"trades-list":this.updateTradesList();break;case"import":this.setupImportControls(),this.renderImportLog();break;case"settings":{const e=this.finnhub?.lastStatus;e&&this.finnhub?.elements?.status&&this.updateFinnhubStatus(e.message,e.variant,0);break}}}resetAddTradeForm(){const e=document.getElementById("add-trade-form");e&&e.reset();const t=document.getElementById("underlyingType");t&&(t.value="Stock");const i=document.getElementById("tradeStatus");i&&(i.value=""),this.currentEditingId=null,this.renderLegForms([]),this.setTodayDate(),this.updateTickerPreview(""),["cycleId","cycleType","cycleRole"].forEach(e=>{const t=document.getElementById(e);t&&(t.value="")})}parseDecimal(e,t=null,{allowNegative:i=!0}={}){if(null==e)return t;let r="string"==typeof e?e.trim():e;if("string"==typeof r){if(""===r)return t;let e=r.replace(/\s+/g,"");if(!e)return t;const i=e.includes(","),s=e.includes(".");if(i&&!s)e=e.replace(/,/g,".");else if(i&&s){const t=e.lastIndexOf(","),i=e.lastIndexOf(".");e=t>i?e.replace(/\./g,"").replace(/,/g,"."):e.replace(/,/g,"")}e=e.replace(/_/g,""),r=e}const s=Number(r);return Number.isFinite(s)?!i&&s<0?t:s:t}parseDateValue(e){if(!e)return null;if(e instanceof Date)return Number.isNaN(e.getTime())?null:e;const t=e.toString().trim();if(!t)return null;const i=new Date(t);return Number.isNaN(i.getTime())?null:i}parseInteger(e,t=null,{allowNegative:i=!0}={}){if(null==e)return t;const r="string"==typeof e?e.trim():e;if(""===r)return t;const s=parseInt(r,10);return Number.isFinite(s)?!i&&s<0?t:s:t}parseExitPrice(e){const t=this.parseDecimal(e,null,{allowNegative:!1});return null===t?null:t}handleTradeSubmit(){const e=document.getElementById("add-trade-form");if(!e)return;const t=new FormData(e),i=this.collectLegsFromForm();if(null===i)return;if(0===i.length)return void this.showNotification("Add at least one leg before saving the trade.","error");const r=(t.get("ticker")||"").toString().trim().toUpperCase();if(!r)return void this.showNotification("Ticker is required.","error");const s=(t.get("strategy")||"").toString().trim();if(!s)return void this.showNotification("Strategy is required.","error");const n=this.normalizeUnderlyingType(t.get("underlyingType"),{fallback:"Stock"}),a=this.normalizeTradeStatusInput(t.get("tradeStatus")),o={ticker:r,strategy:s,exitReason:(t.get("exitReason")||"").toString().trim(),notes:(t.get("notes")||"").toString().trim(),legs:i,cycleId:(t.get("cycleId")||"").toString().trim(),cycleType:(t.get("cycleType")||"").toString().trim(),cycleRole:(t.get("cycleRole")||"").toString().trim(),underlyingType:n};if(a&&(o.statusOverride=a),this.currentEditingId)return o.id=this.currentEditingId,void(this.updateTrade(o)&&(this.showNotification("Trade updated successfully","success"),this.resetAddTradeForm(),this.showView("trades-list")));o.id=Date.now();const l=this.enrichTradeData(o);this.trades.push(l),this.saveToStorage(),this.markUnsavedChanges(),this.resetAddTradeForm(),this.showView("dashboard")}updateTrade(e){try{e.id=this.currentEditingId;const t=this.enrichTradeData(e),i=this.trades.findIndex(e=>e.id===this.currentEditingId);return-1!==i&&(this.trades[i]=t,this.saveToStorage(),this.markUnsavedChanges(),!0)}catch(e){return console.error("Error updating trade:",e),!1}}updateDashboard(){const e=this.calculateAdvancedStats(),{openTradesList:t,closedTradesList:i}=e;this.latestStats=e,this.aiAgent&&this.aiAgent.updateContext({stats:e,openTrades:t,closedTrades:i}),this.cycleAnalytics=this.calculateCycleAnalytics(),document.getElementById("total-pl").textContent=this.formatCurrency(e.totalPL),document.getElementById("pl-percentage").textContent=`${e.totalROI.toFixed(2)}% Return`,document.getElementById("win-rate").textContent=`${e.winRate.toFixed(1)}%`,document.getElementById("win-loss-count").textContent=`${e.wins}W / ${e.losses}L`,document.getElementById("profit-factor").textContent=e.profitFactor.toFixed(2),document.getElementById("active-positions").textContent=e.activePositions,document.getElementById("total-roi").textContent=`${e.annualizedROI.toFixed(2)}%`,document.getElementById("max-drawdown").textContent=`${e.maxDrawdown.toFixed(1)}%`,this.updateActivePositionsTable(t),this.updateRecentTradesTable(i,e.activePositions),this.updateCycleSummaryTable(this.cycleAnalytics),setTimeout(()=>{this.updateAllCharts()},200)}calculateAdvancedStats(){const e=this.trades.filter(e=>this.isClosedStatus(e.status)),t=this.trades.filter(e=>this.isActiveStatus(e.status)),i=e.filter(e=>e.pl>0),r=e.filter(e=>e.pl<0),s=e.reduce((e,t)=>e+t.pl,0),n=e.reduce((e,t)=>{const i=this.getCapitalAtRisk(t);return i>0?e+i:e},0),a=e.length>0?i.length/e.length*100:0,o=i.reduce((e,t)=>e+t.pl,0),l=Math.abs(r.reduce((e,t)=>e+t.pl,0)),c=l>0?o/l:o>0?999:0;let d=0,u=0,m=0;[...e].sort((e,t)=>new Date(e.exitDate)-new Date(t.exitDate)).forEach(e=>{m+=e.pl,m>u&&(u=m);const t=u>0?(u-m)/u*100:0;t>d&&(d=t)});const h=n>0?s/n*100:0,p=e.length>0?e.reduce((e,t)=>e+t.daysHeld,0)/e.length:0,g=p>0?100*(Math.pow(1+h/100,365/p)-1):0,y=e.reduce((e,t)=>{const i=Number(t.totalFees);if(Number.isFinite(i))return e+i;const r=Number(t.fees);return Number.isFinite(r)?e+r:e},0),f=y+o+l,b=f>0?y/f*100:0,C=e.map(e=>{const t=Number(e.roi),i=Math.max(1,Number(e.daysHeld)||0);if(Number.isFinite(t)){const e=1+t/100;return e>0?Math.pow(e,1/i)-1:t/100/i}const r=this.getCapitalAtRisk(e),s=Number(e.pl)||0;if(!(r>0))return null;const n=s/r*100;if(!Number.isFinite(n))return null;const a=1+n/100;return a>0?Math.pow(a,1/i)-1:n/100/i}).filter(e=>Number.isFinite(e)),T=C.length?C.reduce((e,t)=>e+t,0)/C.length:0;let S=0;if(C.length>1){const e=C.reduce((e,t)=>e+Math.pow(t-T,2),0)/(C.length-1);S=e>0?Math.sqrt(e):0}const v=C.filter(e=>e<0),L=v.length?Math.sqrt(v.reduce((e,t)=>e+t*t,0)/v.length):0,N=S>0?T/S*Math.sqrt(252):null,x=L>0?T/L*Math.sqrt(252):0===v.length&&T>0?Number.POSITIVE_INFINITY:null,k=i.length>0?i.reduce((e,t)=>e+(Number(t.daysHeld)||0),0)/i.length:0,I=r.length>0?r.reduce((e,t)=>e+(Number(t.daysHeld)||0),0)/r.length:0,w=this.calculateTickerPerformance(e);return{totalTrades:this.trades.length,totalPL:s,winRate:a,wins:i.length,losses:r.length,profitFactor:c,activePositions:t.length,totalROI:h,annualizedROI:g,maxDrawdown:d,closedTrades:e.length,totalInvestment:n,closedTradesList:e,openTradesList:t,totalFees:y,feeShareOfGross:b,dailyReturns:C,meanDailyReturn:T,dailyStdDev:S,downsideDeviation:L,sharpeRatio:N,sortinoRatio:x,avgWinnerDays:k,avgLoserDays:I,tickerPerformance:w}}calculateTickerPerformance(e=[]){const t=new Map;e.forEach(e=>{const i=(e.ticker||"Unknown").toString().trim().toUpperCase()||"UNKNOWN";t.has(i)||t.set(i,{ticker:i,totalPL:0,tradeCount:0,wins:0,losses:0});const r=t.get(i),s=Number(e.pl)||0;r.totalPL+=s,r.tradeCount+=1,s>0?r.wins+=1:s<0&&(r.losses+=1)});const i=Array.from(t.values()).map(e=>{const t=e.tradeCount>0?e.wins/e.tradeCount*100:0,i=e.tradeCount>0?e.totalPL/e.tradeCount:0;return{...e,avgPL:i,winRate:t}}).sort((e,t)=>Math.abs(t.totalPL)-Math.abs(e.totalPL)),r=i.length?Math.max(...i.map(e=>Math.abs(e.totalPL))):0;return{items:i,maxMagnitude:r}}calculateCycleAnalytics(){const e=new Map;this.trades.forEach(t=>{const i=this.normalizeCycleId(t.cycleId);if(!i)return;const r=e.get(i)||{cycleId:i,cycleType:this.normalizeCycleType(t.cycleType,t.strategy),trades:[],ticker:t.ticker||""};!r.ticker&&t.ticker&&(r.ticker=t.ticker),r.cycleType||(r.cycleType=this.normalizeCycleType(t.cycleType,t.strategy)),r.trades.push(t),e.set(i,r)});const t=Array.from(e.values()).map(e=>this.computeCycleMetrics(e));return t.sort((e,t)=>{const i=e.startDate?new Date(e.startDate).getTime():0;return(t.startDate?new Date(t.startDate).getTime():0)-i}),t}computeCycleMetrics(e){const t=[...e.trades].sort((e,t)=>new Date(e.entryDate)-new Date(t.entryDate)),i=this.normalizeCycleType(e.cycleType,t[0]?.strategy||"");let r=null,s=null,n=!1,a=0,o=0,l=0,c=0,d=0,u=0,m=0,h=null,p=null,g=null,y=0,f=0;t.forEach(e=>{const t=e.entryDate?new Date(e.entryDate):null;t&&!isNaN(t.getTime())&&(!r||t<r)&&(r=t);const i=e.exitDate?new Date(e.exitDate):null;i&&!isNaN(i.getTime())?(!s||i>s)&&(s=i):n=!0;const b=Number(e.pl)||0;o+=b;const C=Math.abs(Number(e.quantity)||0);C>f&&(f=C);if("short"===(e.tradeDirection||this.inferTradeDirection(e))){const t=this.calculateOptionPremium(e);if(a+=t,this.isWheelPut(e)){l+=t;const i=Number(e.strikePrice)||0;!h&&i>0&&(h=i);const r=i*C*100;r>m&&(m=r)}(this.isCoveredCall(e)||this.isPmccShortCall(e))&&(c+=t)}else if(this.isPmccBaseLeg(e)){const t=Number(e.entryPrice),i=Number(e.exitPrice),r=Number(e.fees),s=Number.isFinite(t)?t*C*100:0,n=Number.isFinite(i)?i*C*100:0,a=Number.isFinite(r)?Math.max(r,0):0;d+=s-n+a,s>0&&(u+=s+a);const o=Number(e.strikePrice);Number.isFinite(o)&&o>0&&(this.isClosedStatus(e.status)||(g=o),p=o)}if(this.isAssignmentTrade(e)){y+=C;const t=Number(e.strikePrice)||Number(e.stockPriceAtEntry)||null;if(!h&&Number.isFinite(t)&&t>0&&(h=t),Number.isFinite(t)&&t>0){const e=t*C*100;e>m&&(m=e)}}}),Number.isFinite(g)&&g>0&&(p=g);const b=n?"In Progress":"Closed",C=r?r.toISOString():null,T=!n&&s?s.toISOString():null;let S=null,v=null,L=null,N=null;if("wheel"===i&&h&&f>0)S=h-a/(100*f),v=S,L=m||h*f*100;else if("pmcc"===i){N=d-c;const e=Number.isFinite(N)&&N>0?N:null,t=d>0?d:null,i=u>0?u:null;e?L=e:t?L=t:i&&(L=i);const r=e||t||i;r&&r>m&&(m=r),Number.isFinite(p)&&p>0&&f>0&&Number.isFinite(N)&&(v=p+N/(100*f))}Number.isFinite(d)&&Math.abs(d)<1e-6&&(d=0),Number.isFinite(N)&&Math.abs(N)<1e-6&&(N=0);let x=L;if((!x||x<=0)&&("wheel"===i?x=m||(h&&f>0?h*f*100:null):"pmcc"===i&&(Number.isFinite(N)&&N>0?x=N:d>0?x=d:u>0&&(x=u))),!x||x<=0){const e=t.reduce((e,t)=>{const i=Math.abs(Number(t.quantity)||0);if(!i)return e;const r=Number(t.entryPrice),s=Number(t.fees)||0,n=this.getTradeType(t);if("BTO"===n||"BTC"===n){const t=(Number.isFinite(r)?r:0)*i*100+(Number.isFinite(s)?Math.max(s,0):0);return e+Math.max(t,0)}return e},0);x=e>0?e:null}(!L||L<=0)&&(L=x&&x>0?x:null);const k=L?o/L*100:null;let I="",w=null;return"wheel"===i&&null!==S?(I="Eff. Basis",w=S):"pmcc"===i&&null!==N&&(I="Net Basis",w=N),{cycleId:e.cycleId,cycleType:i,typeLabel:"pmcc"===i?"Poor Man's Covered Call":"wheel"===i?"Wheel":i?i.toUpperCase():"Custom",ticker:e.ticker||t[0]?.ticker||"—",trades:t,startDate:C,endDate:T,status:b,totalPremiums:a,totalPL:o,putPremiums:l,callPremiums:c,baseCost:d,baseInitialCost:u,capitalAtRisk:m,effectiveCostBasis:S,netBasis:N,costBasis:x,assignments:y,maxContracts:f,roiPercent:k,keyMetricLabel:I,keyMetricValue:w,breakevenPrice:v,hasOpenTrade:n,durationDays:r?this.calculateDaysBetween(r,s||this.currentDate):0}}updateCycleSummaryTable(e=this.cycleAnalytics||[]){const t=document.querySelector("#cycle-summary-table tbody"),i=document.getElementById("cycle-summary-empty");if(!t)return;if(t.innerHTML="",!Array.isArray(e)||0===e.length)return void(i&&i.classList.remove("hidden"));i&&i.classList.add("hidden");const r=["Cycle","Type","Ticker","Status","Trades","Premiums","Total P&L","ROI","Cost Basis","Key Metrics","Timeline"];e.forEach(e=>{const i=t.insertRow(),s=i.insertCell(0),n=this.normalizeCycleId(e.cycleId);if(n){const t=document.createElement("button");t.type="button",t.className="cycle-chip cycle-chip--link",t.textContent=n,t.title="Open All Trades filtered by this cycle",t.addEventListener("click",()=>{this.openTradesFilteredByCycle(n,e.ticker)}),s.appendChild(t)}else s.textContent="—";i.insertCell(1).textContent=e.typeLabel,i.insertCell(2).textContent=e.ticker||"—";const a=i.insertCell(3),o=document.createElement("span"),l="Closed"===e.status?"closed":"open";o.className=`status-badge ${l}`,o.textContent=e.status,a.appendChild(o),i.insertCell(4).textContent=e.trades.length;i.insertCell(5).textContent=this.formatCurrency(e.totalPremiums);const c=i.insertCell(6);c.textContent=this.formatCurrency(e.totalPL),e.totalPL>0?c.className="pl-positive":e.totalPL<0?c.className="pl-negative":c.className="pl-neutral";const d=i.insertCell(7);d.textContent=this.formatPercent(e.roiPercent),e.roiPercent>0?d.className="pl-positive":e.roiPercent<0?d.className="pl-negative":d.className="pl-neutral";const u=i.insertCell(8);Number.isFinite(e.costBasis)?u.textContent=this.formatCurrency(e.costBasis):(u.textContent="—",u.className="pl-neutral");const m=i.insertCell(9);if(e.keyMetricLabel&&Number.isFinite(e.keyMetricValue)){const t=document.createElement("div");if(t.className="cell-metric__label",t.textContent=`${e.keyMetricLabel}: ${this.formatCurrency(e.keyMetricValue)}`,m.appendChild(t),e.breakevenPrice&&Number.isFinite(e.breakevenPrice)){const t=document.createElement("div");t.className="cell-metric__subtext",t.textContent=`Breakeven: ${this.formatCurrency(e.breakevenPrice)}`,m.appendChild(t)}if("wheel"===e.cycleType&&e.assignments){const t=document.createElement("div");t.className="cell-metric__subtext",t.textContent=`Assignments: ${e.assignments}`,m.appendChild(t)}}else if(Number.isFinite(e.costBasis)){const t=document.createElement("div");if(t.className="cell-metric__label",t.textContent=`Cost Basis: ${this.formatCurrency(e.costBasis)}`,m.appendChild(t),e.breakevenPrice&&Number.isFinite(e.breakevenPrice)){const t=document.createElement("div");t.className="cell-metric__subtext",t.textContent=`Breakeven: ${this.formatCurrency(e.breakevenPrice)}`,m.appendChild(t)}if("wheel"===e.cycleType&&e.assignments){const t=document.createElement("div");t.className="cell-metric__subtext",t.textContent=`Assignments: ${e.assignments}`,m.appendChild(t)}}else"wheel"===e.cycleType&&e.assignments?m.textContent=`Assignments: ${e.assignments}`:m.textContent="—";i.insertCell(10).textContent=this.formatCycleDateRange(e.startDate,e.endDate,e.hasOpenTrade),this.applyResponsiveLabels(i,r)})}updateActivePositionsTable(e=this.trades.filter(e=>this.isActiveStatus(e.status))){const t=document.querySelector("#active-positions-table tbody");if(t){t.innerHTML="";const i=[...Array.isArray(e)?e:[]].sort((e,t)=>this.parseInteger(e.dte,Number.POSITIVE_INFINITY,{allowNegative:!1})-this.parseInteger(t.dte,Number.POSITIVE_INFINITY,{allowNegative:!1})),r=["Ticker","Strategy","Strike","Current Price","DTE","Max Risk","Notes"],s=new Map;i.forEach(e=>{const i=t.insertRow();i.dataset.tradeId=String(e.id??"");const n=i.insertCell(0),a=(e.ticker??"").toString().trim().toUpperCase(),o=this.createTickerElement(e.ticker,"ticker-pill",{behavior:"filter",onClick:e=>this.openTradesFilteredByTicker(e),title:a?`View all trades for ${a}`:""});n.appendChild(o),i.dataset.ticker=a,i.insertCell(1).textContent=e.strategy||"—";const l=this.parseDecimal(e.strikePrice);i.insertCell(2).textContent=null!==l?`$${l.toFixed(2)}`:"—",Number.isFinite(l)?i.dataset.strikePrice=String(l):delete i.dataset.strikePrice;const c=i.insertCell(3);c.className="quote-cell";const d=`${this.getQuoteEntryKey(e)}|row:${s.size}`;i.dataset.quoteKey=d,this.populateQuoteCell(c,e,i,{deferNetworkFetch:!0}),s.set(d,{trade:e,row:i,cell:c,key:d});const u=this.parseInteger(e.dte,null,{allowNegative:!1});i.insertCell(4).textContent=null!==u?u:"—",Number.isFinite(u)?i.dataset.dte=String(u):delete i.dataset.dte;const m=i.insertCell(5),h=this.parseDecimal(e.maxRisk,null,{allowNegative:!1});null!==h?(m.textContent=this.formatCurrency(h),m.className="pl-negative"):(m.textContent="—",m.className="pl-neutral");const p=i.insertCell(6),g=(e.notes||"").trim();p.textContent=g||"—",p.classList.add("notes-cell"),g&&(p.title=g),this.updateExpirationHighlight(i,e),this.applyResponsiveLabels(i,r)}),this.activeQuoteEntries=s,this.rebuildQuoteRefreshSchedule(),this.startQuoteAutoRefreshIfNeeded(),this.refreshActivePositionsQuotes({force:!0,immediate:!0})}}updateRecentTradesTable(e=this.trades.filter(e=>this.isClosedStatus(e.status)),t=this.trades.filter(e=>this.isActiveStatus(e.status)).length){const i=Number(t),r=Math.max(Number.isFinite(i)?i:0,10),s=[...Array.isArray(e)?e:[]].sort((e,t)=>new Date(t.exitDate)-new Date(e.exitDate)).slice(0,r),n=document.querySelector("#recent-trades-table tbody");if(n){n.innerHTML="";const e=["Ticker","Strategy","Exit Date","Days Held","P&L","ROI"];s.forEach(t=>{const i=n.insertRow(),r=i.insertCell(0),s=(t.ticker??"").toString().trim().toUpperCase(),a=this.createTickerElement(t.ticker,"ticker-pill",{behavior:"filter",onClick:e=>this.openTradesFilteredByTicker(e),title:s?`View all trades for ${s}`:""});r.appendChild(a),i.insertCell(1).textContent=t.strategy,i.insertCell(2).textContent=this.formatDate(t.exitDate);const o=i.insertCell(3),l=Number(t.daysHeld);o.textContent=Number.isFinite(l)?l:"—";const c=i.insertCell(4);c.textContent=this.formatCurrency(t.pl),c.className=t.pl>=0?"pl-positive":"pl-negative";const d=i.insertCell(5),u=Number(t.roi);Number.isFinite(u)?(d.textContent=`${u.toFixed(2)}%`,d.className=u>=0?"pl-positive":"pl-negative"):(d.textContent="—",d.className="pl-neutral"),this.applyResponsiveLabels(i,e)})}}updateAllCharts(){this.updateMonthlyPLChart(),this.updateCumulativePLChart(),this.updateStrategyPerformanceChart(),this.updateWinRateByStrategyChart(),this.updatePerformanceGauges(),this.updateCommissionImpactChart(),this.updateTimeInTradeChart(),this.updateMonteCarloChart(),this.renderTickerHeatmap()}updatePerformanceGauges(){const e=this.latestStats;this.renderRatioGauge({chartKey:"sharpeGauge",canvasId:"sharpeGaugeChart",valueElementId:"sharpeGaugeValue",value:e?.sharpeRatio,min:-1,max:3}),this.renderRatioGauge({chartKey:"sortinoGauge",canvasId:"sortinoGaugeChart",valueElementId:"sortinoGaugeValue",value:e?.sortinoRatio,min:-1,max:4})}renderRatioGauge({chartKey:e,canvasId:t,valueElementId:i,value:r,min:s=0,max:n=1}){const a=document.getElementById(i);a&&(a.textContent=Number.isFinite(r)?r.toFixed(2):"—");const o=document.getElementById(t);if(!o)return;if(!Number.isFinite(r))return void(this.charts[e]&&(this.charts[e].destroy(),delete this.charts[e]));const l=o.getContext("2d");if(!l)return;const c=(Math.min(Math.max(r,s),n)-s)/Math.max(n-s,1),d=Number.isFinite(c)?Math.max(Math.min(c,1),0):0,u=Math.max(1-d,0),m=r>=1.5?"#1FB8CD":r>=.75?"#FFC185":"#B4413C";this.charts[e]&&this.charts[e].destroy(),this.charts[e]=new Chart(l,{type:"doughnut",data:{labels:["Ratio","Remaining"],datasets:[{data:[d,u],backgroundColor:[m,"rgba(148, 163, 184, 0.25)"],borderWidth:0}]},options:{responsive:!0,maintainAspectRatio:!1,rotation:-90,circumference:180,cutout:"70%",plugins:{legend:{display:!1},tooltip:{callbacks:{label:()=>`Ratio: ${r.toFixed(2)}`}}}}})}updateCommissionImpactChart(){const e=document.getElementById("commissionImpactChart"),t=document.getElementById("commissionImpactSummary"),i=this.latestStats;if(!e)return;if(!i)return t&&(t.textContent="No closed trades yet."),void(this.charts.commissionImpact&&(this.charts.commissionImpact.destroy(),delete this.charts.commissionImpact));const r=Number(i.totalFees)||0,s=Number(i.totalPL)||0,n=Number(i.feeShareOfGross)||0;if(t)if(0===r&&0===s)t.textContent="No closed trades yet.";else{const e=Number.isFinite(n)?n.toFixed(1):"0.0";t.textContent=`${this.formatCurrency(r)} in fees (${e}% of realized turnover).`}const a=e.getContext("2d");if(!a)return;this.charts.commissionImpact&&this.charts.commissionImpact.destroy();const o=e=>this.formatCurrency(e||0);this.charts.commissionImpact=new Chart(a,{type:"bar",data:{labels:["Fees","Net P&L"],datasets:[{label:"Amount",data:[r,s],backgroundColor:["#B4413C",s>=0?"#1FB8CD":"#B4413C"],borderRadius:8,borderSkipped:!1}]},options:{indexAxis:"y",responsive:!0,maintainAspectRatio:!1,scales:{x:{ticks:{callback:e=>`$${Number(e).toLocaleString()}`},grid:{drawBorder:!1}},y:{grid:{display:!1}}},plugins:{legend:{display:!1},tooltip:{callbacks:{label:e=>`${e.label}: ${o(e.raw)}`}}}}})}renderTickerHeatmap(){const e=document.getElementById("tickerHeatmap");if(!e)return;e.innerHTML="";const t=this.latestStats,i=t?.tickerPerformance?.items||[];if(!i.length){const t=document.createElement("div");return t.className="heatmap-empty",t.textContent="Add more closed trades to see per-ticker performance.",void e.appendChild(t)}const r=t?.tickerPerformance?.maxMagnitude||1;i.slice(0,12).forEach(t=>{const i=document.createElement("div");i.className="heatmap-card";const s=t.totalPL>=0?[31,184,205]:[180,65,60],n=.15+.55*(r>0?Math.min(Math.abs(t.totalPL)/r,1):0),a=Math.min(n+.1,.9);i.style.backgroundColor=`rgba(${s[0]}, ${s[1]}, ${s[2]}, ${n.toFixed(2)})`,i.style.borderColor=`rgba(${s[0]}, ${s[1]}, ${s[2]}, ${a.toFixed(2)})`;const o=document.createElement("div");o.className="heatmap-card__ticker",o.textContent=t.ticker;const l=document.createElement("div");l.className="heatmap-card__pl "+(t.totalPL>=0?"pl-positive":"pl-negative"),l.textContent=this.formatCurrency(t.totalPL);const c=document.createElement("div");c.className="heatmap-card__meta";const d=Number.isFinite(t.winRate)?t.winRate.toFixed(0):"0";c.textContent=`${t.tradeCount} trades • Win ${d}%`,i.appendChild(o),i.appendChild(l),i.appendChild(c),e.appendChild(i)})}updateTimeInTradeChart(){const e=document.getElementById("timeInTradeChart"),t=this.latestStats;if(!e)return;if(!t||0===t.closedTrades||!Number.isFinite(t.avgWinnerDays)&&!Number.isFinite(t.avgLoserDays))return void(this.charts.timeInTrade&&(this.charts.timeInTrade.destroy(),delete this.charts.timeInTrade));const i=e.getContext("2d");if(!i)return;this.charts.timeInTrade&&this.charts.timeInTrade.destroy();const r=Number.isFinite(t.avgWinnerDays)?t.avgWinnerDays:0,s=Number.isFinite(t.avgLoserDays)?t.avgLoserDays:0;this.charts.timeInTrade=new Chart(i,{type:"bar",data:{labels:["Winners","Losers"],datasets:[{label:"Average Days Held",data:[r,s],backgroundColor:["#1FB8CD","#B4413C"],borderRadius:8,borderSkipped:!1}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{beginAtZero:!0,ticks:{callback:e=>`${e}d`},grid:{drawBorder:!1}},x:{grid:{display:!1}}},plugins:{legend:{display:!1},tooltip:{callbacks:{label:e=>`${e.label}: ${e.raw.toFixed(1)} days`}}}}})}updateMonteCarloChart(){const e=document.getElementById("monteCarloChart"),t=document.getElementById("monteCarloSummary"),i=this.latestStats;if(!e)return;if(!i||!Array.isArray(i.dailyReturns)||i.dailyReturns.length<2)return t&&(t.textContent="Need more closed trades to run projections."),void(this.charts.monteCarlo&&(this.charts.monteCarlo.destroy(),delete this.charts.monteCarlo));const r=this.generateMonteCarloProjection(i.dailyReturns,{periods:60,simulations:400});if(!r)return t&&(t.textContent="Need more closed trades to run projections."),void(this.charts.monteCarlo&&(this.charts.monteCarlo.destroy(),delete this.charts.monteCarlo));const s=e.getContext("2d");if(!s)return;this.charts.monteCarlo&&this.charts.monteCarlo.destroy();const n=r.percentiles.p50[r.percentiles.p50.length-1]||1;if(t){const e=100*(n-1),i=`${e>=0?"+":""}${e.toFixed(1)}%`;t.textContent=`Median path suggests ${i} over 60 trading days.`}const a=e=>{const t=100*(Number(e)-1);return`${t>=0?"+":""}${t.toFixed(1)}%`};this.charts.monteCarlo=new Chart(s,{type:"line",data:{labels:r.labels,datasets:[{label:"10th percentile",data:r.percentiles.p10,borderColor:"rgba(180, 65, 60, 0.6)",backgroundColor:"rgba(180, 65, 60, 0.12)",borderWidth:1.5,fill:!1,tension:.25},{label:"90th percentile",data:r.percentiles.p90,borderColor:"rgba(31, 184, 205, 0.6)",backgroundColor:"rgba(31, 184, 205, 0.12)",borderWidth:1.5,fill:"-1",tension:.25},{label:"Median",data:r.percentiles.p50,borderColor:"#1FB8CD",borderWidth:2,tension:.25,fill:!1}]},options:{responsive:!0,maintainAspectRatio:!1,interaction:{intersect:!1,mode:"index"},scales:{y:{ticks:{callback:e=>a(e)},grid:{drawBorder:!1}},x:{grid:{display:!1},ticks:{maxTicksLimit:12}}},plugins:{legend:{position:"bottom"},tooltip:{callbacks:{label:e=>`${e.dataset.label}: ${a(e.parsed.y)}`}}}}})}generateMonteCarloProjection(e=[],{periods:t=60,simulations:i=400}={}){if(!Array.isArray(e)||0===e.length)return null;const r=e.filter(e=>Number.isFinite(e));if(!r.length)return null;const s=Array.from({length:t},()=>[]);for(let e=0;e<i;e+=1){let e=1;for(let i=0;i<t;i+=1){e*=1+r[Math.floor(Math.random()*r.length)],s[i].push(Number(e.toFixed(6)))}}const n=[.1,.25,.5,.75,.9],a=n.map(()=>[]);return s.forEach(e=>{if(!e.length)return void n.forEach((e,t)=>a[t].push(1));const t=e.slice().sort((e,t)=>e-t);n.forEach((e,i)=>{const r=(t.length-1)*e,s=Math.floor(r),n=Math.ceil(r);if(s===n)return void a[i].push(t[s]);const o=t[s],l=o+(t[n]-o)*(r-s);a[i].push(Number(l.toFixed(6)))})}),{labels:Array.from({length:t},(e,t)=>`Day ${t+1}`),percentiles:{p10:a[0],p25:a[1],p50:a[2],p75:a[3],p90:a[4]}}}initializeGeminiControls(){const e=document.getElementById("gemini-controls");if(!e)return;const t=document.getElementById("gemini-api-key"),i=document.getElementById("gemini-model"),r=document.getElementById("gemini-save"),s=document.getElementById("gemini-clear"),n=document.getElementById("gemini-status");if(this.gemini.elements={container:e,keyInput:t,modelSelect:i,saveButton:r,clearButton:s,status:n},this.syncGeminiControlsFromState({preserveStatus:Boolean(this.gemini.pendingStatus)}),GEMINI_ALLOWED_MODELS.includes(this.gemini.model)||(this.gemini.model="gemini-2.5-flash"),i){0===Array.from(i.options).map(e=>e.value).length&&GEMINI_ALLOWED_MODELS.forEach(e=>{const t=document.createElement("option");t.value=e,t.textContent=e.replace(/gemini-2\.5-/,"Gemini 2.5 ").replace(/-/g," ").replace(/\b([a-z])/g,(e,t)=>t.toUpperCase()),i.appendChild(t)}),i.value=GEMINI_ALLOWED_MODELS.includes(this.gemini.model)?this.gemini.model:"gemini-2.5-flash",this.setGeminiModel(i.value),i.addEventListener("change",()=>{this.setGeminiModel(i.value),this.saveGeminiConfigToStorage()})}const a=async()=>{const e=(t?.value||"").trim();this.setGeminiApiKey(e,{persist:!1,updateUI:!1});const i=this.gemini.apiKey,r=this.getCrypto();if(!e)return this.removeGeminiEncryptionKey(),this.saveGeminiConfigToStorage(),t&&(t.value=""),this.updateGeminiStatus("API key cleared. Connect your Gemini key via Settings to get tailored analysis.","neutral",6e3),this.initializeAIChat(),void this.updateAIChatHeader();if(!r?.subtle)return this.saveGeminiConfigToStorage({includeApiKey:!0}),this.updateGeminiStatus("Gemini API key saved (unencrypted — Web Crypto unavailable).","success",6e3),t&&(t.value=i),this.initializeAIChat(),void this.updateAIChatHeader();await this.encryptAndStoreGeminiApiKey(r)?this.updateGeminiStatus("Gemini API key saved securely.","success",5e3):(this.saveGeminiConfigToStorage({includeApiKey:!0}),this.updateGeminiStatus("Gemini API key saved (unencrypted fallback).","neutral",6e3)),t&&(t.value=i),this.initializeAIChat(),this.updateAIChatHeader()};r?.addEventListener("click",async e=>{e.preventDefault(),await a()}),t?.addEventListener("keydown",async e=>{"Enter"===e.key&&(e.preventDefault(),await a())}),s?.addEventListener("click",e=>{e.preventDefault(),t&&(t.value=""),this.setGeminiApiKey("",{persist:!1,updateUI:!1}),this.removeGeminiEncryptionKey(),this.saveGeminiConfigToStorage(),this.updateGeminiStatus("API key cleared. Connect your Gemini key via Settings to get tailored analysis.","neutral",6e3),this.initializeAIChat(),this.updateAIChatHeader()}),this.updateAIChatHeader(),this.flushPendingGeminiStatus()}syncGeminiControlsFromState({preserveStatus:e=!0}={}){const t=this.gemini?.elements?.keyInput,i=this.gemini?.apiKey?this.gemini.apiKey:"";t&&t.value!==i&&(t.value=i);const r=Boolean(i),s=!e&&!this.gemini?.pendingStatus,n=e&&!this.gemini?.lastStatus&&!this.gemini?.pendingStatus;if((s||n)&&this.updateGeminiStatus){const e=r?"API key loaded":"Not set",t=r?"success":"neutral";this.updateGeminiStatus(e,t)}this.updateAIChatHeader()}flushPendingGeminiStatus(){const e=this.gemini?.pendingStatus;e&&(this.updateGeminiStatus(e.message,e.variant,e.autoClearMs),this.gemini.pendingStatus=null)}getGeminiModelLabel(e=""){const t=(e||"").toLowerCase(),i={"gemini-2.5-flash-lite":"Gemini 2.5 Flash Lite","gemini-2.5-flash":"Gemini 2.5 Flash","gemini-2.5-pro":"Gemini 2.5 Pro"};if(i[t])return i[t];if(!t)return"";return t.replace(/^gemini[-\s]?/i,"Gemini ").replace(/-/g," ").replace(/\b([a-z])/g,(e,t)=>t.toUpperCase()).trim()||"Gemini"}getGeminiChatDisplayName(){const e=this.getGeminiModelLabel(this.gemini?.model);return e||"Gemini"}updateAIChatHeader(){const e=document.getElementById("ai-chat-title"),t=document.getElementById("ai-chat-subtitle");if(!e&&!t)return;if(e&&(e.textContent="Portfolio AI Coach"),!t)return;Boolean(this.gemini?.apiKey)?t.textContent="Ask about your portfolio for AI-guided insights.":t.innerHTML='Connect your Gemini API key in <a href="#settings" class="ai-chat__settings-link">Settings</a> to get tailored analysis.'}updateGeminiStatus(e,t="neutral",i=0){const r=this.gemini?.elements?.status;if(!r||!e)return;const s=["success","error","neutral"].includes(t)?t:"neutral";r.textContent=e,r.classList.remove("is-success","is-error"),"success"===s?r.classList.add("is-success"):"error"===s&&r.classList.add("is-error"),this.gemini.statusTimeoutId&&clearTimeout(this.gemini.statusTimeoutId),this.gemini.lastStatus={message:e,variant:s},this.gemini.pendingStatus=null,i>0&&(this.gemini.statusTimeoutId=setTimeout(()=>{r.isConnected&&(r.textContent="neutral"===s?"Not set":"",r.classList.remove("is-success","is-error"))},i))}setGeminiApiKey(e,{persist:t=!1,updateUI:i=!0}={}){const r=(e||"").trim();r!==this.gemini.apiKey&&(this.gemini.apiKey=r,i&&this.gemini.elements?.keyInput&&(this.gemini.elements.keyInput.value=r),t&&this.saveGeminiConfigToStorage({includeApiKey:!0}))}setGeminiModel(e){const t=(e||"").trim(),i=GEMINI_ALLOWED_MODELS.includes(t)?t:"gemini-2.5-flash",r=this.gemini.model;this.gemini.model=i;const s=this.gemini.elements?.modelSelect;s&&s.value!==this.gemini.model&&(s.value=this.gemini.model),this.gemini.model!==r&&(this.updateAIChatHeader(),this.renderAIChatMessages())}async loadGeminiConfigFromStorage(){let e="",t=null;try{const i=localStorage.getItem(GEMINI_STORAGE_KEY);if(!i)return this.setGeminiApiKey("",{persist:!1,updateUI:!1}),this.gemini.pendingStatus=null,this.syncGeminiControlsFromState({preserveStatus:!0}),!1;const r=JSON.parse(i);if(!r||"object"!=typeof r)return this.setGeminiApiKey("",{persist:!1,updateUI:!1}),this.gemini.pendingStatus=null,this.syncGeminiControlsFromState({preserveStatus:!0}),!1;if("string"==typeof r.model&&r.model.trim()&&this.setGeminiModel(r.model.trim()),r.enc&&r.payload){const i=this.getCrypto();if(i?.subtle)try{const t=await this.ensureGeminiEncryptionKey(i);if(!t)throw new Error("Encryption key unavailable");const s=await this.decryptString(r.payload,i,t);"string"==typeof s&&(e=s.trim())}catch(e){console.warn("Failed to decrypt stored Gemini API key:",e),t={message:"Failed to decrypt stored Gemini API key. Please re-enter it in Settings.",variant:"error",autoClearMs:9e3}}else console.warn("Encrypted Gemini API key stored but Web Crypto unavailable."),t={message:"Stored Gemini API key is encrypted, but this browser cannot decrypt it. Please re-enter it in Settings.",variant:"error",autoClearMs:9e3}}if(e||"string"!=typeof r.apiKey||(e=r.apiKey.trim()),!e&&"string"==typeof r.fallback&&r.fallback.trim())try{e=atob(r.fallback.trim()).trim()}catch(e){console.warn("Failed to decode Gemini API key fallback:",e)}e&&t&&(t={message:"Gemini API key loaded from local backup. Save it again to refresh secure storage when possible.",variant:"neutral",autoClearMs:9e3})}catch(e){console.warn("Failed to load Gemini configuration:",e),t||(t={message:"Failed to load Gemini configuration. Please verify your stored Gemini API key.",variant:"error",autoClearMs:9e3})}return this.setGeminiApiKey(e,{persist:!1,updateUI:!1}),this.gemini.pendingStatus=t,this.syncGeminiControlsFromState({preserveStatus:Boolean(t)}),Boolean(e)}saveGeminiConfigToStorage({includeApiKey:e=!1,encryptedPayload:t=null}={}){try{const i={model:this.gemini.model};if(t){if(i.enc=!0,i.payload=t,this.gemini.apiKey)try{i.fallback=btoa(this.gemini.apiKey)}catch(e){}}else e&&this.gemini.apiKey&&(i.apiKey=this.gemini.apiKey);localStorage.setItem(GEMINI_STORAGE_KEY,JSON.stringify(i))}catch(e){console.warn("Failed to save Gemini configuration:",e)}}removeGeminiEncryptionKey(){try{localStorage.removeItem("GammaLedgerGeminiSecret"),this.gemini.encryptionKey=null}catch(e){console.warn("Failed to remove Gemini encryption key:",e)}}async ensureGeminiEncryptionKey(e=this.getCrypto()){if(!e?.subtle)return null;if(this.gemini.encryptionKey)return this.gemini.encryptionKey;let t=localStorage.getItem("GammaLedgerGeminiSecret");if(!t){const i=e.getRandomValues(new Uint8Array(32));t=this.arrayBufferToBase64(i.buffer),localStorage.setItem("GammaLedgerGeminiSecret",t)}const i=new Uint8Array(this.base64ToArrayBuffer(t)),r=await e.subtle.importKey("raw",i,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"]);return this.gemini.encryptionKey=r,r}async encryptAndStoreGeminiApiKey(e=this.getCrypto()){try{if(!e?.subtle)throw new Error("Web Crypto API unavailable");const t=this.gemini.apiKey||"";if(!t)return this.saveGeminiConfigToStorage(),!0;const i=await this.ensureGeminiEncryptionKey(e);if(!i)throw new Error("Failed to prepare encryption key");const r=await this.encryptString(t,e,i);return this.saveGeminiConfigToStorage({encryptedPayload:r}),!0}catch(e){return console.warn("Failed to encrypt Gemini API key:",e),!1}}initializeFinnhubControls(){const e=document.getElementById("finnhub-controls");if(!e)return;const t=document.getElementById("finnhub-api-key"),i=document.getElementById("finnhub-save"),r=document.getElementById("finnhub-status");if(this.finnhub.elements={container:e,input:t,saveButton:i,status:r},t&&(t.value=this.finnhub.apiKey),r){const e=this.finnhub.apiKey?"success":"neutral",t=this.finnhub.apiKey?"API key loaded":"Not set";this.updateFinnhubStatus(t,e,4e3)}const s=async()=>{const e=(t?.value||"").trim();this.setFinnhubApiKey(e,{persist:!1,updateUI:!0,markUnsaved:!1});const i=this.getCrypto();if(!e)return this.removeFinnhubConfigFromStorage(),this.updateFinnhubStatus("API key cleared. Live prices disabled.","neutral",5e3),void this.updateActivePositionsTable();if(!i?.subtle)return this.saveFinnhubConfigToStorage(),this.updateFinnhubStatus("Finnhub API key saved (unencrypted — Web Crypto unavailable).","success",6e3),void this.updateActivePositionsTable();await this.encryptAndStoreFinnhubApiKey(i)?this.updateFinnhubStatus("Finnhub API key saved securely.","success",5e3):(this.saveFinnhubConfigToStorage(),this.updateFinnhubStatus("Finnhub API key saved (unencrypted fallback).","neutral",6e3)),this.updateActivePositionsTable()};i?.addEventListener("click",async e=>{e.preventDefault(),await s()}),t?.addEventListener("keydown",async e=>{"Enter"===e.key&&(e.preventDefault(),await s())})}updateFinnhubStatus(e,t="neutral",i=0){const r=this.finnhub?.elements?.status;if(!r||!e)return;const s=["success","error","neutral"].includes(t)?t:"neutral";r.textContent=e,r.classList.remove("is-success","is-error"),"success"===s?r.classList.add("is-success"):"error"===s&&r.classList.add("is-error"),this.finnhub.statusTimeoutId&&clearTimeout(this.finnhub.statusTimeoutId),this.finnhub.lastStatus={message:e,variant:s},i>0&&(this.finnhub.statusTimeoutId=setTimeout(()=>{r.isConnected&&(r.textContent="neutral"===s?"Not set":"",r.classList.remove("is-success","is-error"))},i))}setFinnhubApiKey(e,{persist:t=!1,updateUI:i=!0,markUnsaved:r=!1}={}){const s=(e||"").trim();s!==this.finnhub.apiKey&&(this.finnhub.apiKey=s,this.finnhub.cache.clear(),this.finnhub.outstandingRequests.clear(),i&&this.finnhub.elements?.input&&(this.finnhub.elements.input.value=s),t&&this.saveFinnhubConfigToStorage(),r&&this.markUnsavedChanges())}getFinnhubStorageKey(){return"GammaLedgerFinnhubConfig"}async loadFinnhubConfigFromStorage(){try{const e=localStorage.getItem(this.getFinnhubStorageKey());if(!e)return;const t=JSON.parse(e);if(!t)return;if(t.enc&&t.payload){const e=this.getCrypto();if(!e?.subtle)return console.warn("Encrypted Finnhub API key stored but Web Crypto unavailable."),void this.updateFinnhubStatus("Stored Finnhub key is encrypted, but this browser cannot decrypt it.","error",7e3);try{const i=await this.ensureFinnhubEncryptionKey(e);if(!i)throw new Error("Encryption key unavailable");const r=await this.decryptString(t.payload,e,i);r&&(this.finnhub.apiKey=r)}catch(e){console.warn("Failed to decrypt stored Finnhub API key:",e),this.updateFinnhubStatus("Failed to decrypt stored Finnhub API key.","error",6e3)}return}"string"==typeof t.apiKey&&(this.finnhub.apiKey=t.apiKey)}catch(e){console.warn("Failed to load Finnhub configuration:",e)}}saveFinnhubConfigToStorage(){try{const e={apiKey:this.finnhub.apiKey};localStorage.setItem(this.getFinnhubStorageKey(),JSON.stringify(e))}catch(e){console.warn("Failed to save Finnhub configuration:",e)}}removeFinnhubConfigFromStorage(){try{localStorage.removeItem(this.getFinnhubStorageKey())}catch(e){console.warn("Failed to remove Finnhub configuration:",e)}}arrayBufferToBase64(e){const t=new Uint8Array(e);let i="";for(let e=0;e<t.byteLength;e++)i+=String.fromCharCode(t[e]);return btoa(i)}base64ToArrayBuffer(e){const t=atob(e),i=t.length,r=new Uint8Array(i);for(let e=0;e<i;e++)r[e]=t.charCodeAt(e);return r.buffer}getFinnhubSecretStorageKey(){return"GammaLedgerFinnhubSecret"}async ensureFinnhubEncryptionKey(e=this.getCrypto()){if(!e?.subtle)return null;if(this.finnhub.encryptionKey)return this.finnhub.encryptionKey;let t=localStorage.getItem(this.getFinnhubSecretStorageKey());if(!t){const i=e.getRandomValues(new Uint8Array(32));t=this.arrayBufferToBase64(i.buffer),localStorage.setItem(this.getFinnhubSecretStorageKey(),t)}const i=new Uint8Array(this.base64ToArrayBuffer(t)),r=await e.subtle.importKey("raw",i,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"]);return this.finnhub.encryptionKey=r,r}async encryptString(e,t,i){const r=t.getRandomValues(new Uint8Array(12)),s=new TextEncoder,n=await t.subtle.encrypt({name:"AES-GCM",iv:r},i,s.encode(e));return{iv:this.arrayBufferToBase64(r.buffer),ct:this.arrayBufferToBase64(n)}}getCrypto(){return"undefined"!=typeof globalThis&&globalThis.crypto?globalThis.crypto:"undefined"!=typeof window&&window.crypto?window.crypto:null}async decryptString(e,t,i){const r=new Uint8Array(this.base64ToArrayBuffer(e.iv)),s=this.base64ToArrayBuffer(e.ct),n=await t.subtle.decrypt({name:"AES-GCM",iv:r},i,s);return(new TextDecoder).decode(n)}async encryptAndStoreFinnhubApiKey(e=this.getCrypto()){try{if(!e?.subtle)throw new Error("Web Crypto API unavailable");const t=this.finnhub.apiKey||"";if(!t)return this.removeFinnhubConfigFromStorage(),!0;const i=await this.ensureFinnhubEncryptionKey(e);if(!i)throw new Error("Failed to prepare encryption key");const r=await this.encryptString(t,e,i);return localStorage.setItem(this.getFinnhubStorageKey(),JSON.stringify({enc:!0,payload:r})),!0}catch(e){return console.warn("Failed to encrypt Finnhub API key:",e),!1}}getQuoteEntryKey(e){if(!e||"object"!=typeof e)return"unknown";const t=e.id??e.tradeId??e.uid??e.uniqueId;if(null!=t&&""!==t)return`id:${t}`;return`fallback:${(e.ticker||"").toString().trim().toUpperCase()}|${e.entryDate||""}|${e.strikePrice||""}`}rebuildQuoteRefreshSchedule(){this.activeQuoteEntries instanceof Map||(this.activeQuoteEntries=new Map),this.quoteRefreshKeys=Array.from(this.activeQuoteEntries.keys()),this.quoteRefreshCursor=0}startQuoteAutoRefreshIfNeeded(){if(this.activeQuoteEntries instanceof Map||(this.activeQuoteEntries=new Map),0===this.activeQuoteEntries.size)return void this.stopQuoteAutoRefresh();const e=this.computeAutoRefreshInterval();e!==this.autoRefreshIntervalMs&&(this.autoRefreshIntervalMs=e,this.stopQuoteAutoRefresh()),this.quoteRefreshIntervalId||(this.quoteRefreshIntervalId=setInterval(()=>{this.refreshActivePositionsQuotes({force:!0})},this.autoRefreshIntervalMs))}stopQuoteAutoRefresh(){this.quoteRefreshIntervalId&&(clearInterval(this.quoteRefreshIntervalId),this.quoteRefreshIntervalId=null),0===this.activeQuoteEntries?.size&&(this.quoteRefreshKeys=[],this.quoteRefreshCursor=0)}refreshActivePositionsQuotes({force:e=!1,immediate:t=!1}={}){if(!(this.activeQuoteEntries instanceof Map)||0===this.activeQuoteEntries.size)return void this.stopQuoteAutoRefresh();if(Array.isArray(this.quoteRefreshKeys)&&0!==this.quoteRefreshKeys.length||this.rebuildQuoteRefreshSchedule(),0===this.quoteRefreshKeys.length)return void this.stopQuoteAutoRefresh();let i=0;const r=this.quoteRefreshKeys.length;for(;i<r&&this.quoteRefreshKeys.length>0;){const r=this.quoteRefreshCursor%this.quoteRefreshKeys.length,s=this.quoteRefreshKeys[r],n=this.activeQuoteEntries.get(s);if(this.quoteRefreshCursor=(r+1)%this.quoteRefreshKeys.length,i+=1,n&&n.cell?.isConnected&&n.row?.isConnected)return void this.populateQuoteCell(n.cell,n.trade,n.row,{forceRefresh:e,silentIfCached:!e,suppressLoadingText:!t});if(this.activeQuoteEntries.delete(s),this.quoteRefreshKeys.splice(r,1),0===this.quoteRefreshKeys.length)return void this.stopQuoteAutoRefresh()}0===this.activeQuoteEntries.size&&this.stopQuoteAutoRefresh()}populateQuoteCell(e,t,i,r={}){const{forceRefresh:s=!1,deferNetworkFetch:n=!1,silentIfCached:a=!1,suppressLoadingText:o=!1}=r;if(!e)return;const l=(t?.ticker||"").toString().trim().toUpperCase();if(!l)return e.dataset.priceState="idle",e.textContent="—",void e.classList.remove("quote-error");const c=s?null:this.getCachedQuote(l);if(c)this.renderQuoteValue(e,i,t,c.value);else{if(!this.finnhub.apiKey){e.dataset.priceState="error",this.setQuoteCellError(e,i,t,"Set API key");const r=this.finnhub.lastStatus?.message;return"Add your Finnhub API key to load live prices."!==r&&this.updateFinnhubStatus("Add your Finnhub API key to load live prices.","neutral",6e3),void this.updateItmHighlight(i,t,null)}e.dataset.priceState=s?"refreshing":"loading",s||o||a||(e.textContent="Loading…"),e.classList.remove("quote-error"),this.finnhub.apiKey&&!n&&this.getCurrentPrice(l,{forceRefresh:s}).then(r=>{e.isConnected&&this.renderQuoteValue(e,i,t,r)}).catch(r=>{if(!e.isConnected)return;const s=this.getQuoteErrorMessage(r);this.setQuoteCellError(e,i,t,s)})}}renderQuoteValue(e,t,i,r){if(!e)return;e.dataset.priceState="ready",e.classList.remove("quote-error");const s=Number(r?.price);if(!Number.isFinite(s))return e.textContent="—",void this.applyPositionHighlight(t,i,null);const n=this.getQuoteChangePercent(r),a=this.getQuoteChangeValue(r);e.innerHTML="";const o=document.createElement("span");if(o.className="quote-price",o.textContent=this.formatCurrency(s),e.appendChild(o),Number.isFinite(n)){const t=document.createElement("span");t.className="quote-change";const i=`${n>0?"+":""}${n.toFixed(2)}%`;if(t.textContent=i,n>0?t.classList.add("is-up"):n<0?t.classList.add("is-down"):t.classList.add("is-flat"),Number.isFinite(a)){const e=`${a>0?"+":""}${a.toFixed(2)}`;t.title=`${e} (${i})`}e.appendChild(t)}this.applyPositionHighlight(t,i,s)}getQuoteChangePercent(e){const t=Number(e?.changePercent);if(Number.isFinite(t))return t;const i=Number(e?.change),r=Number(e?.previousClose);if(Number.isFinite(i)&&Number.isFinite(r)&&0!==r)return i/r*100;const s=Number(e?.price);return Number.isFinite(s)&&Number.isFinite(r)&&0!==r?(s-r)/r*100:null}getQuoteChangeValue(e){const t=Number(e?.change);if(Number.isFinite(t))return t;const i=Number(e?.price),r=Number(e?.previousClose);return Number.isFinite(i)&&Number.isFinite(r)?i-r:null}setQuoteCellError(e,t,i,r){if(!e)return;e.dataset.priceState="error",e.classList.add("quote-error");const s=(r||"").trim();if("Set API key"===s){e.textContent="";const t=document.createElement("button");t.type="button",t.className="link-button link-button--inline",t.textContent="Set API key",t.addEventListener("click",e=>{e.preventDefault(),this.showView("settings")}),e.appendChild(t)}else e.textContent=s||"Unavailable";this.applyPositionHighlight(t,i,null)}getQuoteErrorMessage(e){const t=(e?.message||"").toLowerCase();return t?t.includes("api key")?"Set API key":t.includes("rate limit")?"Rate limited":t.includes("symbol")?"Bad ticker":t.includes("network")?"Network error":"Unavailable":"Unavailable"}getCachedQuote(e){if(!e)return null;const t=this.finnhub.cache.get(e);return t?Date.now()-t.timestamp>this.finnhub.cacheTTL?(this.finnhub.cache.delete(e),null):t:null}setCachedQuote(e,t){e&&this.finnhub.cache.set(e,{value:t,timestamp:Date.now()})}async getCurrentPrice(e,{forceRefresh:t=!1}={}){const i=(e||"").toString().trim().toUpperCase();if(!i)throw new Error("Invalid symbol");if(t)this.finnhub.cache.delete(i);else{const e=this.getCachedQuote(i);if(e)return e.value}if(!this.finnhub.apiKey)throw new Error("Finnhub API key missing");const r=this.finnhub.outstandingRequests.get(i);if(r)return r;const s=this.enqueueFinnhubRequest(i).then(e=>(this.setCachedQuote(i,e),e)).catch(e=>{throw this.updateFinnhubStatus(e.message||"Failed to load quote.","error",7e3),e}).finally(()=>{this.finnhub.outstandingRequests.delete(i)});return this.finnhub.outstandingRequests.set(i,s),s}enqueueFinnhubRequest(e){const t=this.finnhub.rateLimitQueue.catch(()=>{}).then(()=>this.performFinnhubFetch(e));return this.finnhub.rateLimitQueue=t.then(()=>{}).catch(()=>{}),t}async performFinnhubFetch(e){await this.enforceFinnhubRateLimit();const t=new URL("https://finnhub.io/api/v1/quote");let i,r;t.searchParams.set("symbol",e),t.searchParams.set("token",this.finnhub.apiKey);try{i=await fetch(t.toString(),{cache:"no-store"})}catch(e){throw new Error("Network error fetching price")}if(!i.ok)throw new Error(429===i.status?"Finnhub rate limit exceeded. Please wait.":"Finnhub API error");try{r=await i.json()}catch(e){throw new Error("Invalid response from Finnhub")}if(r&&"string"==typeof r.error)throw new Error(r.error);const s=Number(r?.c);if(!Number.isFinite(s))throw new Error("Price unavailable for symbol");const n=Number(r?.d),a=Number(r?.dp),o=Number(r?.pc),l=Number(r?.o),c=Number(r?.h),d=Number(r?.l);return{price:s,change:Number.isFinite(n)?n:null,changePercent:Number.isFinite(a)?a:null,previousClose:Number.isFinite(o)?o:null,open:Number.isFinite(l)?l:null,high:Number.isFinite(c)?c:null,low:Number.isFinite(d)?d:null,fetchedAt:(new Date).toISOString(),currency:"USD"}}async enforceFinnhubRateLimit(){const e=this.finnhub.timestamps,t=Date.now();for(;e.length>0&&t-e[0]>=6e4;)e.shift();if(e.length>=this.finnhub.maxRequestsPerMinute){const i=6e4-(t-e[0])+50;await new Promise(e=>setTimeout(e,i))}e.push(Date.now())}applyPositionHighlight(e,t,i=null){e&&(this.updateExpirationHighlight(e,t),this.updateItmHighlight(e,t,i))}updateExpirationHighlight(e,t){if(!e)return;e.classList.remove("position-expiring-critical","position-expiring-warning");const i=this.positionHighlightConfig?.expirationWarningDays??20,r=this.positionHighlightConfig?.expirationCriticalDays??7,s=t?.dte,n=this.parseInteger(s,null,{allowNegative:!0});!Number.isFinite(n)||n<0||(n<r?e.classList.add("position-expiring-critical"):n<i&&e.classList.add("position-expiring-warning"))}updateItmHighlight(e,t,i){if(!e)return;const r=this.isInTheMoney(t,i);e.classList.toggle("position-itm",Boolean(r))}isInTheMoney(e,t){if(!Number.isFinite(t))return!1;const i=Number(e?.strikePrice);if(!Number.isFinite(i))return!1;const r=this.inferOptionFlavor(e);return"call"===r?t>=i:"put"===r&&t<=i}inferOptionFlavor(e={}){const t=(e.optionType||e.optionFlavor||"").toString().trim().toLowerCase();if("call"===t||"put"===t)return t;const i=(e.strategy||"").toLowerCase(),r=i.includes("call"),s=i.includes("put");if(r&&!s)return"call";if(s&&!r)return"put";const n=(e.notes||"").toLowerCase(),a=n.includes("call"),o=n.includes("put");return a&&!o?"call":o&&!a?"put":null}updateMonthlyPLChart(){const e=document.getElementById("monthlyPLChart");if(!e)return;const t=e.getContext("2d");this.charts.monthlyPL&&this.charts.monthlyPL.destroy();const i={};this.trades.filter(e=>this.isClosedStatus(e.status)&&e.exitDate).forEach(e=>{const t=e.exitDate.substring(0,7);i[t]||(i[t]=0),i[t]+=e.pl});const r=Object.keys(i).sort(),s=r.map(e=>new Date(e+"-01").toLocaleDateString("en-US",{month:"short",year:"numeric"}));this.charts.monthlyPL=new Chart(t,{type:"bar",data:{labels:s,datasets:[{label:"Monthly P&L",data:r.map(e=>i[e]),backgroundColor:r.map(e=>i[e]>=0?"#1FB8CD":"#B4413C"),borderColor:r.map(e=>i[e]>=0?"#1FB8CD":"#B4413C"),borderWidth:1}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{beginAtZero:!0,ticks:{callback:function(e){return"$"+e.toLocaleString()}}},x:{ticks:{maxRotation:45,minRotation:45}}},plugins:{legend:{display:!1},tooltip:{callbacks:{label:function(e){return"P&L: $"+e.raw.toLocaleString()}}}}}})}updateCumulativePLChart(){const e=document.getElementById("cumulativePLChart");if(!e)return void console.error("Cumulative P&L chart canvas not found");const t=e.getContext("2d");this.charts.cumulativePL&&this.charts.cumulativePL.destroy();const i=this.trades.filter(e=>this.isClosedStatus(e.status)&&e.exitDate),r=()=>{this.charts.cumulativePL=new Chart(t,{type:"line",data:{labels:["No Data"],datasets:[{label:"Cumulative P&L",data:[0],borderColor:"#1FB8CD",backgroundColor:"rgba(31, 184, 205, 0.1)",fill:!1,tension:.4}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{y:{ticks:{callback:function(e){return"$"+e.toLocaleString()}}}},plugins:{legend:{display:!1}}}})};if(0===i.length)return void r();const s=new Map;let n=null,a=null;if(i.forEach(e=>{const t=this.getWeekEndingFriday(e.exitDate);if(!t)return;const i=this.getWeekKey(t);s.set(i,(s.get(i)||0)+e.pl),(!n||t<n)&&(n=new Date(t)),(!a||t>a)&&(a=new Date(t))}),!n||!a)return void r();n.setHours(0,0,0,0),a.setHours(0,0,0,0);const o=[],l=[];let c=0;const d=new Date(n);for(;d.getTime()<=a.getTime();){const e=this.getWeekKey(d);c+=s.get(e)||0,o.push(this.formatWeekLabel(d)),l.push(c),d.setDate(d.getDate()+7)}this.charts.cumulativePL=new Chart(t,{type:"line",data:{labels:o,datasets:[{label:"Cumulative P&L",data:l,borderColor:"#1FB8CD",backgroundColor:"rgba(31, 184, 205, 0.1)",fill:!0,tension:.4,pointRadius:3,pointHoverRadius:6}]},options:{responsive:!0,maintainAspectRatio:!1,scales:{x:{ticks:{callback:function(e){if("string"==typeof e)return e;if("number"==typeof e&&this&&"function"==typeof this.getLabelForValue){const t=this.getLabelForValue(e);if(t)return t}return""},maxRotation:45,minRotation:45}},y:{ticks:{callback:function(e){return"$"+e.toLocaleString()}}}},plugins:{legend:{display:!1},tooltip:{callbacks:{title:function(e){return e[0]?.label||""},label:function(e){return"Cumulative P&L: $"+e.raw.toLocaleString()}}}}}})}getWeekEndingFriday(e){const t=new Date(e);if(isNaN(t.getTime()))return null;const i=new Date(t);i.setHours(0,0,0,0);const r=i.getDay();return 5===r?i:6===r?(i.setDate(i.getDate()-1),i):0===r?(i.setDate(i.getDate()-2),i):(i.setDate(i.getDate()+(5-r)),i)}getWeekKey(e){const t=new Date(e);if(isNaN(t.getTime()))return"";return`${t.getFullYear()}-${String(t.getMonth()+1).padStart(2,"0")}-${String(t.getDate()).padStart(2,"0")}`}formatWeekLabel(e){const t=new Date(e);return isNaN(t.getTime())?"":t.toLocaleDateString("en-US",{month:"short",day:"2-digit",year:"numeric"})}updateStrategyPerformanceChart(){const e=document.getElementById("strategyChart");if(!e)return;const t=e.getContext("2d");this.charts.strategy&&this.charts.strategy.destroy();const i={};this.trades.filter(e=>this.isClosedStatus(e.status)).forEach(e=>{i[e.strategy]||(i[e.strategy]=0),i[e.strategy]+=e.pl});const r=Object.entries(i).sort(([,e],[,t])=>t-e).slice(0,8);this.charts.strategy=new Chart(t,{type:"bar",data:{labels:r.map(([e])=>e),datasets:[{label:"Total P&L",data:r.map(([,e])=>e),backgroundColor:r.map(([,e])=>e>=0?"#1FB8CD":"#B4413C"),borderColor:r.map(([,e])=>e>=0?"#1FB8CD":"#B4413C"),borderWidth:1}]},options:{indexAxis:"y",responsive:!0,maintainAspectRatio:!1,scales:{x:{beginAtZero:!0,ticks:{callback:function(e){return"$"+e.toLocaleString()}}}},plugins:{legend:{display:!1},tooltip:{callbacks:{label:function(e){return"P&L: $"+e.raw.toLocaleString()}}}}}})}updateWinRateByStrategyChart(){const e=document.getElementById("winRateChart");if(!e)return;const t=e.getContext("2d");this.charts.winRate&&this.charts.winRate.destroy();const i={};this.trades.forEach(e=>{i[e.strategy]||(i[e.strategy]={total:0,wins:0}),this.isClosedStatus(e.status)&&(i[e.strategy].total++,e.pl>0&&i[e.strategy].wins++)});const r=Object.entries(i).filter(([,e])=>e.total>=1).map(([e,t])=>({strategy:e,winRate:t.wins/t.total*100,total:t.total})).sort((e,t)=>t.winRate-e.winRate);this.charts.winRate=new Chart(t,{type:"doughnut",data:{labels:r.map(e=>`${e.strategy} (${e.total})`),datasets:[{data:r.map(e=>e.winRate),backgroundColor:["#1FB8CD","#FFC185","#B4413C","#ECEBD5","#5D878F","#DB4545","#D2BA4C","#964325","#944454","#13343B"].slice(0,r.length),borderWidth:2,borderColor:"#fff"}]},options:{responsive:!0,maintainAspectRatio:!1,plugins:{legend:{position:"right",labels:{boxWidth:15,padding:15}},tooltip:{callbacks:{label:function(e){return e.label+": "+e.raw.toFixed(2)+"%"}}}}}})}updateTradesList(){this.populateFilters(),this.filterTrades()}populateFilters(){const e=document.getElementById("filter-strategy"),t=e?.value||"",i=[...new Set(this.trades.map(e=>e.strategy))].filter(Boolean).sort((e,t)=>e.localeCompare(t));e&&(e.innerHTML='<option value="">All Strategies</option>',i.forEach(t=>{const i=document.createElement("option");i.value=t,i.textContent=t,e.appendChild(i)}),t&&i.includes(t)&&(e.value=t))}filterTrades(){const e=document.getElementById("filter-strategy")?.value||"",t=document.getElementById("filter-status")?.value||"",i=(document.getElementById("search-ticker")?.value||"").toString().trim().toLowerCase(),r=this.trades.filter(r=>{const s=!e||r.strategy===e,n=this.normalizeStatus(r.status);let a=!0;if(t){const e=t.toLowerCase();a="assigned"===e?"assigned"===n||"closed"===n&&this.isAssignmentReason(r.exitReason):n===e}const o=(r.ticker??"").toString().toLowerCase(),l=this.normalizeCycleId(r.cycleId).toLowerCase(),c=(this.normalizeCycleType(r.cycleType,r.strategy)||"").toLowerCase(),d=(r.notes??"").toString().toLowerCase(),u=!i||o.includes(i)||l.includes(i)||c&&c.includes(i)||d.includes(i);return s&&a&&u});this.currentFilteredTrades=r.slice(),this.renderTradesTable(r)}openTradesFilteredByTicker(e){const t=(e??"").toString().trim().toUpperCase();if(!t)return;this.showView("trades-list");const i=document.getElementById("search-ticker");i&&(i.value=t,i.focus()),["filter-strategy","filter-status"].forEach(e=>{const t=document.getElementById(e);t&&""!==t.value&&(t.value="")}),this.filterTrades()}openTradesFilteredByCycle(e,t=""){const i=this.normalizeCycleId(e);if(!i)return;this.showView("trades-list");const r=document.getElementById("search-ticker");r&&(r.value=i,r.focus()),this.filterTrades()}renderTradesTable(e=this.trades){const t=document.querySelector("#trades-table tbody");if(!t)return;const i=Array.isArray(e)?e.slice():[];this.currentFilteredTrades=i,"function"==typeof this.setupTradesMergeControls&&this.setupTradesMergeControls(),t.innerHTML="",this.tradeDetailCharts?.size&&(this.tradeDetailCharts.forEach(e=>{try{e.destroy()}catch(e){console.warn("Failed to destroy payoff chart:",e)}}),this.tradeDetailCharts.clear()),this.pruneTradeMergeSelection();const r=e=>{const t=Number(e);return Number.isFinite(t)?t:null},s=["","Ticker","Strategy","Strike","Qty","Net Credit/Debit","Entry Date","Expiration Date","DTE","Exit Date","Days Held","Max Risk","P&L","ROI","Annual ROI","Status","Actions"];i.forEach((e,i)=>{const n=t.insertRow();n.classList.add("trade-summary-row");const a=n.insertCell();a.className="trade-select-cell",a.classList.toggle("is-hidden",!this.tradesMergePanelOpen);const o=document.createElement("input");o.type="checkbox",o.className="trade-merge-checkbox",o.dataset.tradeId=e.id||"",o.checked=!!e.id&&this.tradeMergeSelection.has(e.id),o.disabled=!this.tradesMergePanelOpen,o.tabIndex=this.tradesMergePanelOpen?0:-1,o.setAttribute("aria-label",`Select trade ${e.ticker||""}`.trim()),o.addEventListener("change",t=>{if(t.stopPropagation(),!this.tradesMergePanelOpen)return void(t.target.checked=!!e.id&&this.tradeMergeSelection.has(e.id));const i=e.id;i?(t.target.checked?this.tradeMergeSelection.add(i):this.tradeMergeSelection.delete(i),this.syncSelectAllCheckbox(),this.refreshTradesMergePanelContents()):t.target.checked=!1}),a.appendChild(o);n.insertCell().appendChild(this.createTickerElement(e.ticker));n.insertCell().textContent=e.strategy||"—";const l=n.insertCell(),c=e.displayStrike||null,d=r(e.strikePrice);l.textContent=c||(null!==d?`$${d.toFixed(2)}`:"—");const u=n.insertCell(),m=r(e.quantity);u.textContent=null!==m?Math.abs(m):"—";const h=n.insertCell(),p=e.entryPriceLabel||null,g=r(e.entryPrice);h.textContent=p&&"—"!==p?p:null!==g?`$${g.toFixed(2)}`:"—";n.insertCell().textContent=this.formatDate(e.entryDate);n.insertCell().textContent=this.formatDate(e.expirationDate);const y=n.insertCell(),f=r(e.dte);y.textContent=null!==f?f:"—";n.insertCell().textContent=e.exitDate?this.formatDate(e.exitDate):"—";const b=n.insertCell(),C=r(e.daysHeld);b.textContent=null!==C?C:"—";const T=n.insertCell(),S=r(e.maxRisk);e.maxRiskLabel?(T.textContent=e.maxRiskLabel,T.className=e.riskIsUnlimited?"pl-negative":"pl-neutral",e.riskIsUnlimited||null===S||(T.className="pl-negative")):null!==S?(T.textContent=this.formatCurrency(S),T.className="pl-negative"):(T.textContent="—",T.className="pl-neutral");const v=n.insertCell(),L=r(e.pl);null!==L?(v.textContent=this.formatCurrency(L),v.className=L>0?"pl-positive":L<0?"pl-negative":"pl-neutral"):(v.textContent="—",v.className="pl-neutral");const N=n.insertCell(),x=r(e.roi);null!==x?(N.textContent=`${x.toFixed(2)}%`,N.className=x>0?"pl-positive":x<0?"pl-negative":"pl-neutral"):(N.textContent="—",N.className="pl-neutral");const k=n.insertCell(),I=r(e.annualizedROI);this.isClosedStatus(e.status)&&null!==I?(k.textContent=`${I.toFixed(2)}%`,k.className=I>0?"pl-positive":I<0?"pl-negative":"pl-neutral"):(k.textContent="—",k.className="pl-neutral");const w=n.insertCell(),E=document.createElement("span"),D=this.getDisplayStatus(e),F=D.toLowerCase().replace(/\s+/g,"-");E.className=`status-badge ${F}`.trim(),E.textContent=D,w.appendChild(E);const A=n.insertCell();A.className="actions-cell";const P=`trade-pl-${e.id??e.tradeId??e.uniqueId??`${e.ticker||"trade"}-${i}`}`.toString().replace(/[^a-zA-Z0-9_-]/g,"-"),M=`${P}-footnote`,R=document.createElement("button");R.type="button",R.className="action-btn action-btn--edit",R.textContent="Edit",R.addEventListener("click",t=>{t.stopPropagation(),this.editTrade(e.id)});const O=document.createElement("button");O.type="button",O.className="action-btn action-btn--delete",O.textContent="Delete",O.addEventListener("click",t=>{t.stopPropagation(),this.deleteTrade(e.id)}),A.append(R,O),n.setAttribute("tabindex","0"),n.setAttribute("aria-expanded","false"),n.setAttribute("aria-controls",P),n.dataset.chartId=P;const B=t.insertRow();B.className="trade-detail-row",B.setAttribute("aria-hidden","true"),B.style.display="none",B.dataset.chartId=P;const $=B.insertCell(0);$.colSpan=s.length,$.innerHTML=`\n                <div class="trade-diagram" data-chart-container="${P}">\n                    <div class="trade-diagram__canvas">\n                        <canvas id="${P}" aria-hidden="true"></canvas>\n                    </div>\n                    <p class="trade-diagram__footnote" id="${M}">Tap or click the trade row to generate the payoff diagram.</p>\n                </div>\n            `;const U=()=>{this.toggleTradePayoffDetail(n,B,e,P,M)};n.addEventListener("click",e=>{e.target.closest("button")||e.target.closest("a")||e.target.closest("input")||e.target.closest(".trade-diagram")||U()}),n.addEventListener("keydown",e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),U())}),this.applyResponsiveLabels(n,s)}),this.syncTradeSelectionCheckboxes(),this.updateMergeColumnVisibility(),this.refreshTradesMergePanelContents()}toggleTradePayoffDetail(e,t,i,r,s){if(!t)return;const n=!t.classList.contains("is-open");t.classList.toggle("is-open",n),t.style.display=n?"table-row":"none",t.setAttribute("aria-hidden",String(!n)),e?.setAttribute("aria-expanded",String(n));const a=t.querySelector("canvas");if(a&&a.setAttribute("aria-hidden",String(!n)),n){const e=this.renderTradePayoffChart(i,r,s);e?.catch&&e.catch(e=>{console.error("Failed to render payoff chart:",e)})}else this.destroyTradePayoffChart(r,s)}async renderTradePayoffChart(e,t,i){const r=document.getElementById(t),s=document.getElementById(i),n=r?.parentElement;if(!r)return void(s&&(s.textContent="Canvas element missing; cannot generate payoff diagram."));if(this.tradeDetailCharts?.has(t))return;s&&(s.textContent="Loading live price and payoff data…");const a=this.calculatePayoffSeries(e);if(!a||!Array.isArray(a.points)||0===a.points.length)return n&&n.classList.add("trade-diagram__canvas--empty"),r.classList.add("hidden"),void(s&&(s.textContent=a?.message||"Payoff diagram not available for this strategy yet."));r.classList.remove("hidden"),n?.classList.remove("trade-diagram__canvas--empty");const o=r.getContext("2d");if(!o)return void(s&&(s.textContent="Unable to access canvas rendering context."));const l=new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",maximumFractionDigits:2}),c="rgba(34, 197, 94, 1)",d=a.points.map(e=>e.y);let u=Math.min(...d,0),m=Math.max(...d,0);Number.isFinite(u)&&Number.isFinite(m)||(u=0,m=0),u===m&&(u-=1,m+=1);const h=a.points.map(e=>({x:e.x,y:e.y>=0?e.y:null})),p=a.points.map(e=>({x:e.x,y:e.y<=0?e.y:null})),g=o.createLinearGradient(0,0,0,r.height);g.addColorStop(0,"rgba(34, 197, 94, 0.18)"),g.addColorStop(1,"rgba(34, 197, 94, 0.02)");const y=o.createLinearGradient(0,0,0,r.height);y.addColorStop(0,"rgba(248, 113, 113, 0.18)"),y.addColorStop(1,"rgba(248, 113, 113, 0.02)");const f=await this.getUnderlyingPriceForPayoff(e),b=document.querySelector(`.trade-detail-row[data-chart-id="${t}"]`);if(b&&!b.classList.contains("is-open"))return void(s&&(s.textContent="Tap or click the trade row to generate the payoff diagram."));const C={id:`payoffPriceLineLabel-${t}`,afterDatasetsDraw:e=>{if(!Number.isFinite(f))return;const t=e.scales?.x,i=e.chartArea;if(!t||!i)return;const r=t.getPixelForValue(f);if(!Number.isFinite(r)||r<i.left||r>i.right)return;e.scales;const s=e.ctx;s.save(),s.font='12px "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", sans-serif',s.fillStyle="rgba(30, 41, 59, 0.9)",s.textBaseline="middle",s.textAlign="center";let n=i.bottom-10-50;(!Number.isFinite(n)||n<i.top+12)&&(n=i.top+12);const a=r<(i.left+i.right)/2?Math.min(i.right-18,r+18):Math.max(i.left+18,r-18),o=`Current ${l.format(f)}`;s.translate(a,n),s.rotate(-Math.PI/2),s.fillText(o,0,0),s.restore()}},T=[{id:"currentPriceLine",label:"Current Price",data:[],borderColor:"rgba(100, 116, 139, 0.95)",borderDash:[6,4],borderWidth:2,hoverBorderColor:"rgba(100, 116, 139, 0.95)",hoverBorderWidth:2,pointRadius:0,pointHitRadius:0,fill:!1,order:0,hidden:!0},{id:"breakevenLine",label:"Breakeven",data:[],borderColor:"rgba(59, 130, 246, 0.8)",borderDash:[2,4],borderWidth:1,pointRadius:0,pointHitRadius:0,fill:!1,order:0,hidden:!0},{id:"positiveFill",label:"Profit Region",data:h,borderColor:"rgba(0,0,0,0)",backgroundColor:g,hoverBackgroundColor:g,hoverBorderColor:"rgba(0, 0, 0, 0)",hoverBorderWidth:0,fill:"origin",pointRadius:0,pointHitRadius:0,tension:0,order:1,spanGaps:!0,showLine:!0},{id:"negativeFill",label:"Loss Region",data:p,borderColor:"rgba(0,0,0,0)",backgroundColor:y,hoverBackgroundColor:y,hoverBorderColor:"rgba(0, 0, 0, 0)",hoverBorderWidth:0,fill:"origin",pointRadius:0,pointHitRadius:0,tension:0,order:1,spanGaps:!0,showLine:!0},{id:"payoffLine",label:"P&L at Expiration",data:a.points,borderColor:c,hoverBorderColor:c,hoverBorderWidth:2,tension:0,pointRadius:0,pointHoverRadius:0,borderWidth:2,fill:!1,order:2,segment:{borderColor:e=>{const t=e.p0.parsed?.y,i=e.p1.parsed?.y;return t>=0&&i>=0?c:t<=0&&i<=0?"rgba(248, 113, 113, 1)":"rgba(148, 163, 184, 1)"}}},{id:"zeroLine",label:"Break-even Baseline",data:a.zeroLinePoints??a.points.map(e=>({x:e.x,y:0})),borderColor:"rgba(71, 85, 105, 0.9)",borderDash:[4,4],borderWidth:2,hoverBorderColor:"rgba(71, 85, 105, 0.95)",hoverBorderWidth:2,pointRadius:0,pointHitRadius:0,fill:!1,order:3}];if(Number.isFinite(f)){const e=T.findIndex(e=>"currentPriceLine"===e.id);-1!==e&&(T[e].data=[{x:f,y:u},{x:f,y:m}],T[e].hidden=!1)}if(Number.isFinite(a.breakeven)){const e=T.findIndex(e=>"breakevenLine"===e.id);-1!==e&&(T[e].data=[{x:a.breakeven,y:u},{x:a.breakeven,y:m}])}const S=new Chart(o,{type:"line",data:{datasets:T},plugins:[C],options:{parsing:!1,responsive:!0,maintainAspectRatio:!1,interaction:{mode:"index",intersect:!1},hover:{mode:"index",intersect:!1},plugins:{legend:{display:!1},tooltip:{callbacks:{label:e=>{if(!e.dataset||"payoffLine"!==e.dataset.id)return null;const t=Number(e.parsed?.x),i=Number(e.parsed?.y);if(!Number.isFinite(t)||!Number.isFinite(i))return null;const r=l.format(i),s=l.format(t);return`${e.dataset.label||"P&L"}: ${r} @ ${s}`}}}},scales:{x:{type:"linear",title:{display:!0,text:"Underlying Price ($)"},ticks:{callback:e=>l.format(Number(e))}},y:{title:{display:!0,text:"P&L ($)"},ticks:{callback:e=>l.format(Number(e))},suggestedMin:u,suggestedMax:m}}}});this.tradeDetailCharts.set(t,S),s&&(s.textContent=this.formatPayoffFooter(a,l))}destroyTradePayoffChart(e,t){const i=this.tradeDetailCharts?.get(e);if(i){try{i.destroy()}catch(e){console.warn("Failed to destroy payoff chart:",e)}this.tradeDetailCharts.delete(e)}const r=document.getElementById(e),s=r?.parentElement;if(r){const e=r.getContext("2d");e&&e.clearRect(0,0,r.width,r.height),r.classList.remove("hidden")}if(s?.classList.remove("trade-diagram__canvas--empty"),t){const e=document.getElementById(t);e&&(e.textContent="Tap or click the trade row to generate the payoff diagram.")}}async getUnderlyingPriceForPayoff(e={}){const t=(e?.ticker||"").toString().trim().toUpperCase();if(t){const e=this.getCachedQuote(t);if(e?.value&&Number.isFinite(Number(e.value.price)))return Number(e.value.price);if(this.finnhub.apiKey)try{const e=await this.getCurrentPrice(t),i=Number(e?.price);if(Number.isFinite(i)&&i>0)return i}catch(e){console.warn("Live price lookup failed for payoff chart:",e)}}return this.getFallbackUnderlyingPrice(e)}getFallbackUnderlyingPrice(e={}){const t=[e.currentUnderlyingPrice,e.currentPrice,e.marketPrice,e.lastUnderlyingPrice,e.lastPrice,e.markPrice,e.referencePrice,e.stockPriceAtEntry];for(const e of t){const t=Number(e);if(Number.isFinite(t)&&t>0)return t}return null}calculatePayoffSeries(e){const t=this.determinePayoffModel(e);if(!t||"unsupported"===t.type)return{message:t?.reason||"Payoff diagram not available for this strategy yet."};switch(t.type){case"single":return this.calculateSingleLegSeries(e,t);case"vertical":return this.calculateVerticalSpreadSeries(e,t);case"covered-call":return this.calculateCoveredCallSeries(e,t);case"pmcc":return this.calculatePmccSeries(e,t);default:return{message:"Payoff diagram not available for this strategy yet."}}}determinePayoffModel(e){const t=(e.strategy||"").toString().trim(),i=t.toLowerCase(),r=Number(e.definedRiskWidth);if(!i)return{type:"unsupported",reason:"Add a strategy name to unlock payoff diagrams."};const s=this.normalizeCycleType(e.cycleType,t);if(i.includes("poor man's covered call")||i.includes("poor man")||"pmcc"===s||this.isPmccBaseLeg(e)||this.isPmccShortCall(e)){const t=this.extractPmccLegs(e);return t.baseLeg?{type:"pmcc",strategy:i,...t}:{type:"unsupported",reason:"Add the PMCC base leg to this cycle to unlock the payoff diagram."}}if(i.includes("covered call"))return{type:"covered-call",strategy:i};const n=/(iron|straddle|strangle|butterfly|ratio|lizard|combo|synthetic|double|calendar|diagonal)/.test(i),a=i.includes("put")?"put":i.includes("call")?"call":null,o=/calendar|diagonal/.test(i);if(i.includes("spread")&&!o&&!(r>0))return{type:"unsupported",reason:"Add the defined risk width to visualize this spread."};if(r>0&&a&&i.includes("spread")&&!o){return{type:"vertical",optionType:a,orientation:i.includes("short")||i.includes("credit")||"short"===this.inferTradeDirection(e)?"short":"long",width:Number(r),strategy:i}}if(n)return{type:"unsupported",reason:"Visualization for multi-leg strategies such as condors, straddles, or ratios is coming soon."};if(!a)return{type:"unsupported",reason:"Unable to infer option type from the strategy name."};return{type:"single",optionType:a,direction:"short"===this.inferTradeDirection(e)?"short":"long",strategy:i}}calculateSingleLegSeries(e,t){const i=Number(e.strikePrice),r=Number(e.entryPrice),s=Number(e.fees)||0,n=Math.abs(Number(e.quantity)||1),a=Number(e.stockPriceAtEntry);if(!Number.isFinite(i)||!Number.isFinite(r))return{message:"Provide both a strike price and entry price to view this payoff."};const o=this.buildPriceRange({strikeValues:[i],spot:a}),l=100*n,c=[];for(let e=0;e<=40;e++){const n=o.minPrice+(o.maxPrice-o.minPrice)*e/40,a=this.optionIntrinsic(t.optionType,n,i),d=("long"===t.direction?a-r:r-a)*l-s;c.push({x:parseFloat(n.toFixed(2)),y:parseFloat(d.toFixed(2))})}const d=c.map(e=>({x:e.x,y:0})),u="call"===t.optionType?i+r:i-r,m=r*l;let h,p;"long"===t.direction?(h="call"===t.optionType?1/0:Math.max((i-r)*l-s,0),p=m+s):(h=Math.max(m-s,0),p="call"===t.optionType?1/0:Math.max((i-r)*l+s,0));return{points:c,zeroLinePoints:d,summary:this.buildPayoffSummary({profileLabel:`${"short"===t.direction?"Short":"Long"} ${t.optionType.toUpperCase()}`,breakeven:u,maxProfit:h,maxLoss:p,contracts:n,isCredit:"short"===t.direction}),breakeven:u,maxProfit:h,maxLoss:p}}calculateVerticalSpreadSeries(e,t){const i=Number(e.strikePrice),r=Number(e.entryPrice),s=Number(e.fees)||0,n=Math.abs(Number(e.quantity)||1),a=Number(e.stockPriceAtEntry);if(!Number.isFinite(i)||!Number.isFinite(r))return{message:"Provide strike and entry price to view this spread payoff."};if(!(t.width>0))return{message:"Add the defined risk width to visualize this spread."};let o,l;if("call"===t.optionType?"short"===t.orientation?(o=i,l=i+t.width):(l=i,o=i+t.width):"short"===t.orientation?(o=i,l=i-t.width):(l=i,o=i-t.width),!Number.isFinite(o)||!Number.isFinite(l))return{message:"Unable to determine both strikes for this spread."};const c=this.buildPriceRange({strikeValues:[o,l],spot:a}),d=100*n,u=[];for(let e=0;e<=40;e++){const i=c.minPrice+(c.maxPrice-c.minPrice)*e/40,n=this.optionIntrinsic(t.optionType,i,o),a=this.optionIntrinsic(t.optionType,i,l),m=("short"===t.orientation?r-(n-a):a-n-r)*d-s;u.push({x:parseFloat(i.toFixed(2)),y:parseFloat(m.toFixed(2))})}const m=u.map(e=>({x:e.x,y:0})),h=this.calculateSpreadBreakeven({model:t,shortStrike:o,longStrike:l,entryPrice:r}),p=Math.abs(o-l)*d,g=r*d;let y,f;"short"===t.orientation?(y=Math.max(g-s,0),f=Math.max(p-g,0)+s):(y=Math.max(Math.max(p-g,0)-s,0),f=g+s);return{points:u,zeroLinePoints:m,summary:this.buildPayoffSummary({profileLabel:`${"short"===t.orientation?"Short":"Long"} ${"call"===t.optionType?"Call":"Put"} Spread`,breakeven:h,maxProfit:y,maxLoss:f,contracts:n,isCredit:"short"===t.orientation}),breakeven:h,maxProfit:y,maxLoss:f}}calculateCoveredCallSeries(e){const t=Number(e.strikePrice),i=Number(e.entryPrice),r=Number(e.stockPriceAtEntry),s=Number(e.fees)||0,n=Math.abs(Number(e.quantity)||1);if(!Number.isFinite(t)||!Number.isFinite(i)||!Number.isFinite(r))return{message:"Covered call payoff requires strike, option premium, and stock cost basis."};const a=this.buildPriceRange({strikeValues:[t,r],spot:r}),o=100*n,l=[];for(let e=0;e<=40;e++){const n=a.minPrice+(a.maxPrice-a.minPrice)*e/40,c=(n-r+(i-this.optionIntrinsic("call",n,t)))*o-s;l.push({x:parseFloat(n.toFixed(2)),y:parseFloat(c.toFixed(2))})}const c=l.map(e=>({x:e.x,y:0})),d=r-i,u=Math.max((t-r+i)*o-s,0),m=Math.max((r-i)*o+s,0);return{points:l,zeroLinePoints:c,summary:this.buildPayoffSummary({profileLabel:"Covered Call (Stock + Short Call)",breakeven:d,maxProfit:u,maxLoss:m,contracts:n,isCredit:!0}),breakeven:d,maxProfit:u,maxLoss:m}}calculatePmccSeries(e,t){const i=t.baseLeg;if(!i)return{message:"Add the PMCC base leg to visualize this payoff."};const r=Number(i.strikePrice),s=Number(i.entryPrice),n=Number(i.fees)||0,a=Math.abs(Number(i.quantity)||1);if(!Number.isFinite(r)||!Number.isFinite(s))return{message:"Provide strike and entry price for the PMCC base leg to view this payoff."};const o=t.shortLeg,l=Number(o?.strikePrice),c=Number(o?.entryPrice),d=Number(o?.fees)||0,u=Math.abs(Number(o?.quantity)||0),m=o?this.inferTradeDirection(o):null,h=[r];Number.isFinite(l)&&h.push(l);const p=this.getFallbackUnderlyingPrice(i)??(o?this.getFallbackUnderlyingPrice(o):null)??Number(i.stockPriceAtEntry),g=this.buildPriceRange({strikeValues:h,spot:Number.isFinite(p)?p:Number.NaN}),y=100*a,f=u>0?100*u:y,b=[];for(let e=0;e<=80;e++){const t=g.minPrice+(g.maxPrice-g.minPrice)*e/80,i=(Math.max(t-r,0)-s)*y-n;let a=0;if(o&&Number.isFinite(l)&&Number.isFinite(c)){const e=Math.max(t-l,0);a=("short"===m?c-e:e-c)*f-d}const u=i+a;b.push({x:parseFloat(t.toFixed(2)),y:parseFloat(u.toFixed(2))})}const C=b.map(e=>({x:e.x,y:0})),T=s*y+n;let S=0;o&&Number.isFinite(c)&&(S="short"===m?c*f-d:-(c*f+d));const v=T-S,L=y>0?v/y:0,N=Number.isFinite(L)?r+L:null;let x=1/0;if(o&&Number.isFinite(l)&&"short"===m){const e=Math.max(Math.min(a,u),0);if(e>0){const t=l-r;Number.isFinite(t)&&(x=100*t*e-v)}}const k=v>0?v:0;return{points:b,zeroLinePoints:C,summary:this.buildPayoffSummary({profileLabel:"Poor Man's Covered Call",breakeven:N,maxProfit:x,maxLoss:k,contracts:a,isCredit:v<0}),breakeven:N,maxProfit:x,maxLoss:k}}calculateSpreadBreakeven({model:e,shortStrike:t,longStrike:i,entryPrice:r}){return"short"===e.orientation?"call"===e.optionType?t+r:t-r:"call"===e.optionType?i+r:i-r}optionIntrinsic(e,t,i){return Number.isFinite(t)&&Number.isFinite(i)?"call"===e?Math.max(t-i,0):Math.max(i-t,0):0}extractPmccLegs(e={}){const t=e=>(e||"").toString().trim().toUpperCase(),i=this.normalizeCycleId(e.cycleId);let r=[];if(i&&(r=this.trades.filter(e=>this.normalizeCycleId(e.cycleId)===i)),0===r.length){const i=t(e.ticker);i&&(r=this.trades.filter(e=>t(e.ticker)===i&&"pmcc"===this.normalizeCycleType(e.cycleType,e.strategy)))}r.includes(e)||r.push(e);const s=(e=[])=>[...e].sort((e,t)=>{const i=this.normalizeStatus(e.status),r=this.normalizeStatus(t.status);if("open"===i&&"open"!==r)return-1;if("open"!==i&&"open"===r)return 1;const s=new Date(e.entryDate||e.openDate||0).getTime();return new Date(t.entryDate||t.openDate||0).getTime()-s});let n=s(r.filter(e=>this.isPmccBaseLeg(e)))[0];if(!n){n=s(r.filter(e=>"long"===this.inferTradeDirection(e)&&(e.strategy||"").toLowerCase().includes("call")))[0]||("long"===this.inferTradeDirection(e)?e:null)}let a=s(r.filter(e=>this.isPmccShortCall(e)))[0];if(!a){a=s(r.filter(e=>"short"===this.inferTradeDirection(e)&&(e.strategy||"").toLowerCase().includes("call")))[0]||("short"===this.inferTradeDirection(e)?e:null)}return n&&a&&n===a&&(a=null),{baseLeg:n,shortLeg:a}}buildPriceRange({strikeValues:e=[],spot:t=Number.NaN}={}){const i=e.map(e=>Number(e)).filter(Number.isFinite);if(Number.isFinite(t)&&i.push(t),0===i.length)return{minPrice:0,maxPrice:100};let r=Math.max(Math.min(...i),0),s=Math.max(...i);if(r===s)r=Math.max(0,.7*r),s=1.3*s+1;else{const e=s-r;r=Math.max(0,r-.3*e),s+=.3*e}return s-r<5&&(r=Math.max(0,r-2.5),s+=2.5),{minPrice:r,maxPrice:s}}buildPayoffSummary({profileLabel:e,breakeven:t,maxProfit:i,maxLoss:r,contracts:s,isCredit:n=!1}){const a=[];return e&&a.push(e),Number.isFinite(t)&&a.push(`Breakeven ${this.formatCurrency(t)}`),i===1/0?a.push("Max profit unlimited"):Number.isFinite(i)&&a.push(`Max profit ${this.formatCurrency(i)}`),r===1/0?a.push("Max loss unlimited (theoretical)"):Number.isFinite(r)&&a.push(`Max loss ${this.formatCurrency(r)}`),Number.isFinite(s)&&a.push(`${s} contract${1===s?"":"s"}${n?" (credit)":""}`),a.join(" • ")||"Payoff preview unavailable."}formatPayoffFooter(e,t){const i=e=>e===1/0||e===-1/0?"Unlimited":Number.isFinite(e)?t.format(e):"—";return[`Max profit ${i(e?.maxProfit)}`,`Max loss ${i(e?.maxLoss)}`,`Breakeven ${i(e?.breakeven)}`].join(" • ")}getTradePayoffMeta(e){const t=(e.strategy||"Unspecified strategy").toString(),i=this.getTradeType(e)||"—",r=this.getDisplayStatus(e),s=Math.abs(Number(e.quantity));return[t,i,Number.isFinite(s)&&s>0?`${s} contract${1===s?"":"s"}`:null,r].filter(Boolean).join(" • ")}sortTrades(e){const t="asc"===this.sortDirection[e]?"desc":"asc";this.sortDirection[e]=t,document.querySelectorAll(".sortable").forEach(e=>{e.classList.remove("asc","desc")});const i=document.querySelector(`[data-sort="${e}"]`);i&&i.classList.add(t);const r=[...this.trades].sort((i,r)=>{let s=i[e],n=r[e];return e.includes("Date")&&(s=new Date(s),n=new Date(n)),"asc"===t?s<n?-1:s>n?1:0:s>n?-1:s<n?1:0});this.renderTradesTable(r)}deleteTrade(e){confirm("Are you sure you want to delete this trade?")&&(this.trades=this.trades.filter(t=>t.id!==e),this.saveToStorage(),this.markUnsavedChanges(),this.filterTrades(),this.updateDashboard())}editTrade(e){const t=this.trades.find(t=>t.id===e);if(!t)return;this.resetAddTradeForm(),this.currentEditingId=e;const i=document.getElementById("add-trade-form");if(!i)return;const r=i.elements;if(r.ticker&&(r.ticker.value=t.ticker||""),r.strategy&&(r.strategy.value=t.strategy||""),r.exitReason&&(r.exitReason.value=t.exitReason||""),r.notes&&(r.notes.value=t.notes||""),r.cycleId&&(r.cycleId.value=t.cycleId||""),r.cycleType&&(r.cycleType.value=t.cycleType||""),r.cycleRole&&(r.cycleRole.value=t.cycleRole||""),r.underlyingType){const e=this.normalizeUnderlyingType(t.underlyingType,{fallback:"Stock"})||"Stock";r.underlyingType.value=e}if(r.tradeStatus){const e=this.normalizeTradeStatusInput(t.statusOverride);r.tradeStatus.value=e||""}this.renderLegForms(t.legs||[]),this.updateTickerPreview(t.ticker||""),this.showView("add-trade")}exportToCSV(){const e=[["Ticker","Strategy","Trade Type","Strike","Defined Risk Width","Qty","Net Credit/Debit","Exit Price","DTE","Days Held","Entry Date","Expiration Date","Exit Date","Max Risk","P&L","ROI %","Annual ROI %","Status","Stock Price at Entry","Fees","Max Risk Override","IV Rank","Notes","Exit Reason","Cycle ID","Cycle Type","Cycle Role"].join(","),...this.trades.map(e=>[e.ticker,`"${e.strategy}"`,this.getTradeType(e),e.strikePrice,Number.isFinite(Number(e.definedRiskWidth))?Number(e.definedRiskWidth).toFixed(2):"",Math.abs(e.quantity),e.entryPrice,null!==e.exitPrice&&void 0!==e.exitPrice?e.exitPrice:"",e.dte,e.daysHeld,e.entryDate,e.expirationDate,e.exitDate||"",e.maxRisk.toFixed(2),e.pl.toFixed(2),e.roi.toFixed(2),e.annualizedROI.toFixed(2),e.status,e.stockPriceAtEntry,e.fees,Number.isFinite(Number(e.maxRiskOverride))?Number(e.maxRiskOverride).toFixed(2):"",e.ivRank||"",`"${e.notes||""}"`,e.exitReason||"",e.cycleId||"",e.cycleType||"",e.cycleRole||""].join(","))].join("\n"),t=new Blob([e],{type:"text/csv"}),i=window.URL.createObjectURL(t),r=document.createElement("a");r.style.display="none",r.href=i,r.download="options_trades_enhanced.csv",document.body.appendChild(r),r.click(),window.URL.revokeObjectURL(i),document.body.removeChild(r)}async saveDatabase(){this.showLoadingIndicator("Saving...");try{const e=this.buildDatabasePayload();this.supportsFileSystemAccess?await this.saveWithFileSystemAPI(e):this.saveWithDownload(e),this.hasUnsavedChanges=!1,this.updateUnsavedIndicator(),this.showNotification("Database saved successfully!","success"),this.saveToStorage({fileName:this.currentFileName})}catch(e){if(console.error("Save error:",e),"AbortError"!==e.name)try{const e=this.buildDatabasePayload();this.saveWithDownload(e),this.hasUnsavedChanges=!1,this.updateUnsavedIndicator(),this.showNotification("Database saved as download!","success"),this.saveToStorage({fileName:this.currentFileName})}catch(e){this.showNotification("Failed to save database","error")}}this.hideLoadingIndicator()}buildDatabasePayload(){return{trades:this.trades,exportDate:(new Date).toISOString(),version:"2.4"}}async saveWithFileSystemAPI(e){try{this.currentFileHandle||(this.currentFileHandle=await window.showSaveFilePicker({suggestedName:"gammaledger.json",types:[{description:"JSON files",accept:{"application/json":[".json"]}}]}));const t=await this.currentFileHandle.createWritable();await t.write(JSON.stringify(e,null,2)),await t.close(),this.currentFileName=this.currentFileHandle.name,this.updateFileNameDisplay()}catch(e){throw e}}saveWithDownload(e){const t=new Blob([JSON.stringify(e,null,2)],{type:"application/json"}),i=URL.createObjectURL(t),r=document.createElement("a");r.href=i,r.download="gammaledger.json",document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(i),this.currentFileName="gammaledger.json",this.updateFileNameDisplay()}async loadDatabase(){this.showLoadingIndicator("Loading...");try{this.supportsFileSystemAccess?await this.loadWithFileSystemAPI():this.loadWithFileInput()}catch(e){console.error("Load error:",e),"AbortError"!==e.name&&this.loadWithFileInput()}this.hideLoadingIndicator()}async loadWithFileSystemAPI(){const[e]=await window.showOpenFilePicker({types:[{description:"JSON files",accept:{"application/json":[".json"]}}]}),t=await e.getFile(),i=await t.text(),r=JSON.parse(i);this.processLoadedData(r,{fileName:e.name,source:"file-open"}),this.currentFileHandle=e,this.showNotification(`Loaded ${this.trades.length} trades successfully!`,"success")}loadWithFileInput(){const e=document.getElementById("file-input");e.onchange=t=>{const i=t.target.files[0];if(i){const t=new FileReader;t.onload=t=>{try{const e=JSON.parse(t.target.result);this.processLoadedData(e,{fileName:i.name,source:"file-open"}),this.showNotification(`Loaded ${this.trades.length} trades successfully!`,"success")}catch(e){this.showNotification("Invalid JSON file","error")}e.value=""},t.readAsText(i)}else e.value=""},e.click()}setupImportControls(){if(this.importControlsInitialized)return;const e=document.getElementById("import-ofx-btn"),t=document.getElementById("import-json-btn"),i=document.getElementById("import-ofx-input"),r=document.getElementById("import-json-input");e&&i&&(e.addEventListener("click",e=>{e.preventDefault(),i.value="",i.click()}),i.addEventListener("change",e=>{this.handleOfxFileSelection(e)})),t&&r&&(t.addEventListener("click",e=>{e.preventDefault(),r.value="",r.click()}),r.addEventListener("change",async e=>{const t=e?.target;if(!t||!t.files||0===t.files.length)return;const[i]=t.files;if(t.value="",i)try{this.showLoadingIndicator("Importing JSON...");const e=await i.text(),t=JSON.parse(e),r=Array.isArray(t?.trades)?t.trades.length:0;this.processLoadedData(t,{fileName:i.name||"Imported JSON",source:"json-import"}),this.appendImportLog({type:"success",message:`Imported ${r} trades from ${i.name||"JSON file"}.`,timestamp:new Date})}catch(e){console.error("JSON import error:",e),this.showNotification("Invalid JSON file","error"),this.appendImportLog({type:"error",message:`Failed to import JSON: ${e?.message||"Unknown error"}.`,timestamp:new Date})}finally{this.hideLoadingIndicator()}}));const s=document.getElementById("import-merge-btn");s&&s.addEventListener("click",e=>{e.preventDefault(),this.mergeSelectedImportTrades()});const n=document.getElementById("import-merge-hint-btn");n&&n.addEventListener("click",e=>{e.preventDefault(),this.showView("trades-list"),this.setupTradesMergeControls(),this.toggleTradesMergePanel(!0)}),this.renderImportSummary(),this.refreshImportMergeList(),this.importControlsInitialized=!0}setupTradesMergeControls(){const e=document.getElementById("trades-merge-panel");if(e){if(!this.tradesMergeInitialized){const t=document.getElementById("trades-merge-btn");t&&t.addEventListener("click",e=>{e.preventDefault(),this.mergeSelectedTradesFromList()});const i=document.getElementById("trades-select-all");i&&i.addEventListener("change",e=>{this.handleSelectAllTrades(Boolean(e.target.checked))});const r=document.getElementById("trades-merge-toggle");r&&r.addEventListener("click",e=>{e.preventDefault(),this.toggleTradesMergePanel()}),e.classList.add("is-collapsed"),e.setAttribute("aria-hidden","true"),this.tradesMergePanelOpen=!1,this.tradesMergeInitialized=!0}this.updateTradesMergeToggleLabel(),this.updateMergeColumnVisibility(),this.syncSelectAllCheckbox(),this.refreshTradesMergePanelContents()}}toggleTradesMergePanel(e=null){const t="boolean"==typeof e?e:!this.tradesMergePanelOpen;this.tradesMergePanelOpen=t;const i=document.getElementById("trades-merge-panel");i&&(i.classList.toggle("is-collapsed",!t),i.setAttribute("aria-hidden",String(!t))),this.updateTradesMergeToggleLabel(),this.updateMergeColumnVisibility(),this.syncSelectAllCheckbox(),this.refreshTradesMergePanelContents()}updateTradesMergeToggleLabel(){const e=document.getElementById("trades-merge-toggle");if(!e)return;const t=Boolean(this.tradesMergePanelOpen);e.textContent=t?"Hide Merge Trades":"Merge Trades",e.setAttribute("aria-expanded",String(t)),e.classList.toggle("is-active",t)}updateMergeColumnVisibility(){const e=!this.tradesMergePanelOpen,t=document.querySelector(".trade-select-header");t&&(t.classList.toggle("is-hidden",e),t.setAttribute("aria-hidden",String(e)));const i=document.getElementById("trades-select-all");i&&(e&&(i.checked=!1,i.indeterminate=!1),i.disabled=e),document.querySelectorAll(".trade-select-cell").forEach(t=>{t.classList.toggle("is-hidden",e)}),document.querySelectorAll(".trade-merge-checkbox").forEach(t=>{t.disabled=e,t.tabIndex=e?-1:0})}refreshTradesMergePanelContents(){const e=document.getElementById("trades-merge-summary"),t=document.getElementById("trades-merge-groups"),i=document.getElementById("trades-merge-btn");if(!this.tradesMergePanelOpen)return e&&(e.textContent='Select "Merge Trades" to analyze possible combinations grouped by ticker.'),t&&(t.innerHTML='<p class="trades-merge-groups__empty">Enable the merge panel to review grouped trades.</p>'),void(i&&(i.disabled=!0,i.textContent="Merge Selected Trades",i.title="Enable the merge panel to review trade combinations."));i&&(i.title="Merge selected trades that share a ticker."),this.renderTradeMergeSelectionSummary(),this.renderTradeMergeGroups(this.currentFilteredTrades),this.updateTradesMergeButtonState()}appendImportLog(e={}){const t=e.timestamp instanceof Date?e.timestamp:new Date,i=e.type||"info",r=e.message||"";r&&(this.importLog=[{timestamp:t,type:i,message:r},...this.importLog].slice(0,12),this.renderImportLog())}renderImportLog(){const e=document.getElementById("import-log");if(!e)return;if(!Array.isArray(this.importLog)||0===this.importLog.length)return void(e.innerHTML="<p>No imports recorded yet.</p>");const t=new Intl.DateTimeFormat(void 0,{dateStyle:"medium",timeStyle:"short"});e.innerHTML=this.importLog.map(e=>{const i=t.format(e.timestamp);return`<div class="import-log__entry"><strong>${"error"===e.type?"Error":"success"===e.type?"Success":"Info"} · ${i}</strong><span>${this.escapeHTML(e.message)}</span></div>`}).join("")}updateImportSummary(e={}){const t={timestamp:e.timestamp instanceof Date?e.timestamp:new Date(e.timestamp||Date.now()),fileName:e.fileName||"OFX import",batchId:e.batchId||null,stats:{...e.stats||{}},reviewTradeIds:Array.isArray(e.reviewTradeIds)?e.reviewTradeIds.slice():[],mergedTrades:Number.isFinite(e.mergedTrades)?Number(e.mergedTrades):0};this.importSummary=t,this.importMergeSelection.clear()}renderImportSummary(){const e=document.getElementById("import-summary");if(!e)return;if(!this.importSummary)return void(e.innerHTML='<p class="import-summary__empty">Run an OFX import to see how many trades and legs were created.</p>');const t=this.importSummary,i=t.stats||{},r=t.fileName||"OFX import",s=t.timestamp instanceof Date?t.timestamp:new Date(t.timestamp||Date.now()),n=new Intl.DateTimeFormat(void 0,{dateStyle:"medium",timeStyle:"short"}),a=Number.isNaN(s.getTime())?"—":n.format(s),o=(i.legsAddedToNewTrades||0)+(i.legsAddedToUpdates||0),l=this.countImportReviewTrades(t.batchId),c=this.countImportReviewTrades(),d=[{label:"Transactions processed",value:i.totalTransactions??0},{label:"Trades created",value:i.totalTradesCreated??(i.tradesCreated||0)+(i.reviewTradesCreated||0)},{label:"Trades updated",value:i.tradesUpdated??0},{label:t.batchId?"Review trades (this import)":"Review trades pending",value:l},{label:"Legs imported",value:o},{label:"Duplicate legs skipped",value:i.duplicateLegs??0}];(t.mergedTrades||0)>0&&d.push({label:"Manual merges",value:t.mergedTrades}),t.batchId&&c>l&&d.push({label:"Review trades (all)",value:c}),e.innerHTML=`\n            <div class="import-summary__meta">\n                <span title="Imported file">${this.escapeHTML(r)}</span>\n                <span title="Imported at">${this.escapeHTML(a)}</span>\n            </div>\n            <div class="import-summary__grid">\n                ${d.map(e=>{return`\n                    <div class="import-summary__item">\n                        <span class="import-summary__value">${this.escapeHTML((t=e.value,Number.isFinite(t)?t.toLocaleString():null==t?"0":t.toString()))}</span>\n                        <span class="import-summary__label">${this.escapeHTML(e.label)}</span>\n                    </div>\n                `;var t}).join("")}\n            </div>\n        `}countImportReviewTrades(e=null){return this.trades.filter(t=>!!t?.importReview&&(!e||t.importBatchId===e)).length}getImportReviewTrades(){return this.trades.filter(e=>e?.importReview).slice().sort((e,t)=>{const i=new Date(e.openedDate||e.entryDate||0).getTime();return new Date(t.openedDate||t.entryDate||0).getTime()-i})}refreshImportMergeList(){const e=document.getElementById("import-merge-list"),t=document.getElementById("import-merge-hint"),i=document.getElementById("import-merge-hint-btn"),r=document.getElementById("import-merge-btn"),s=this.getImportReviewTrades();if(s.length){const e=new Set(s.map(e=>e.id));Array.from(this.importMergeSelection).forEach(t=>{e.has(t)||this.importMergeSelection.delete(t)})}else this.importMergeSelection.clear();if(t)if(s.length){const e=1===s.length?"review trade":"review trades";t.textContent=`Detected ${s.length} ${e} that might be combined. Open the All Trades page and enable "Merge Trades" to review them.`}else t.textContent="No review trades require manual merging right now.";if(i&&(s.length?(i.disabled=!1,i.title="Review potential merges on the All Trades page."):(i.disabled=!0,i.title="No merge opportunities detected from the latest import.")),!e)return void(r&&(r.disabled=!0,r.textContent="Merge Selected Trades"));if(!s.length)return e.innerHTML='<p class="import-merge__empty">No review trades are waiting to be merged.</p>',void(r&&(r.disabled=!0,r.textContent="Merge Selected Trades"));const n=new Intl.DateTimeFormat(void 0,{dateStyle:"medium"});e.innerHTML=s.map(e=>{const t=this.importMergeSelection.has(e.id),i=Array.isArray(e.legs)?e.legs.length:0,r=e.openedDate||e.entryDate||"",s=r?new Date(r):null,a=s&&!Number.isNaN(s.getTime())?n.format(s):"—";let o=(e.notes||"").trim();o.length>140&&(o=`${o.slice(0,137)}…`);const l=e.importBatchId?`Batch ${e.importBatchId}`:"Manual Review",c=["import-merge-card"];return t&&c.push("is-selected"),`\n                <div class="${c.join(" ")}" data-trade-id="${this.escapeHTML(e.id)}">\n                    <label class="import-merge-card__label">\n                        <input type="checkbox" value="${this.escapeHTML(e.id)}" ${t?"checked":""} />\n                        <div class="import-merge-card__content">\n                            <div class="import-merge-card__header">\n                                <span class="import-merge-card__ticker">${this.escapeHTML(e.ticker||"—")}</span>\n                                <span class="import-merge-card__legs">${i} leg${1===i?"":"s"}</span>\n                            </div>\n                            <div class="import-merge-card__meta">\n                                <span>${this.escapeHTML(l)}</span>\n                                <span>${this.escapeHTML(a)}</span>\n                            </div>\n                            ${o?`<p class="import-merge-card__notes">${this.escapeHTML(o)}</p>`:""}\n                        </div>\n                    </label>\n                </div>\n            `}).join(""),e.querySelectorAll('input[type="checkbox"]').forEach(e=>{e.addEventListener("change",e=>{const t=e.target,i=t.value;if(!i)return;t.checked?this.importMergeSelection.add(i):this.importMergeSelection.delete(i);const r=t.closest(".import-merge-card");r&&r.classList.toggle("is-selected",t.checked),this.updateImportMergeButtonState()})}),this.updateImportMergeButtonState()}updateImportMergeButtonState(){const e=document.getElementById("import-merge-btn");if(!e)return;const t=this.importMergeSelection.size;e.disabled=t<2,e.textContent=t>=2?`Merge ${t} Trades`:"Merge Selected Trades"}resolveMergedExitReason(e=[]){const t=Array.isArray(e)?e.map(e=>(e?.exitReason||"").toString().trim()).filter(Boolean):[];if(0===t.length)return"";const i=Array.from(new Set(t));return 1===i.length?i[0]:`${i[0]} (+${i.length-1} more)`}buildMergedTradeNote(e=[],t=""){const i=new Date,r=(t||"").toString().trim().replace(/\.*$/,""),s=r?`${r}. `:"",n=Array.isArray(e)?e.length:0,a=`${s}Merged ${n} trade${1===n?"":"s"} on ${i.toLocaleDateString()} at ${i.toLocaleTimeString()}.`,o=`Source trades: ${e.map(e=>e.id).join(", ")}.`,l=e.map(e=>(e.notes||"").trim()).filter(Boolean);return l.length?`${a} ${o}\n\n${l.join("\n\n")}`:`${a} ${o}`}createMergedTradeFromTrades(e=[],t={}){const i=Array.isArray(e)?e.filter(e=>e&&Array.isArray(e.legs)&&e.legs.length>0):[];if(i.length<2)throw new Error("At least two trades with legs are required to merge.");const r=new Set(i.map(e=>(e.ticker||"").toUpperCase()).filter(Boolean));if(r.size>1)throw new Error("Trades must share the same ticker before merging.");const s=[];let n="string"==typeof t.batchId?t.batchId:null;if(i.forEach(e=>{!n&&e.importBatchId&&(n=e.importBatchId),(e.legs||[]).forEach((t,i)=>{if(!t)return;const r={...t};r.id||(r.id=`LEG-${e.id}-${i}`),n&&!r.importBatchId&&(r.importBatchId=n),s.push(r)})}),!s.length)throw new Error("No legs were found to merge.");const a=`${t.idPrefix||"MERGED"}-${Date.now()}-${Math.random().toString(16).slice(2,6)}`,o=t.baseTrade||i[0],l=r.size?Array.from(r)[0]:"UNKNOWN",c=t.strategyOverride&&t.strategyOverride.toString().trim(),d=i.map(e=>(e.strategy||"").toString().trim()).filter(Boolean),u=d.find(e=>e&&"Import Review"!==e&&"Imported Multi-Leg"!==e),m=d[0]||"Imported Multi-Leg",h=c||u||m,p=this.normalizeUnderlyingType(o?.underlyingType,{fallback:"Stock"}),g=this.normalizeTradeStatusInput(o?.statusOverride);return this.enrichTradeData({id:a,ticker:l,strategy:h,status:o?.status||"Open",statusOverride:g||null,notes:this.buildMergedTradeNote(i,t.notePrefix||""),legs:s,importBatchId:n||null,importReview:!1,exitReason:t.exitReasonOverride||this.resolveMergedExitReason(i),cycleId:o?.cycleId||"",cycleType:o?.cycleType||"",cycleRole:o?.cycleRole||"",underlyingType:p})}mergeSelectedImportTrades(){const e=Array.from(this.importMergeSelection);if(e.length<2)return void this.showNotification("Select at least two review trades to merge.","info");const t=e.map(e=>this.trades.find(t=>t.id===e)).filter(Boolean);if(t.length<2)return this.showNotification("Unable to locate all selected trades. Refresh the list and try again.","error"),void this.refreshImportMergeList();let i;try{i=this.createMergedTradeFromTrades(t,{idPrefix:"IMP-MERGED",notePrefix:"Import review merge"})}catch(e){return void this.showNotification(e.message,"error")}const r=new Set(t.map(e=>e.id));this.trades=this.trades.filter(e=>!r.has(e.id)),this.trades.push(i),this.importSummary&&(this.importSummary.mergedTrades=(this.importSummary.mergedTrades||0)+1,Array.isArray(this.importSummary.reviewTradeIds)&&(this.importSummary.reviewTradeIds=this.importSummary.reviewTradeIds.filter(e=>!r.has(e)))),this.importMergeSelection.clear(),t.forEach(e=>this.tradeMergeSelection.delete(e.id)),this.saveToStorage({fileName:this.currentFileName}),this.markUnsavedChanges(),this.updateDashboard(),"function"==typeof this.updateTradesList&&this.updateTradesList();const s=i.ticker||"Trade";this.appendImportLog({type:"success",message:`Merged ${t.length} review trades into a ${i.legsCount}-leg trade for ${s}.`,timestamp:new Date}),this.showNotification("Review trades merged into a single multi-leg trade.","success"),this.renderImportSummary(),this.refreshImportMergeList(),this.refreshTradesMergePanelContents()}mergeSelectedTradesFromList(){const e=Array.from(this.tradeMergeSelection);if(e.length<2)return void this.showNotification("Select at least two trades to merge.","info");const t=e.map(e=>this.trades.find(t=>t.id===e)).filter(Boolean);if(t.length<2)return this.showNotification("Unable to locate all selected trades. Refresh the table and try again.","error"),void this.pruneTradeMergeSelection();const i=new Set(t.map(e=>(e.ticker||"").toUpperCase()).filter(Boolean));if(1!==i.size)return void this.showNotification("Trades must share the same ticker before merging.","error");const r=Array.from(i)[0],s=t.reduce((e,t)=>e+((t.legs||[]).length||0),0),n=Array.from(new Set(t.map(e=>this.getDisplayStatus(e)))).filter(Boolean),a=t.map(e=>this.parseDateValue(e.entryDate||e.openedDate)).filter(e=>e instanceof Date&&!Number.isNaN(e.getTime())).sort((e,t)=>e.getTime()-t.getTime()),o=new Intl.DateTimeFormat(void 0,{dateStyle:"medium"}),l=a.length?`${o.format(a[0])} - ${o.format(a[a.length-1])}`:"N/A",c=t.reduce((e,t)=>e+Math.max(0,Number(t.openContracts)||0),0),d=[`Merge ${t.length} trades for ${r}?`,`Total legs: ${s}`,`Status mix: ${n.join(", ")||"N/A"}`,`Entry range: ${l}`,`Open contracts (net): ${c}`,"The original trades will be replaced by a single multi-leg trade.","Continue?"].join("\n");if(!window.confirm(d))return;let u;try{u=this.createMergedTradeFromTrades(t,{idPrefix:"MANUAL-MERGED",notePrefix:"Manual merge"})}catch(e){return void this.showNotification(e.message,"error")}const m=new Set(t.map(e=>e.id));this.trades=this.trades.filter(e=>!m.has(e.id)),this.trades.push(u),this.importSummary&&(this.importSummary.mergedTrades=(this.importSummary.mergedTrades||0)+1),this.tradeMergeSelection.clear(),this.saveToStorage({fileName:this.currentFileName}),this.markUnsavedChanges(),this.filterTrades(),this.updateDashboard(),this.renderImportSummary(),this.refreshImportMergeList(),this.appendImportLog({type:"success",message:`Merged ${t.length} trades into a ${u.legsCount}-leg trade for ${u.ticker}.`,timestamp:new Date}),this.showNotification(`Merged ${t.length} trades for ${u.ticker}.`,"success")}renderTradeMergeSelectionSummary(){const e=document.getElementById("trades-merge-summary");if(!e)return;const t=Array.from(this.tradeMergeSelection);if(!t.length)return void(e.textContent="Select two or more trades with the same ticker to enable merging.");const i=t.map(e=>this.trades.find(t=>t.id===e)).filter(Boolean);if(!i.length)return this.tradeMergeSelection.clear(),void(e.textContent="Select two or more trades with the same ticker to enable merging.");const r=Array.from(new Set(i.map(e=>(e.ticker||"").toUpperCase()).filter(Boolean))),s=i.reduce((e,t)=>e+((t.legs||[]).length||0),0),n=Array.from(new Set(i.map(e=>this.getDisplayStatus(e)))).filter(Boolean),a=[`<strong>${this.escapeHTML(`${i.length} trade${1===i.length?"":"s"} selected`)}</strong>`,r.length?`<span>${this.escapeHTML(1===r.length?`Ticker: ${r[0]}`:`Tickers: ${r.join(", ")}`)}</span>`:"",`<span>${this.escapeHTML(`Total legs: ${s}`)}</span>`,n.length?`<span>${this.escapeHTML(`Status mix: ${n.join(", ")}`)}</span>`:""];r.length>1&&a.push(`<span>${this.escapeHTML("Different tickers selected - merge disabled")}</span>`),e.innerHTML=a.filter(Boolean).join(" ")}renderTradeMergeGroups(e=this.currentFilteredTrades){const t=document.getElementById("trades-merge-groups");if(!t)return;const i=(Array.isArray(e)?e:[]).reduce((e,t)=>{const i=(t.ticker||"").toUpperCase();return i?(e.has(i)||e.set(i,[]),e.get(i).push(t),e):e},new Map),r=Array.from(i.entries()).filter(([,e])=>e.length>=2).sort(([e],[t])=>e.localeCompare(t));r.length?(t.innerHTML=r.map(([e,t])=>{const i=t.filter(e=>this.tradeMergeSelection.has(e.id)).length,r=Array.from(new Set(t.map(e=>this.getDisplayStatus(e)))).filter(Boolean),s=t.reduce((e,t)=>e+((t.legs||[]).length||0),0),n=i===t.length,a=t.length-i,o=n?`Clear ${e} selection`:a===t.length?`Select ${t.length} trades`:`Select remaining (${a})`;return`\n                <div class="trades-merge-group" data-ticker="${this.escapeHTML(e)}">\n                    <div class="trades-merge-group__header">\n                        <span class="trades-merge-group__ticker">${this.escapeHTML(e)}</span>\n                        <span class="trades-merge-group__count">${this.escapeHTML(`${t.length} trades • ${s} legs`)}</span>\n                    </div>\n                    <div class="trades-merge-group__body">\n                        ${r.length?`<span>Statuses: ${this.escapeHTML(r.join(", "))}</span>`:""}\n                        <span>Selected: ${this.escapeHTML(`${i}/${t.length}`)}</span>\n                    </div>\n                    <div class="trades-merge-group__actions">\n                        <button type="button" class="btn btn--sm btn--secondary trades-merge-group__toggle" data-ticker="${this.escapeHTML(e)}">${this.escapeHTML(o)}</button>\n                    </div>\n                </div>\n            `}).join(""),t.querySelectorAll(".trades-merge-group__toggle").forEach(e=>{e.addEventListener("click",t=>{t.preventDefault();const i=(e.getAttribute("data-ticker")||"").toUpperCase();if(!i)return;const r=(Array.isArray(this.currentFilteredTrades)?this.currentFilteredTrades:[]).filter(e=>(e.ticker||"").toUpperCase()===i);if(!r.length)return;const s=r.every(e=>this.tradeMergeSelection.has(e.id));r.forEach(e=>{s?this.tradeMergeSelection.delete(e.id):this.tradeMergeSelection.add(e.id)}),this.syncTradeSelectionCheckboxes(),this.refreshTradesMergePanelContents()})})):t.innerHTML='<p class="trades-merge-groups__empty">Need at least two trades sharing a ticker to merge.</p>'}updateTradesMergeButtonState(){const e=document.getElementById("trades-merge-btn");if(!e)return;if(!this.tradesMergePanelOpen)return e.disabled=!0,e.textContent="Merge Selected Trades",void(e.title="Enable the merge panel to review trade combinations.");const t=Array.from(this.tradeMergeSelection).map(e=>this.trades.find(t=>t.id===e)).filter(Boolean);if(t.length<2)return e.disabled=!0,e.textContent="Merge Selected Trades",void(e.title="Select at least two trades to merge.");const i=new Set(t.map(e=>(e.ticker||"").toUpperCase()).filter(Boolean));if(1!==i.size)return e.disabled=!0,e.textContent="Merge Selected Trades",void(e.title="Select trades that share the same ticker.");e.disabled=!1,e.textContent=`Merge ${t.length} Trades`,e.title=`Merge ${t.length} trades for ${Array.from(i)[0]}.`}syncTradeSelectionCheckboxes(){document.querySelectorAll(".trade-merge-checkbox").forEach(e=>{const t=e.dataset.tradeId;e.checked=!!t&&this.tradeMergeSelection.has(t)}),this.syncSelectAllCheckbox()}syncSelectAllCheckbox(){const e=document.getElementById("trades-select-all");if(!e)return;const t=Array.from(document.querySelectorAll(".trade-merge-checkbox"));if(!(this.tradesMergePanelOpen&&t.length))return e.checked=!1,e.indeterminate=!1,void(e.disabled=!0);e.disabled=!1;const i=t.filter(e=>{const t=e.dataset.tradeId;return t&&this.tradeMergeSelection.has(t)}).length;0===i?(e.checked=!1,e.indeterminate=!1):i===t.length?(e.checked=!0,e.indeterminate=!1):(e.checked=!1,e.indeterminate=!0)}handleSelectAllTrades(e){if(!this.tradesMergePanelOpen)return;const t=Array.from(document.querySelectorAll(".trade-merge-checkbox"));t.length&&(t.forEach(t=>{const i=t.dataset.tradeId;i&&(e?this.tradeMergeSelection.add(i):this.tradeMergeSelection.delete(i),t.checked=e)}),this.syncSelectAllCheckbox(),this.refreshTradesMergePanelContents())}pruneTradeMergeSelection(){if(!(this.tradeMergeSelection instanceof Set)||0===this.tradeMergeSelection.size)return;const e=new Set(this.trades.map(e=>e.id));let t=!1;this.tradeMergeSelection.forEach(i=>{e.has(i)||(this.tradeMergeSelection.delete(i),t=!0)}),t&&(this.syncTradeSelectionCheckboxes(),this.refreshTradesMergePanelContents())}async handleOfxFileSelection(e){const t=e?.target;if(!t||!t.files||0===t.files.length)return;const[i]=t.files;if(t.value="",i)try{this.showLoadingIndicator("Importing OFX..."),await this.importOfxFile(i,{fileName:i.name||"OFX import"})}catch(e){console.error("OFX import error:",e);const t=e?.message||"Unknown error";this.showNotification(`Failed to import OFX: ${t}`,"error"),this.appendImportLog({type:"error",message:`Failed to import ${i.name||"OFX file"}: ${t}`,timestamp:new Date})}finally{this.hideLoadingIndicator()}}async importOfxFile(e,t={}){if(!e)throw new Error("No file selected.");const i=await e.text();await this.importOfxContent(i,{...t,fileSize:e.size||0})}async importOfxContent(e,t={}){const i=t.batchId||`OFX-${Date.now()}-${Math.random().toString(16).slice(2,8)}`,r={...t,batchId:i},s=this.parseOfx(e),n=this.buildOfxImportPayload(s,r);this.applyOfxImportResult(n,r)}parseOfx(e){if("string"!=typeof e)throw new Error("OFX payload is invalid.");const t=e.indexOf("<OFX");if(-1===t)throw new Error("Invalid OFX file: missing OFX root.");const i=e.slice(t).trim(),r=(new DOMParser).parseFromString(i,"application/xml");if(r.querySelector("parsererror"))throw new Error("Unable to parse OFX document.");const s=this.extractOfxSecurities(r);return{securities:s,transactions:this.extractOfxTransactions(r,s)}}extractOfxSecurities(e){const t=new Map,i=e.getElementsByTagName("SECLIST")[0];if(!i)return t;const r=(e,t)=>{if(!e)return"";const i=e.getElementsByTagName(t)[0];return i?i.textContent.trim():""};return Array.from(i.children).forEach(e=>{if(!(e instanceof Element))return;const i=e.tagName,s=e.getElementsByTagName("SECINFO")[0];if(!s)return;const n=r(s,"UNIQUEID");if(!n)return;const a=r(s,"TICKER"),o=r(s,"SECNAME"),l={id:n,tag:i,ticker:a,name:o,option:null};if("OPTINFO"===i){const t=r(e,"STRIKEPRICE"),i=r(e,"SHPERCTRCT"),s=r(e,"DTEXPIRE"),n=r(e,"OPTTYPE"),c=this.parseOptionContractSymbol(a||o),d=this.parseOfxDate(s);l.option={underlying:c?.underlying||(a?a.split(" ")[0].trim():""),type:(n||c?.type||"").toUpperCase(),strike:t?Number(t):c?.strike??null,expiration:d?d.toISOString().slice(0,10):c?.expiration||"",multiplier:i?Number(i):c?.multiplier??100}}t.set(n,l)}),t}parseOptionContractSymbol(e=""){const t=(e||"").toString().replace(/\s+/g,"").toUpperCase().match(/^([A-Z]{1,6})(\d{6})([CP])(\d{8})/);if(!t)return null;const i=t[1],r=t[2],s=t[3],n=t[4],a=this.parseOfxDate(r),o=Number(parseInt(n,10)/1e3);return{underlying:i,expiration:a?a.toISOString().slice(0,10):"",type:"P"===s?"PUT":"CALL",strike:o,multiplier:100}}parseOfxDate(e){if(!e)return null;const t=e.toString().replace(/[^0-9]/g,"");if(!t)return null;if(6===t.length){const e=Number(t.slice(0,2));if(!Number.isFinite(e))return null;const i=e>=70?1900+e:2e3+e,r=Number(t.slice(2,4))-1,s=Number(t.slice(4,6)),n=new Date(Date.UTC(i,r,s));return Number.isNaN(n.getTime())?null:n}if(t.length>=8){const e=Number(t.slice(0,4)),i=Number(t.slice(4,6))-1,r=Number(t.slice(6,8)),s=t.length>=10?Number(t.slice(8,10)):0,n=t.length>=12?Number(t.slice(10,12)):0,a=t.length>=14?Number(t.slice(12,14)):0,o=new Date(Date.UTC(e,i,r,s,n,a));return Number.isNaN(o.getTime())?null:o}return null}mapOfxOrderType(e,t,i=0){const r=(t||"").toString().trim().toUpperCase();switch(e){case"BUYOPT":return"BUYTOCLOSE"===r?"BTC":"BTO";case"SELLOPT":return"SELLTOCLOSE"===r?"STC":"STO";case"BUYSTOCK":return"BUYTOCOVER"===r?"BTC":"BTO";case"SELLSTOCK":return"SELLSHORT"===r?"STO":"SELLTOCLOSE"===r?"STC":i<0?"STO":"STC";default:return"BTO"}}extractOfxTransactions(e,t){const i=[],r=e.getElementsByTagName("INVTRANLIST")[0];if(!r)return i;const s=(e,t)=>{if(!e)return"";const i=e.getElementsByTagName(t)[0];return i?i.textContent.trim():""};return Array.from(r.children).forEach(e=>{if(!(e instanceof Element))return;const r=e.tagName;if(!["BUYOPT","SELLOPT","BUYSTOCK","SELLSTOCK"].includes(r))return;const n="BUYOPT"===r||"BUYSTOCK"===r?e.getElementsByTagName("INVBUY")[0]:e.getElementsByTagName("INVSELL")[0];if(!n)return;const a=n.getElementsByTagName("INVTRAN")[0],o=s(a,"FITID")||s(e,"FITID"),l=this.sanitizeFitId(o);if(!l)return;const c=s(a,"DTTRADE")||s(e,"DTTRADE"),d=this.parseOfxDate(c),u=d?d.toISOString().slice(0,10):"",m=(c||"").replace(/[^0-9]/g,""),h=m.length>=14?m.slice(0,14):m.slice(0,8)||u.replace(/-/g,""),p=s(n,"UNIQUEID"),g=p?t.get(p):null,y=Number(s(n,"UNITS")||"0"),f=Number(s(n,"UNITPRICE")||"0"),b=Number(s(n,"TOTAL")||"0"),C=Number(s(n,"COMMISSION")||"0"),T=s(e,"BUYOPT"===r?"OPTBUYTYPE":"SELLOPT"===r?"OPTSELLTYPE":"BUYSTOCK"===r?"BUYTYPE":"SELLTYPE"),S=this.mapOfxOrderType(r,T,y),v=this.mapOrderTypeToActionSide(S),L=r.includes("OPT");let N="",x="",k=null,I="",w=L?100:1,E="";if(g&&g.option)N=(g.option.underlying||"").toUpperCase(),x=g.option.type||"",k=Number.isFinite(Number(g.option.strike))?Number(g.option.strike):null,I=g.option.expiration||"",w=g.option.multiplier||w,E=N;else if(g){if(E=(g.ticker||g.name||"").split(" ")[0].trim().toUpperCase(),L){const e=this.parseOptionContractSymbol(g.ticker||g.name||"");e&&(N=e.underlying.toUpperCase(),x=e.type,k=e.strike,I=e.expiration,w=e.multiplier||w,E=N)}else N=E}E||(E=(N||"").toUpperCase());const D=(N||E||"").toUpperCase(),F=L?"OPTION":"STOCK",A=[h||u.replace(/-/g,""),D,v.side,F];L&&A.push(I||"");const P=A.filter(Boolean).join("|")||l;i.push({fitId:l,originalFitId:o,groupKey:P,tag:r,orderType:S,tradeDate:u,tradeTimeKey:h,ticker:E,underlying:(N||E||"").toUpperCase(),optionType:x||(L?T&&T.includes("CALL")?"CALL":"PUT":""),strike:k,expiration:I,multiplier:w||(L?100:1),quantity:Math.abs(y),price:Math.abs(f),total:b,fees:Math.abs(C),side:v.side,action:v.action,category:L?"OPTION":"STOCK",securityId:p,memo:s(a,"MEMO")||"",currency:s(n,"CURSYM")||s(e,"CURSYM")||"USD"})}),i}sanitizeFitId(e){return e?e.toString().replace(/[^A-Za-z0-9]/g,""):""}groupTransactionsForImport(e=[]){const t=new Map;return e.forEach(e=>{if(!e||!e.groupKey)return;let i=t.get(e.groupKey);i||(i={key:e.groupKey,ticker:(e.underlying||e.ticker||"").toUpperCase(),transactions:[]},t.set(e.groupKey,i)),i.ticker||!e.underlying&&!e.ticker||(i.ticker=(e.underlying||e.ticker||"").toUpperCase()),i.transactions.push(e)}),t}buildLegFromTransaction(e){if(!e)return null;const t=Math.abs(Number(e.quantity)||0);if(!t)return null;const i=e.optionType||("STOCK"===e.category?"STOCK":"UNKNOWN");return{id:e.fitId?`FIT-${e.fitId}`:`LEG-${Date.now()}-${Math.random().toString(16).slice(2,6)}`,orderType:e.orderType,action:e.action,side:e.side,type:i,quantity:t,multiplier:e.multiplier||("STOCK"===i?1:100),executionDate:e.tradeDate||"",expirationDate:e.expiration||"",strike:Number.isFinite(Number(e.strike))?Number(e.strike):null,premium:Number.isFinite(Number(e.price))?Number(e.price):0,fees:Number.isFinite(Number(e.fees))?Number(e.fees):0,underlyingPrice:null,fitId:e.fitId||null,importGroupId:e.groupKey||null,importSource:"OFX",tickerSymbol:(e.underlying||e.ticker||"").toUpperCase()}}sanitizeImportedLeg(e){if(!e)return null;const t={...e};return delete t.tickerSymbol,t}buildPositionKey(e,t){if(!t)return"";const i=(e||"").toString().trim().toUpperCase();if(!i)return"";const r=(t.type||"").toString().trim().toUpperCase();if(!r)return"";const s="SELL"===this.normalizeLegAction(t.action)?"short":"long";if("STOCK"===r)return[i,r,s].join("|");return[i,r,(Number.isFinite(Number(t.strike))?Number(t.strike):0)||0,(t.expirationDate||"").toString().trim()||"",s].join("|")}buildPositionIndex(e=[]){const t=new Map;return e.forEach(e=>{if(!e||!Array.isArray(e.legs)||0===e.legs.length)return;const i=(e.ticker||"").toUpperCase();if(!i)return;const r=new Map;e.legs.forEach(e=>{if(!e)return;const t=this.buildPositionKey(i,e);if(!t)return;const s=Math.abs(Number(e.quantity)||0);if(!s)return;let n=0;if("OPEN"===e.side?n=1:"CLOSE"===e.side&&(n=-1),!n)return;const a=r.get(t)||0;r.set(t,a+n*s)}),r.forEach((i,r)=>{if(i>0){const s=t.get(r)||[];s.push({trade:e,remaining:i}),t.set(r,s)}})}),t}consumePositionMatches(e,t,i){const r={matched:[],unmatched:Math.abs(Number(i?.quantity)||0)};if(!t||!e.has(t)||!i)return r;let s=r.unmatched;const n=e.get(t)||[];n.forEach(e=>{if(s<=0||e.remaining<=0)return;const t=Math.min(e.remaining,s);r.matched.push({trade:e.trade,quantity:t}),e.remaining-=t,s-=t}),r.unmatched=s;const a=n.filter(e=>e.remaining>0);return a.length>0?e.set(t,a):e.delete(t),r}buildExistingFitIdSet(){const e=new Set;return this.trades.forEach(t=>{t&&Array.isArray(t.legs)&&t.legs.forEach(t=>{t?.fitId&&e.add(t.fitId)})}),e}tradeContainsFitId(e,t){return!!(t&&e&&Array.isArray(e.legs))&&e.legs.some(e=>e?.fitId&&e.fitId===t)}inferStrategyFromLegs(e=[]){if(!Array.isArray(e)||0===e.length)return"Imported Trade";const t=e.filter(e=>"OPEN"===e.side),i=t.length?t:e;if(1===i.length){const e=i[0];if(!e)return"Imported Trade";if("PUT"===e.type)return"SELL"===e.action?"Cash-Secured Put":"Long Put";if("CALL"===e.type)return"SELL"===e.action?"Short Call":"Long Call";if("STOCK"===e.type)return"SELL"===e.action?"Stock Sale":"Stock Purchase"}const r=i.filter(e=>"PUT"===e.type||"CALL"===e.type);if(2===r.length){const[e,t]=r;if(e&&t&&e.type===t.type){const e=r.find(e=>"SELL"===e.action);if(e){const t=r.find(t=>t!==e);if(t){const i=Number(e.strike)||0,r=Number(t.strike)||0;return"PUT"===e.type?i>r?"Bull Put Spread":"Bear Put Spread":i<r?"Bear Call Spread":"Bull Call Spread"}}}}return"Imported Multi-Leg"}composeImportNotes(e={},t={}){const i=e.fileName||"OFX file",r=new Date,s=[`Imported from ${i} on ${r.toLocaleDateString()} at ${r.toLocaleTimeString()}.`];return t.legCount&&s.push(`${t.legCount} leg${1===t.legCount?"":"s"} detected.`),t.hasClosings&&s.push("Includes adjustments to existing positions."),t.note&&s.push(t.note),s.join(" ")}buildOfxImportPayload(e,t={}){const i=Array.isArray(e?.transactions)?e.transactions:[],r=t.batchId||null,s=new Map,n=[],a=[],o={totalTransactions:i.length,totalGroups:0,openingLegs:0,closingLegs:0,matchedClosingLegs:0,unmatchedClosingLegs:0,duplicateLegs:0,legsAddedToUpdates:0,legsAddedToNewTrades:0,tradesCreated:0,reviewTradesCreated:0,totalTradesCreated:0,tradesUpdated:0,reviewLegs:0};if(!i.length)return{newTrades:n,updates:s,stats:o,batchId:r,reviewTradeIds:a};const l=this.groupTransactionsForImport(i),c=this.buildPositionIndex(this.trades),d=this.buildExistingFitIdSet(),u=new Set;return o.totalGroups=l.size,l.forEach(e=>{if(!e||!Array.isArray(e.transactions)||0===e.transactions.length)return;const i=[];if(e.transactions.forEach(e=>{const t=this.buildLegFromTransaction(e);t&&(t.fitId&&(d.has(t.fitId)||u.has(t.fitId))?o.duplicateLegs+=1:(r&&(t.importBatchId=r),i.push(t)))}),!i.length)return;const l=(e.ticker||i[0]?.tickerSymbol||"").toUpperCase(),m=i.filter(e=>"OPEN"===e.side),h=i.filter(e=>"CLOSE"===e.side),p=[];if(o.openingLegs+=m.length,o.closingLegs+=h.length,h.forEach(e=>{const t=this.buildPositionKey(l,e),i=this.consumePositionMatches(c,t,e);i.matched.length&&i.matched.forEach(t=>{const i=t.trade;if(this.tradeContainsFitId(i,e.fitId))return;if(e.fitId&&(d.has(e.fitId)||u.has(e.fitId)))return;const n=s.get(i.id)||[],a={...e,quantity:t.quantity};r&&(a.importBatchId=r),n.push(this.sanitizeImportedLeg(a)),s.set(i.id,n),o.legsAddedToUpdates+=1,o.matchedClosingLegs+=t.quantity});const n=Math.max(0,i.unmatched);if(!i.matched.length||n>0){const t={...e};n>0&&t.quantity!==n&&(t.quantity=n),i.matched.length&&t.fitId&&(t.fitId=`${t.fitId}-UNMATCHED`),r&&(t.importBatchId=r),p.push(t),o.unmatchedClosingLegs+=t.quantity||0}e.fitId&&u.add(e.fitId)}),m.length>0){const e=this.composeImportNotes(t,{legCount:m.length,hasClosings:h.length>0}),i=m.map(e=>(e.fitId&&u.add(e.fitId),this.sanitizeImportedLeg(e))),s=(l||m[0]?.tickerSymbol||"").toUpperCase()||"UNKNOWN",a=`IMP-${Date.now()}-${Math.random().toString(16).slice(2,8)}`;n.push({id:a,ticker:s,strategy:this.inferStrategyFromLegs(m),exitReason:"",notes:e,legs:i,cycleId:"",cycleType:"",cycleRole:"",importBatchId:r,importReview:!1}),o.tradesCreated+=1,o.legsAddedToNewTrades+=i.length}if(p.length>0){const e=this.composeImportNotes(t,{legCount:p.length,note:"Review required: closing legs have no matching open position."}),i=p.map(e=>(e.fitId&&u.add(e.fitId),this.sanitizeImportedLeg(e))),s=(l||p[0]?.tickerSymbol||"").toUpperCase()||"UNKNOWN",c=`IMP-REVIEW-${Date.now()}-${Math.random().toString(16).slice(2,8)}`;n.push({id:c,ticker:s,strategy:"Import Review",exitReason:"",notes:e,legs:i,cycleId:"",cycleType:"",cycleRole:"",importBatchId:r,importReview:!0}),a.push(c),o.reviewTradesCreated+=1,o.legsAddedToNewTrades+=i.length}}),o.totalTradesCreated=n.length,o.tradesUpdated=s.size,o.reviewLegs=n.filter(e=>e.importReview).reduce((e,t)=>e+(t.legs||[]).length,0),{newTrades:n,updates:s,stats:o,batchId:r,reviewTradeIds:a}}applyOfxImportResult(e,t={}){if(!e)return;const i=e.stats||{},r=e.batchId||t.batchId||null,s=Array.isArray(e.reviewTradeIds)?e.reviewTradeIds.slice():[];let n=0,a=0;e.updates instanceof Map&&e.updates.forEach((e,i)=>{if(!Array.isArray(e)||0===e.length)return;const r=this.trades.findIndex(e=>e.id===i);if(-1===r)return;const s=this.trades[r],n=[...s.legs,...e.map(e=>({...e}))],o=this.composeImportNotes(t,{legCount:e.length,note:"Existing trade updated from OFX import."}),l=this.enrichTradeData({...s,legs:n,notes:s.notes?`${s.notes}\n${o}`:o});this.trades[r]=l,a+=1}),Array.isArray(e.newTrades)&&e.newTrades.forEach(e=>{if(!e||!Array.isArray(e.legs)||0===e.legs.length)return;e.importReview&&!s.includes(e.id)&&s.push(e.id);const t=this.enrichTradeData(e);this.trades.push(t),n+=1});const o=t?.fileName||"OFX file";if(i.totalTradesCreated=i.totalTradesCreated??n,i.tradesUpdated=a,i.reviewTradesCreated=i.reviewTradesCreated??s.length,n||a){this.saveToStorage(),this.markUnsavedChanges(),this.updateDashboard();const e=[];n&&e.push(`${n} new trade${1===n?"":"s"}`),a&&e.push(`${a} trade${1===a?"":"s"} updated`);const t=e.length?`OFX import completed: ${e.join(", ")}.`:"OFX import completed.";this.showNotification(t,"success"),this.appendImportLog({type:"success",message:`${t} Source: ${o}.`,timestamp:new Date})}else this.showNotification("OFX import completed. No changes detected.","info"),this.appendImportLog({type:"info",message:`OFX import from ${o} completed with no changes.`,timestamp:new Date});this.updateImportSummary({fileName:o,batchId:r,stats:i,reviewTradeIds:s,timestamp:new Date}),this.renderImportSummary(),this.refreshImportMergeList(),this.initializeAIChat()}processLoadedData(e,t={}){if(!e||!Array.isArray(e.trades))throw new Error("Invalid data format");this.trades=e.trades.map(e=>{const t={...e};return t.tradeReasoning&&!t.notes&&(t.notes=t.tradeReasoning,delete t.tradeReasoning),this.enrichTradeData(t)}),t.fileName?this.currentFileName=t.fileName:this.currentFileName||(this.currentFileName="Unsaved Database"),this.hasUnsavedChanges=!1,this.updateUnsavedIndicator(),this.saveToStorage({fileName:this.currentFileName,source:t.source||"import"}),this.updateDashboard(),"trades-list"===this.currentView&&this.updateTradesList(),this.updateFileNameDisplay(),this.initializeAIChat(),this.importSummary=null,this.importMergeSelection.clear(),this.renderImportSummary(),this.refreshImportMergeList()}newDatabase(){this.hasUnsavedChanges&&!confirm("You have unsaved changes. Are you sure you want to create a new database?")||(this.trades=[],this.currentFileHandle=null,this.currentFileName="Unsaved Database",this.hasUnsavedChanges=!1,this.updateFileNameDisplay(),this.updateUnsavedIndicator(),this.saveToStorage({fileName:this.currentFileName}),this.updateDashboard(),this.showNotification("New database created","success"),this.initializeAIChat())}updateFileNameDisplay(){const e=document.getElementById("current-file-name");e&&(e.textContent=this.currentFileName,"Unsaved Database"===this.currentFileName?e.classList.add("is-unsaved"):e.classList.remove("is-unsaved"))}updateUnsavedIndicator(){const e=document.getElementById("unsaved-indicator");this.hasUnsavedChanges?e.classList.remove("hidden"):e.classList.add("hidden")}showLoadingIndicator(e="Loading..."){const t=document.getElementById("loading-indicator");t&&(t.textContent=e,t.classList.remove("hidden"))}hideLoadingIndicator(){const e=document.getElementById("loading-indicator");e&&e.classList.add("hidden")}showNotification(e,t="info"){"error"===t?alert(`Error: ${e}`):console.log(`${t.toUpperCase()}: ${e}`)}markUnsavedChanges(){this.hasUnsavedChanges=!0,this.updateUnsavedIndicator()}saveToStorage(e={}){try{const t={version:"2.4",timestamp:(new Date).toISOString(),fileName:e.fileName||this.currentFileName||"Unsaved Database",trades:this.trades};localStorage.setItem(LOCAL_STORAGE_KEY,JSON.stringify(t)),localStorage.removeItem(LEGACY_STORAGE_KEY)}catch(e){console.warn("Failed to save to localStorage:",e)}}async loadFromStorage(){try{const e=localStorage.getItem(LOCAL_STORAGE_KEY);if(e){const t=JSON.parse(e);if(t&&Array.isArray(t.trades))return this.trades=t.trades.map(e=>{const t={...e};return t.tradeReasoning&&!t.notes&&(t.notes=t.tradeReasoning),delete t.tradeReasoning,this.enrichTradeData(t)}),t.fileName&&(this.currentFileName=t.fileName),this.hasUnsavedChanges=!1,this.updateUnsavedIndicator(),this.updateFileNameDisplay(),this.updateDashboard(),!0}const t=localStorage.getItem(LEGACY_STORAGE_KEY);if(t){const e=JSON.parse(t);if(Array.isArray(e))return this.trades=e.map(e=>{const t={...e};return t.tradeReasoning&&!t.notes&&(t.notes=t.tradeReasoning),delete t.tradeReasoning,this.enrichTradeData(t)}),this.currentFileName="Unsaved Database",this.hasUnsavedChanges=!1,this.updateUnsavedIndicator(),this.saveToStorage({fileName:this.currentFileName}),this.updateFileNameDisplay(),this.updateDashboard(),!0}}catch(e){console.warn("Failed to load from localStorage:",e)}return!1}formatPercent(e,t="—"){const i=Number(e);return Number.isFinite(i)?`${i.toFixed(2)}%`:t}getStrategyDisplayName(e=""){const t=(e||"").toString().trim();return t?"PMCC"===t.toUpperCase()?"Poor Man's Covered Call":t:""}formatCycleDateRange(e,t,i){if(!e)return"—";const r=new Date(e),s=t?new Date(t):null,n=new Intl.DateTimeFormat("en-US",{month:"short",day:"numeric",year:"numeric"}),a=isNaN(r.getTime())?"—":n.format(r);let o;return o=s&&!isNaN(s.getTime())?n.format(s):i?"Present":"—",o?`${a} — ${o}`:a}escapeHTML(e){return null==e?"":e.toString().replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}formatCurrency(e){const t=Number(e);return Number.isFinite(t)?new Intl.NumberFormat("en-US",{style:"currency",currency:"USD"}).format(t):"—"}formatDate(e){const t=new Date(e);return isNaN(t.getTime())?"—":t.toLocaleDateString("en-US",{month:"short",day:"numeric",year:"numeric"})}}class LocalInsightsAgent{constructor(e){this.app=e,this.context={stats:null,openTrades:[],closedTrades:[]}}updateContext({stats:e,openTrades:t,closedTrades:i}={}){e&&(this.context.stats=e),Array.isArray(t)&&(this.context.openTrades=t),Array.isArray(i)&&(this.context.closedTrades=i)}hasTradeHistory(){return(this.context.openTrades?.length||0)>0||(this.context.closedTrades?.length||0)>0}getGreeting(){if(!this.hasTradeHistory())return"Hi! I'm your local AI coach. Add or import a few trades and I'll help you analyze risk and performance.";const e=this.context.stats;if(!e)return"Hi! I'm your local AI coach. Ask about performance, risk, or next steps.";const t=this.context.openTrades?.length||0;return`Hi! I'm your local AI coach. You have ${t} active ${1===t?"position":"positions"} and ${this.context.closedTrades?.length||0} closed trades with realised P&L of ${this.formatCurrency(e.totalPL)}.`}generateResponse(e=""){if(!e.trim())return"I can run a portfolio health check, review risk exposure, or suggest strategy adjustments. Try asking for a quick portfolio health check.";if(!this.hasTradeHistory())return"Log a few trades first and I'll start surfacing insights about risk, performance, and strategy.";const t=[],i=this.buildPerformanceSummary();i&&t.push(i);const r=this.buildRiskHeadline();r&&t.push(r);const s=this.buildStrategyHeadline();s&&t.push(s);const n=this.buildCoachingHighlight();return n&&t.push(n),t.length||t.push("Portfolio data is limited, but keep logging trades and I'll highlight trends as they emerge."),t.join("\n\n")}buildPerformanceSummary(){const e=this.context.stats;if(!e)return"";const t=this.context.closedTrades?.length||0;if(!t)return"No closed trades yet. Once you realize some P&L I'll summarize your performance here.";const i=Number.isFinite(e.winRate)?`${e.winRate.toFixed(1)}%`:"—",r=Number.isFinite(e.profitFactor)?e.profitFactor.toFixed(2):"—",s=Number.isFinite(e.totalROI)?`${e.totalROI.toFixed(2)}%`:"—";return`Closed trades: ${t}, realised P&L ${this.formatCurrency(e.totalPL)}, win rate ${i}, profit factor ${r}, total ROI ${s}.`}buildRiskHeadline(){const e=this.context.openTrades||[];if(!e.length)return"No open positions right now, so live risk exposure is minimal.";let t=0,i=0,r=null;if(e.forEach(e=>{const s=Math.max(0,Number(this.app.getCapitalAtRisk(e))||0);t+=s,s>i&&(i=s,r=e)}),!t)return"Open positions detected, but max risk looks minimal based on current data.";if(r&&t){const s=(i/t*100).toFixed(0),n=(r.ticker||"Unknown").toUpperCase();return`Open risk across ${e.length} ${1===e.length?"position":"positions"} is ${this.formatCurrency(t)}. ${n} carries the largest share at ${s}% of exposure.`}return`Open risk across ${e.length} ${1===e.length?"position":"positions"} is ${this.formatCurrency(t)}.`}buildStrategyHeadline(){const e=this.getStrategyBreakdown();if(!e.length)return"";const t=e[0];if(!t)return"";const i=t.trades>0?(t.wins/t.trades*100).toFixed(0):"0";return`${t.name} leads with ${this.formatCurrency(t.pl)} across ${t.trades} trades (win rate ${i}%).`}buildCoachingHighlight(){const e=this.context.stats;if(!e)return"";const t=(this.context.closedTrades||[]).filter(e=>e.pl<0),i=(this.context.closedTrades||[]).filter(e=>e.pl>0),r=(e,t)=>{if(!e.length)return NaN;return e.reduce((e,i)=>e+t(i),0)/e.length},s=r(t,e=>Number(e.daysHeld)||0),n=r(i,e=>Number(e.daysHeld)||0);if(Number.isFinite(s)&&Number.isFinite(n)){const e=s-n;if(e>=2)return`Losing trades stay open about ${Math.round(e)} days longer than winners—tighten exits to cut risk sooner.`;if(e<=-2)return`You let winners run roughly ${Math.round(Math.abs(e))} days longer than losers—keep scaling out to lock in gains.`}return Number.isFinite(e.winRate)&&e.winRate<45&&(this.context.closedTrades?.length||0)>=5?"Win rate is under 45%. Focus on highest-conviction setups or scale size down until consistency improves.":""}getStrategyBreakdown(){const e=new Map;return(this.context.closedTrades||[]).forEach(t=>{const i=(t.strategy||"Unclassified").toString().trim()||"Unclassified";e.has(i)||e.set(i,{name:i,pl:0,trades:0,wins:0,losses:0});const r=e.get(i),s=Number(t.pl)||0;r.pl+=s,r.trades+=1,s>0?r.wins+=1:s<0&&(r.losses+=1)}),Array.from(e.values()).sort((e,t)=>t.pl-e.pl)}formatCurrency(e){return this.app.formatCurrency(e)}}class GeminiInsightsAgent{constructor(e){this.app=e,this.context={stats:null,openTrades:[],closedTrades:[]},this.fallback=new LocalInsightsAgent(e)}updateContext({stats:e,openTrades:t,closedTrades:i}={}){e&&(this.context.stats=e),Array.isArray(t)&&(this.context.openTrades=t),Array.isArray(i)&&(this.context.closedTrades=i),this.fallback.updateContext({stats:this.context.stats,openTrades:this.context.openTrades,closedTrades:this.context.closedTrades})}getGreeting(){return this.isConfigured()?this.fallback.getGreeting():"Connect your Gemini API key in [Settings](#settings) to get tailored analysis."}isConfigured(){const e=this.app?.gemini;return Boolean(e&&e.apiKey)}async generateResponse(e="",t={}){const i=e.trim();if(!i)return"Ask a question and I'll send it to Gemini along with a snapshot of your portfolio.";if(!this.isConfigured())return"Add a Gemini-compatible API key under [Settings](#settings) to enable AI-powered insights.";try{const e=this.buildRequestPayload(i,t),r=await this.callGemini(e);if(r)return r;throw new Error("Gemini returned an empty response")}catch(t){const i=this.fallback.generateResponse(e),r=t?.message||"Unknown error";return i?`Gemini request failed (${r}). Here's a local snapshot instead:\n\n${i}`:`Gemini request failed (${r}). Try again in a moment.`}}buildRequestPayload(e,t={}){const i=this.app?.gemini||{},r=GEMINI_ALLOWED_MODELS.includes(i.model)?i.model:"gemini-2.5-flash",s=.25,n=this.buildContextBlock(),a=[...this.buildHistoryContents(t.history||[]),{role:"user",parts:[{text:["# ROLE & PHILOSOPHY","You are an expert options trading coach. Your philosophy is rooted in rigorous risk management, capital preservation, and generating consistent returns. You are assisting an intermediate trader who wants to refine their strategy and tighten their risk controls. Your goal is to provide a concise, data-driven portfolio health check that identifies key risks and offers actionable, educational insights.","# CONTEXT: PORTFOLIO DATA",n,"# TRADER'S OBJECTIVE",e,"# ANALYSIS FRAMEWORK & INSTRUCTIONS",'1.  **Acknowledge Strengths:** Briefly highlight the **strong overall performance** (e.g., win rate, profit factor, successful strategies).\n2.  **Prioritize Top Risks:** Scrutinize the data to identify and explain the **top 2-3 risks**. In addition to the systemic risks below, **identify open positions near expiration (low DTE) or those with previous rolls/adjustments (in the "notes") as potential immediate risks.** Focus specifically on:\n    * **Concentration Risk:** Explicitly cite and explain the **`riskHeadline`**.\n    * **Behavioral Risk:** Connect the **`coachingHighlight`** to the risk.\n3.  **Provide Actionable Recommendations:** Based on the identified risks, provide **clear, bulleted recommendations**. Link them directly to the data.\n    * Suggest a specific rule for **position sizing**.\n    * Propose a concrete action to address the **behavioral risk**.\n4.  **Suggest Next Steps:** Conclude with **2-3 forward-looking actions** for process improvement.',"# OUTPUT FORMATTING","- **Tone:** Professional, direct, and risk-aware coach.\n- **Length:** Keep the response under 400 words.\n- **Structure:** Use bullet points for recommendations and next steps.\n- **Disclaimer:** End with a clear statement that this is educational analysis, not financial advice."].join("\n\n")}]}],o={maxOutputTokens:65536};return o.temperature=Number(s.toFixed(2)),{model:r,body:{contents:a,generationConfig:o}}}buildHistoryContents(e){return Array.isArray(e)&&0!==e.length?e.filter(e=>e&&!e.pending&&"string"==typeof e.text&&e.text.trim().length).slice(-8).map(e=>({role:"ai"===e.sender?"model":"user",parts:[{text:e.text.trim()}]})):[]}buildContextBlock(){const e=this.context.stats||{},t={totals:{totalPL:this.formatNumber(e.totalPL,{style:"currency"}),winRate:this.formatNumber(e.winRate,{style:"percent"}),profitFactor:this.formatNumber(e.profitFactor),totalROI:this.formatNumber(e.totalROI,{style:"percent"}),annualizedROI:this.formatNumber(e.annualizedROI,{style:"percent"}),maxDrawdown:this.formatNumber(e.maxDrawdown,{style:"percent"}),closedTrades:e.closedTrades??(this.context.closedTrades?.length||0),openPositions:e.activePositions??(this.context.openTrades?.length||0)},riskHeadline:this.fallback.buildRiskHeadline(),strategyHighlight:this.fallback.buildStrategyHeadline(),coachingHighlight:this.fallback.buildCoachingHighlight(),performanceHighlight:this.fallback.buildPerformanceSummary?.()||"",openPositions:this.buildOpenPositionsSummary(),recentClosedTrades:this.buildRecentClosedTradesSummary(),topStrategies:this.buildStrategySummary(),cycles:this.buildCycleSummary()};return JSON.stringify(t,null,2)}buildOpenPositionsSummary(e=8){return(Array.isArray(this.context.openTrades)?this.context.openTrades:[]).slice(0,e).map(e=>{const t=this.snapshotObjectForPrompt(e),i={},r=Number.isFinite(e?.dte)?Number(e.dte):this.deriveDTE(e);Number.isFinite(r)&&(i.calculatedDTE=Math.max(Math.round(r),0));const s=Number(this.app.getCapitalAtRisk(e));Number.isFinite(s)&&(i.calculatedMaxRisk=Number(s.toFixed(2)));const n=this.cleanNote(e?.notes);return n&&(i.notePreview=n),Object.keys(i).length&&(t.__promptDerived=i),t})}deriveDTE(e){if(!e?.expirationDate)return null;try{return this.app.calculateDTE(e.expirationDate,e)}catch(e){return null}}buildRecentClosedTradesSummary(e=8){return(Array.isArray(this.context.closedTrades)?[...this.context.closedTrades]:[]).sort((e,t)=>new Date(t.exitDate||0)-new Date(e.exitDate||0)).slice(0,e).map(e=>{const t=this.snapshotObjectForPrompt(e),i={plRounded:this.formatNumber(e?.pl,{style:"currency"}),roiRounded:this.formatNumber(e?.roi,{style:"percent"})},r=this.cleanNote(e?.exitReason);return r&&(i.exitReasonPreview=r),Number.isFinite(e?.daysHeld)&&(i.daysHeld=Number(e.daysHeld)),t.__promptDerived=Object.fromEntries(Object.entries(i).filter(([,e])=>null!=e)),Object.keys(t.__promptDerived).length||delete t.__promptDerived,t})}buildStrategySummary(e=5){return this.fallback.getStrategyBreakdown().slice(0,e).map(e=>({name:e.name,trades:e.trades,wins:e.wins,losses:e.losses,realisedPL:this.formatNumber(e.pl,{style:"currency"}),winRate:e.trades>0?this.formatNumber(e.wins/e.trades*100,{style:"percent"}):null}))}buildCycleSummary(e=3){return(Array.isArray(this.app.cycleAnalytics)&&this.app.cycleAnalytics.length?this.app.cycleAnalytics:this.app.calculateCycleAnalytics()).slice(0,e).map(e=>{const t=this.snapshotObjectForPrompt(e),i={tradeCount:Array.isArray(e?.trades)?e.trades.length:0,totalPLRounded:this.formatNumber(e?.totalPL,{style:"currency"}),roiPercentRounded:this.formatNumber(e?.roiPercent,{style:"percent"}),keyMetricLabel:e?.keyMetricLabel||null,keyMetricValueRounded:this.formatCycleMetricValue(e?.keyMetricValue,e?.keyMetricLabel),timelineLabel:this.app.formatCycleDateRange(e?.startDate,e?.endDate,e?.hasOpenTrade)};return t.__promptDerived=Object.fromEntries(Object.entries(i).filter(([,e])=>null!=e)),Object.keys(t.__promptDerived).length||delete t.__promptDerived,t})}snapshotObjectForPrompt(e){const t=this.snapshotForPrompt(e);return t&&"object"==typeof t&&!Array.isArray(t)?t:{}}snapshotForPrompt(e){if(null==e)return null;if("number"==typeof e)return Number.isFinite(e)?Number(e):null;if("string"==typeof e||"boolean"==typeof e)return e;if(e instanceof Date)return e.toISOString();if(Array.isArray(e))return e.map(e=>this.snapshotForPrompt(e));if("object"==typeof e){const t={};for(const[i,r]of Object.entries(e))"function"!=typeof r&&(t[i]=this.snapshotForPrompt(r));return t}return null}cleanNote(e){if(!e)return"";const t=e.toString().trim();return t.length<=180?t:`${t.slice(0,177)}…`}formatNumber(e,t={}){const i=Number(e);if(!Number.isFinite(i))return null;const r=t.style||"number";return"currency"===r?new Intl.NumberFormat("en-US",{style:"currency",currency:"USD",minimumFractionDigits:2,maximumFractionDigits:2}).format(i):"percent"===r?`${i.toFixed(2)}%`:"string"===r?i.toFixed(2):Number(i.toFixed(2))}formatCycleMetricValue(e,t=""){const i=(t||"").toString().toLowerCase();return i?/(%|percent|roi|return|drawdown|rate|yield)/.test(i)?this.formatNumber(e,{style:"percent"}):/(\$|pl|p&l|profit|premium|risk|cost|credit|debit|revenue|balance|capital|cash|amount|value|exposure|loss)/.test(i)?this.formatNumber(e,{style:"currency"}):this.formatNumber(e):this.formatNumber(e)}async callGemini({model:e,body:t}){const i=this.app?.gemini?.apiKey;if(!i)throw new Error("Missing Gemini API key");const r=DEFAULT_GEMINI_ENDPOINT.replace(/\/+$/,""),s=(e||"gemini-2.5-flash").replace(/^models\//i,""),n=`${`${r}/${encodeURIComponent(s)}:generateContent`}?key=${encodeURIComponent(i)}`,a="undefined"!=typeof AbortController?new AbortController:null,o=a?setTimeout(()=>a.abort(),2e4):null;try{const e=await fetch(n,{method:"POST",headers:{"Content-Type":"application/json","x-goog-api-key":i},body:JSON.stringify(t),signal:a?.signal}),r=await e.json().catch(()=>({}));if(!e.ok){const t=r?.error?.message||r?.message||`HTTP ${e.status}`;throw new Error(t)}if(r?.promptFeedback?.blockReason)throw new Error(`Request blocked (${r.promptFeedback.blockReason})`);const s=r?.candidates?.[0]?.content?.parts;if(!Array.isArray(s)||!s.length)return"";return s.map(e=>e&&"string"==typeof e.text?e.text:"").join("").trim()}finally{o&&clearTimeout(o)}}}document.addEventListener("DOMContentLoaded",function(){window.tracker=new GammaLedger});